BEGIN axi_aes

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VERILOG
OPTION USAGE_LEVEL = BASE_USER
#OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = platgen_update
OPTION RUN_NGCBUILD = TRUE
OPTION STYLE = HDL
#OPTION ADDITIONAL_OUTPUTS = CONSTRAINTS
#OPTION DATASHEET_NAME = pg021_axi_dma
OPTION DESC = AXI AES Engine
OPTION LONG_DESC = AXI AES Engine
OPTION IP_GROUP = DMA and Timer:MICROBLAZE:ARM-A9
#OPTION DATASHEET_NAME = pg021_axi_dma
OPTION ARCH_SUPPORT_MAP = (spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRODUCTION, virtex6lsx=PRODUCTION, qspartan6l=PRODUCTION, qvirtex6lx=PRODUCTION, qvirtex6sx=PRODUCTION, qvirtex6fx=PRODUCTION, qvirtex6tx=PRODUCTION, virtex7=PRODUCTION, kintex7=PRODUCTION, artix7=PRE_PRODUCTION, zynq=PRE_PRODUCTION, virtex7l=PRE_PRODUCTION, kintex7l=PRE_PRODUCTION, aartix7=PRE_PRODUCTION, artix7l=PRE_PRODUCTION, virtex7ht=PRE_PRODUCTION, qvirtex7=PRE_PRODUCTION, qkintex7=PRE_PRODUCTION, qkintex7l=PRE_PRODUCTION, qartix7=PRE_PRODUCTION, qartix7l=PRE_PRODUCTION, azynq=PRE_PRODUCTION, qzynq=PRE_PRODUCTION, qvirtex7l=PRE_PRODUCTION)


## Bus Interfaces
BUS_INTERFACE BUS = S_AXI_LITE, BUS_STD = AXI, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = M_AXIS_MM2S, BUS_STD = AXIS, BUS_TYPE = TARGET
BUS_INTERFACE BUS = S_AXIS_S2MM, BUS_STD = AXIS, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = M_AXIS_MM2S_CNTRL, BUS_STD = AXIS, BUS_TYPE = TARGET 
BUS_INTERFACE BUS = S_AXIS_S2MM_STS, BUS_STD = AXIS, BUS_TYPE = INITIATOR

## Generics for VHDL or Parameters for Verilog
PARAMETER C_S_AXI_LITE_ADDR_WIDTH = 10, DT = INTEGER, RANGE = (10), ASSIGNMENT = CONSTANT, BUS = S_AXI_LITE
PARAMETER C_S_AXI_LITE_DATA_WIDTH = 32, DT = INTEGER, RANGE = (32), ASSIGNMENT = CONSTANT, BUS = S_AXI_LITE


PARAMETER C_FAMILY = virtex6, DT = STRING
PARAMETER C_INSTANCE = axi_aes, DT = STRING
PARAMETER C_BASEADDR = 0xffffffff, DT = STD_LOGIC_VECTOR(31 downto 0), PAIR = C_HIGHADDR, ADDRESS = BASE, BUS = S_AXI_LITE, MIN_SIZE = 0x1000, ASSIGNMENT = REQUIRE, TYPE = NON_HDL
PARAMETER C_HIGHADDR = 0x00000000, DT = STD_LOGIC_VECTOR(31 downto 0), PAIR = C_BASEADDR, ADDRESS = HIGH, BUS = S_AXI_LITE, ASSIGNMENT = REQUIRE, TYPE = NON_HDL
PARAMETER C_S_AXI_LITE_PROTOCOL = AXI4LITE, DT = STRING, BUS = S_AXI_LITE, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_S_AXI_LITE_SUPPORTS_READ = 1, DT = INTEGER, BUS = S_AXI_LITE, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_S_AXI_LITE_SUPPORTS_WRITE = 1, DT = INTEGER, BUS = S_AXI_LITE, ASSIGNMENT = CONSTANT, TYPE = NON_HDL

PARAMETER C_M_AXIS_MM2S_TDATA_WIDTH = 32, DT = INTEGER, RANGE = (8,16,32,64,128,256,512,1024), BUS = M_AXIS_MM2S
PARAMETER C_M_AXIS_MM2S_CNTRL_TDATA_WIDTH = 32, DT = INTEGER, RANGE = (32), BUS = M_AXIS_MM2S_CNTRL, ASSIGNMENT = CONSTANT
PARAMETER C_M_AXIS_MM2S_CNTRL_PROTOCOL = XIL_AXI_STREAM_ETH_CTRL, DT = STRING, BUS = M_AXIS_MM2S_CNTRL, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_M_AXIS_MM2S_PROTOCOL = XIL_AXI_STREAM_ETH_DATA, DT = STRING, BUS = M_AXIS_MM2S, ASSIGNMENT = CONSTANT, TYPE = NON_HDL

PARAMETER C_S_AXIS_S2MM_STS_TDATA_WIDTH = 32, DT = INTEGER, RANGE = (32), BUS = S_AXIS_S2MM_STS, ASSIGNMENT = CONSTANT
PARAMETER C_S_AXIS_S2MM_TDATA_WIDTH = 32, DT = INTEGER, RANGE = (8,16,32,64,128,256,512,1024), BUS = S_AXIS_S2MM
PARAMETER C_S_AXIS_S2MM_STS_PROTOCOL = XIL_AXI_STREAM_ETH_CTRL, DT = STRING, BUS = S_AXIS_S2MM_STS, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_S_AXIS_S2MM_PROTOCOL = XIL_AXI_STREAM_ETH_DATA, DT = STRING, BUS = S_AXIS_S2MM, ASSIGNMENT = CONSTANT, TYPE = NON_HDL


PARAMETER C_GENERIC = 0, DT = INTEGER, RANGE = (0,1), TYPE = NON_HDL

## Ports
PORT s_axi_lite_aclk = "", DIR = I, SIGIS = CLK, BUS = S_AXI_LITE
PORT m_axi_mm2s_aclk = "", DIR = I, SIGIS = CLK, BUS = M_AXIS_MM2S:M_AXIS_MM2S_CNTRL
PORT m_axi_s2mm_aclk = "", DIR = I, SIGIS = CLK, BUS = S_AXIS_S2MM:S_AXIS_S2MM_STS

PORT axi_resetn = ARESETN, DIR = I, SIGIS = RST, BUS = S_AXI_LITE:S_AXIS_S2MM_STS:M_AXIS_MM2S_CNTRL:M_AXIS_MM2S:S_AXIS_S2MM

PORT s_axi_lite_awvalid = AWVALID, DIR = I, BUS = S_AXI_LITE
PORT s_axi_lite_awready = AWREADY, DIR = O, BUS = S_AXI_LITE
PORT s_axi_lite_awaddr = AWADDR, DIR = I, VEC = [C_S_AXI_LITE_ADDR_WIDTH-1:0], BUS = S_AXI_LITE, ENDIAN = LITTLE
PORT s_axi_lite_wvalid = WVALID, DIR = I, BUS = S_AXI_LITE
PORT s_axi_lite_wready = WREADY, DIR = O, BUS = S_AXI_LITE
PORT s_axi_lite_wdata = WDATA, DIR = I, VEC = [C_S_AXI_LITE_DATA_WIDTH-1:0], BUS = S_AXI_LITE, ENDIAN = LITTLE
PORT s_axi_lite_bresp = BRESP, DIR = O, VEC = [1:0], BUS = S_AXI_LITE, ENDIAN = LITTLE
PORT s_axi_lite_bvalid = BVALID, DIR = O, BUS = S_AXI_LITE
PORT s_axi_lite_bready = BREADY, DIR = I, BUS = S_AXI_LITE
PORT s_axi_lite_arvalid = ARVALID, DIR = I, BUS = S_AXI_LITE
PORT s_axi_lite_arready = ARREADY, DIR = O, BUS = S_AXI_LITE
PORT s_axi_lite_araddr = ARADDR, DIR = I, VEC = [C_S_AXI_LITE_ADDR_WIDTH-1:0], BUS = S_AXI_LITE, ENDIAN = LITTLE
PORT s_axi_lite_rvalid = RVALID, DIR = O, BUS = S_AXI_LITE
PORT s_axi_lite_rready = RREADY, DIR = I, BUS = S_AXI_LITE
PORT s_axi_lite_rdata = RDATA, DIR = O, VEC = [C_S_AXI_LITE_DATA_WIDTH-1:0], BUS = S_AXI_LITE, ENDIAN = LITTLE
PORT s_axi_lite_rresp = RRESP, DIR = O, VEC = [1:0], BUS = S_AXI_LITE, ENDIAN = LITTLE

PORT mm2s_prmry_reset_out_n = RESET_OUT_N, DIR = I
PORT m_axis_mm2s_tdata = TDATA, DIR = I, VEC = [C_M_AXIS_MM2S_TDATA_WIDTH-1:0], BUS = M_AXIS_MM2S, ENDIAN = LITTLE
PORT m_axis_mm2s_tkeep = TKEEP, DIR = I, VEC = [(C_M_AXIS_MM2S_TDATA_WIDTH/8)-1:0], BUS = M_AXIS_MM2S, ENDIAN = LITTLE
PORT m_axis_mm2s_tvalid = TVALID, DIR = I, BUS = M_AXIS_MM2S
PORT m_axis_mm2s_tready = TREADY, DIR = O, BUS = M_AXIS_MM2S
PORT m_axis_mm2s_tlast = TLAST, DIR = I, BUS = M_AXIS_MM2S
PORT m_axis_mm2s_tuser = TUSER, DIR = I, VEC = [3:0], BUS = M_AXIS_MM2S, ENDIAN = LITTLE
PORT m_axis_mm2s_tid = TID, DIR = I, VEC = [4:0], BUS = M_AXIS_MM2S, ENDIAN = LITTLE
PORT m_axis_mm2s_tdest = TDEST, DIR = I, VEC = [4:0], BUS = M_AXIS_MM2S, ENDIAN = LITTLE

PORT mm2s_cntrl_reset_out_n = RESET_OUT_N, DIR = I
PORT m_axis_mm2s_cntrl_tdata = TDATA, DIR = I, VEC = [C_M_AXIS_MM2S_CNTRL_TDATA_WIDTH-1:0], BUS = M_AXIS_MM2S_CNTRL, ENDIAN = LITTLE
PORT m_axis_mm2s_cntrl_tkeep = TKEEP, DIR = I, VEC = [(C_M_AXIS_MM2S_CNTRL_TDATA_WIDTH/8)-1:0], BUS = M_AXIS_MM2S_CNTRL, ENDIAN = LITTLE
PORT m_axis_mm2s_cntrl_tvalid = TVALID, DIR = I, BUS = M_AXIS_MM2S_CNTRL
PORT m_axis_mm2s_cntrl_tready = TREADY, DIR = O, BUS = M_AXIS_MM2S_CNTRL
PORT m_axis_mm2s_cntrl_tlast = TLAST, DIR = I, BUS = M_AXIS_MM2S_CNTRL

PORT s2mm_prmry_reset_out_n = RESET_OUT_N, DIR = I
PORT s_axis_s2mm_tdata = TDATA, DIR = O, VEC = [C_S_AXIS_S2MM_TDATA_WIDTH-1:0], BUS = S_AXIS_S2MM, ENDIAN = LITTLE
PORT s_axis_s2mm_tkeep = TKEEP, DIR = O, VEC = [(C_S_AXIS_S2MM_TDATA_WIDTH/8)-1:0], BUS = S_AXIS_S2MM, ENDIAN = LITTLE
PORT s_axis_s2mm_tvalid = TVALID, DIR = O, BUS = S_AXIS_S2MM
PORT s_axis_s2mm_tready = TREADY, DIR = I, BUS = S_AXIS_S2MM
PORT s_axis_s2mm_tlast = TLAST, DIR = O, BUS = S_AXIS_S2MM
PORT s_axis_s2mm_tuser = TUSER, DIR = O, VEC = [3:0], BUS = S_AXIS_S2MM, ENDIAN = LITTLE
PORT s_axis_s2mm_tid = TID, DIR = O, VEC = [4:0], BUS = S_AXIS_S2MM, ENDIAN = LITTLE
PORT s_axis_s2mm_tdest = TDEST, DIR = O, VEC = [4:0], BUS = S_AXIS_S2MM, ENDIAN = LITTLE

PORT s2mm_sts_reset_out_n = RESET_OUT_N, DIR = I
PORT s_axis_s2mm_sts_tdata = TDATA, DIR = O, VEC = [C_S_AXIS_S2MM_STS_TDATA_WIDTH-1:0], BUS = S_AXIS_S2MM_STS, ENDIAN = LITTLE
PORT s_axis_s2mm_sts_tkeep = TKEEP, DIR = O, VEC = [(C_S_AXIS_S2MM_STS_TDATA_WIDTH/8)-1:0], BUS = S_AXIS_S2MM_STS, ENDIAN = LITTLE
PORT s_axis_s2mm_sts_tvalid = TVALID, DIR = O, BUS = S_AXIS_S2MM_STS
PORT s_axis_s2mm_sts_tready = TREADY, DIR = I, BUS = S_AXIS_S2MM_STS
PORT s_axis_s2mm_sts_tlast = TLAST, DIR = O, BUS = S_AXIS_S2MM_STS

PORT mm2s_intr = mm2s_intr, DIR = I
PORT s2mm_intr = s2mm_intr, DIR = I
PORT axi_intr = axi_intr, DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH

END
