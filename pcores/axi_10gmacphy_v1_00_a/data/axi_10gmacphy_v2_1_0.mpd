BEGIN axi_10gmacphy

## Peripheral Options
OPTION STYLE = HDL
OPTION RUN_NGCBUILD = TRUE
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VERILOG
OPTION USAGE_LEVEL = BASE_USER
OPTION DESC = AXI Ethernet Embedded IP
OPTION ARCH_SUPPORT_MAP = (spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRODUCTION, virtex6lsx=PRODUCTION, qspartan6l=PRODUCTION, qvirtex6lx=PRODUCTION, qvirtex6sx=PRODUCTION, qvirtex6fx=PRODUCTION, qvirtex6tx=PRODUCTION, virtex7=PRODUCTION, kintex7=PRODUCTION, artix7=PRE_PRODUCTION, zynq=PRE_PRODUCTION, virtex7l=PRE_PRODUCTION, kintex7l=PRE_PRODUCTION, aartix7=PRE_PRODUCTION, artix7l=PRE_PRODUCTION, virtex7ht=PRE_PRODUCTION, qvirtex7=PRE_PRODUCTION, qkintex7=PRE_PRODUCTION, qkintex7l=PRE_PRODUCTION, qartix7=PRE_PRODUCTION, qartix7l=PRE_PRODUCTION, azynq=PRE_PRODUCTION, qzynq=PRE_PRODUCTION, qvirtex7l=PRE_PRODUCTION)

## Bus Interfaces
#BUS_INTERFACE BUS = S_AXI, BUS_STD = AXI, BUS_TYPE = SLAVE

## Generics for VHDL or Parameters for Verilog
#PARAMETER C_S_AXI_PROTOCOL = AXI4LITE, DT = STRING, BUS = S_AXI, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_FAMILY = virtex6, DT = STRING
PARAMETER EXAMPLE_SIM_GTRESET_SPEEDUP = "FALSE", DT = STRING
#PARAMETER C_S_AXI_ACLK_FREQ_HZ = 100000000, DT = INTEGER, BUS = S_AXI, IO_IS = clk_freq, CLK_PORT = S_AXI_ACLK, CLK_UNIT = HZ, ASSIGNMENT = REQUIRE
#PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector(31 downto 0), PAIR = C_HIGHADDR, ADDRESS = BASE, BUS = S_AXI, MIN_SIZE = 0x40000, ASSIGNMENT = REQUIRE, TYPE = NON_HDL
#PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector(31 downto 0), PAIR = C_BASEADDR, ADDRESS = HIGH, BUS = S_AXI, ASSIGNMENT = REQUIRE, TYPE = NON_HDL
#PARAMETER C_S_AXI_ADDR_WIDTH = 32, DT = INTEGER, BUS = S_AXI, ASSIGNMENT = CONSTANT
#PARAMETER C_S_AXI_DATA_WIDTH = 32, DT = INTEGER, BUS = S_AXI, ASSIGNMENT = CONSTANT
#PARAMETER C_S_AXI_ID_WIDTH = 16, BUS = S_AXI, DT = INTEGER, ASSIGNMENT = UPDATE

# GTX
PORT refclk_p = "", DIR = I, SIGIS = CLK
PORT refclk_n = "", DIR = I, SIGIS = CLK

PORT reset    = "", DIR = I, SIGIS = RST
PORT rxp      = "", DIR = I
PORT rxn      = "", DIR = I
PORT txp      = "", DIR = O
PORT txn      = "", DIR = O

PORT signal_detect = "", DIR = I
PORT tx_fault      = "", DIR = I
PORT sfp_rs        = "", DIR = O
PORT tx_disable    = "", DIR = O

## Ports
#PORT S_AXI_ACLK = "", DIR = I, BUS = S_AXI, SIGIS = CLK
#PORT S_AXI_ARESETN = ARESETN, DIR = I, BUS = S_AXI:AXI_STR_TXC:AXI_STR_TXD:AXI_STR_RXS:AXI_STR_RXD, SIGIS = RST
#PORT S_AXI_AWADDR = AWADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
#PORT S_AXI_AWVALID = AWVALID, DIR = I, BUS = S_AXI
#PORT S_AXI_AWREADY = AWREADY, DIR = O, BUS = S_AXI
#PORT S_AXI_WDATA = WDATA, DIR = I, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
#PORT S_AXI_WSTRB = WSTRB, DIR = I, VEC = [((C_S_AXI_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, BUS = S_AXI
#PORT S_AXI_WVALID = WVALID, DIR = I, BUS = S_AXI
#PORT S_AXI_WREADY = WREADY, DIR = O, BUS = S_AXI
#PORT S_AXI_BRESP = BRESP, DIR = O, VEC = [1:0], BUS = S_AXI
#PORT S_AXI_BVALID = BVALID, DIR = O, BUS = S_AXI
#PORT S_AXI_BREADY = BREADY, DIR = I, BUS = S_AXI
#PORT S_AXI_ARADDR = ARADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
#PORT S_AXI_ARVALID = ARVALID, DIR = I, BUS = S_AXI
#PORT S_AXI_ARREADY = ARREADY, DIR = O, BUS = S_AXI
#PORT S_AXI_RDATA = RDATA, DIR = O, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
#PORT S_AXI_RRESP = RRESP, DIR = O, VEC = [1:0], BUS = S_AXI
#PORT S_AXI_RVALID = RVALID, DIR = O, BUS = S_AXI
#PORT S_AXI_RREADY = RREADY, DIR = I, BUS = S_AXI

BUS_INTERFACE BUS = DEVICE_IF, BUS_TYPE = TARGET, BUS_STD = IPIF_IF
PORT bus2ip_clk  = bus2ip_clk,     DIR = I, SIGIS = CLK
PORT bus2ip_reset= bus2ip_reset,   DIR = I, SIGIS = CLK

PORT bus2ip_addr = bus2ip_addr,    DIR = I, BUS = DEVICE_IF, VEC = [10:0], ENDIAN = LITTLE, INITIALVAL = GND
PORT bus2ip_cs   = bus2ip_cs,      DIR = I, BUS = DEVICE_IF, INITIALVAL = GND
PORT bus2ip_rnw  = bus2ip_rnw,     DIR = I, BUS = DEVICE_IF, INITIALVAL = VCC
PORT bus2ip_data = bus2ip_data,    DIR = I, BUS = DEVICE_IF, VEC = [31:0], ENDIAN = LITTLE, INITIALVAL = GND
PORT ip2bus_data = ip2bus_data,    DIR = O, BUS = DEVICE_IF, VEC = [31:0], ENDIAN = LITTLE
PORT ip2bus_error= ip2bus_error,   DIR = O, BUS = DEVICE_IF
PORT ip2bus_rdack= ip2bus_rdack,   DIR = O, BUS = DEVICE_IF
PORT ip2bus_wrack= ip2bus_wrack,   DIR = O, BUS = DEVICE_IF

BUS_INTERFACE BUS = AXI_MAC_TX, BUS_STD = AXIS, BUS_TYPE = TARGET
BUS_INTERFACE BUS = AXI_MAC_RX, BUS_STD = AXIS, BUS_TYPE = INITIATOR

PORT rx_mac_aclk  = CLK,       DIR = O, SIGIS = CLK, BUS = AXI_MAC_RX
PORT rx_reset     = RESET,     DIR = O, SIGIS = RST, BUS = AXI_MAC_RX

PORT rx_axis_tvalid= TVALID,   DIR = O, BUS = AXI_MAC_RX
PORT rx_axis_tready= TREADY,   DIR = I, BUS = AXI_MAC_RX
PORT rx_axis_tdata = TDATA,    DIR = O, BUS = AXI_MAC_RX, VEC = [63:0], ENDIAN = LITTLE
PORT rx_axis_tkeep = TKEEP,    DIR = O, BUS = AXI_MAC_RX, VEC = [7:0], ENDIAN = LITTLE
PORT rx_axis_tlast = TLAST,    DIR = O, BUS = AXI_MAC_RX
PORT rx_axis_tuser = TUSER,    DIR = O, BUS = AXI_MAC_RX

PORT tx_mac_aclk   = CLK,      DIR = O, SIGIS = CLK, BUS = AXI_MAC_TX
PORT tx_reset      = RESET,    DIR = O, SIGIS = RST, BUS = AXI_MAC_TX

PORT tx_axis_tdata = TDATA,    DIR = I, BUS = AXI_MAC_TX, VEC = [63:0], ENDIAN = LITTLE
PORT tx_axis_tvalid= TVALID,   DIR = I, BUS = AXI_MAC_TX
PORT tx_axis_tkeep = TKEEP,    DIR = I, BUS = AXI_MAC_TX, VEC = [7:0], ENDIAN = LITTLE
PORT tx_axis_tlast = TLAST,    DIR = I, BUS = AXI_MAC_TX
PORT tx_axis_tready= TREADY,   DIR = O, BUS = AXI_MAC_TX
PORT tx_axis_tuser = TUSER,    DIR = I, BUS = AXI_MAC_TX

END
