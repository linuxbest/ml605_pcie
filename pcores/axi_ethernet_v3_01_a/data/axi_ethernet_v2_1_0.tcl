###############################################################################
##
## Copyright (c) 2007 Xilinx, Inc. All Rights Reserved.
##
## axi_ethernet_v2_1_0.tcl
##
###############################################################################

## @BEGIN_CHANGELOG EDK_K_SP2
##
## - added more checks for PHY interface ports
##
## @END_CHANGELOG


## @BEGIN_CHANGELOG EDK_Jm
##
## - initial 1.00a version
##
## @END_CHANGELOG

#***--------------------------------***-----------------------------------***
#
#          IPLEVEL_DRC_PROC
#
#***--------------------------------***-----------------------------------***

#-----------------------------------------
# C_TYPE = 0 - Soft TEMAC 10/100 Mbps
# C_TYPE = 1 - Soft TEMAC 10/100/1000 Mbps
# C_TYPE = 2 - V6 Hard TEMAC
#-----------------------------------------
proc check_iplevel_settings {mhsinst} {

    set device  [xget_hw_parameter_value $mhsinst "C_FAMILY" ]
    set type    [xget_hw_parameter_value $mhsinst "C_TYPE"]

    if {[string length $device] == 0} {
  return
    }

    if {[string compare -nocase $device "virtex6"] == 0} {

        # if device is V6, C_TYPE = 0 or 1 or 2

    } elseif {[string compare -nocase $device "virtex6l"] == 0} {
        # if device is V6, C_TYPE = 0 or 1 or 2
    } elseif {[string compare -nocase $device "qvirtex6"] == 0} {
        # if device is V6, C_TYPE = 0 or 1 or 2
    } else {

  # if device is S6, C_TYPE = 0 or C_TYPE = 1
  if {$type != 0 && $type != 1} {

      error "\n The parameter C_TYPE can only be 0 or 1 (soft, licence required) for [string toupper $device] architecture and you are using C_TYPE of $type.\n" "" "mdt_error"

  }
    }
}


#***--------------------------------***------------------------------------***
#
#          SYSLEVEL_DRC_PROC
#
#***--------------------------------***------------------------------------***

# check the connectivity of GMII_*_0 ports
# if  C_PHY_TYPE=1 and C_INCLUDE_IO=1 then
#   ports GMII_* much be connected to a top level net
#
proc check_syslevel_settings { mhsinst } {

    set phy_type   [xget_hw_parameter_value $mhsinst "C_PHY_TYPE"]
    set incld_io   [xget_hw_parameter_value $mhsinst "C_INCLUDE_IO"]

    if {$phy_type == 0 && $incld_io == 1} {

        set portList {MII_TXD MII_TX_EN MII_TX_ER MII_TX_CLK MII_RXD MII_RX_DV MII_RX_ER MII_RX_CLK}

  # MII_* should be connected to top level
        check_ports_connectivity $mhsinst $portList

    }

    if {$phy_type == 1 && $incld_io == 1} {

        set portList {GMII_TXD GMII_TX_EN GMII_TX_ER GMII_TX_CLK MII_TX_CLK GMII_RXD GMII_RX_DV GMII_RX_ER GMII_RX_CLK}

  # GMII_* should be connected to top level
        check_ports_connectivity $mhsinst $portList

    }

    if {$phy_type == 2 && $incld_io == 1} {

        set portList {RGMII_TXD RGMII_TX_CTL RGMII_TXC RGMII_RXD RGMII_RX_CTL RGMII_RXC}

  # RGMII_* should be connected to top level
        check_ports_connectivity $mhsinst $portList

    }

    if {$phy_type == 3 && $incld_io == 1} {

        set portList {RGMII_TXD RGMII_TX_CTL RGMII_TXC RGMII_RXD RGMII_RX_CTL RGMII_RXC}

  # RGMII_* should be connected to top level
        check_ports_connectivity $mhsinst $portList

    }

}

proc check_ports_connectivity {mhsinst portList} {

    foreach portname $portList {

# append portname $ext
        set    globalList [xget_connected_global_ports $mhsinst $portname]

        if { [llength $globalList] == 0 } {

            error  "\n The port $portname is not connected directly to an external port.\n" "" "mdt_error"

        }
    }
}


#***--------------------------------***-----------------------------------***
#
#     PLATGEN_SYSLEVEL_UPDATE_PROC
#
#***--------------------------------***-----------------------------------***

## This automatically generates constraints

proc update_device {param_handle} {
  set mhsinst [xget_hw_parent_handle $param_handle]
  set c_device [xget_hw_proj_setting "fpga_xdevice"]
 puts " Device number is $c_device"
 return $c_device
}
proc update_gth {param_handle} {
   set mhsinst [xget_hw_parent_handle $param_handle]

   set what_is_family [xget_hw_parameter_value $mhsinst "C_FAMILY"]

    set soft_or_hard_temac [xget_hw_parameter_value $mhsinst "C_TYPE"]

    set what_is_phy_interface [xget_hw_parameter_value $mhsinst "C_PHY_TYPE"]
     set c_device [xget_hw_proj_setting "fpga_xdevice"]


 if {[xstrncmp $what_is_family "virtex7"] && ($c_device == "xc7vx330t" ||  $c_device == "xc7vx415t" || $c_device == "xc7vx550t" || $c_device == "xc7vx690t" || $c_device == "xc7vx980t" || $c_device == "xc7vx1140t") && $soft_or_hard_temac == 1 && ($what_is_phy_interface == 4 || $what_is_phy_interface == 5)} {
    return 1
  } else {
    return 0
  }
}
proc generate_corelevel_ucf {mhsinst} {
    set filePath [xget_ncf_dir $mhsinst]
    file mkdir $filePath

    # specify file name
    set    instname   [xget_hw_parameter_value $mhsinst "INSTANCE"]
    set    name_lower [string   tolower   $instname]

    set c_device [xget_hw_proj_setting "fpga_xdevice"]
    set    fileName   $name_lower
    append fileName   "_wrapper.ucf"
    append filePath   $fileName

    # Open a file for writing
    set outputFile [open $filePath "w"]

    set what_is_family [xget_hw_parameter_value $mhsinst "C_FAMILY"]

    set soft_or_hard_temac [xget_hw_parameter_value $mhsinst "C_TYPE"]

    set what_is_phy_interface [xget_hw_parameter_value $mhsinst "C_PHY_TYPE"]

    set avb_present [xget_hw_parameter_value $mhsinst "C_AVB"]

    set include_io [xget_hw_parameter_value $mhsinst "C_INCLUDE_IO"]

    set s6_transceiver [xget_hw_parameter_value $mhsinst "C_TRANS"]

    set axi_lite_aclk_freq [xget_hw_parameter_value $mhsinst "C_S_AXI_ACLK_FREQ_HZ"]
    set axi_lite_aclk_period_ps [expr 1000000000000 / $axi_lite_aclk_freq]

    set axi_stream_tx_aclk_freq [xget_hw_parameter_value $mhsinst "C_AXI_STR_TXC_ACLK_FREQ_HZ"]
    set axi_stream_tx_aclk_period_ps [expr 1000000000000 / $axi_stream_tx_aclk_freq]

    if { $avb_present == 1} {
      #  Get RTC_CLK Freq
      set avb_rtc_clk_port [xget_hw_port_handle $mhsinst "RTC_CLK"]
      set avb_rtc_clk_freq [xget_hw_subproperty_value $avb_rtc_clk_port CLK_FREQ_HZ]
      if { [string compare $avb_rtc_clk_freq ""] == 0 } {
      #  Check for an empty string.  If $avb_rtc_clk_freq is an empty string, then the RTC clock is not connected
        error  "\n $instname PORT: RTC_CLK is not connected to a clock source!\n" "" "mdt_error"
      } else {
          if {$avb_rtc_clk_freq < 25000000} {
            # force an error if the Frequency is not greater 25 MHz or greater
            set avb_rtc_clk_freq_MHz [expr $avb_rtc_clk_freq * 1.0 / 1000000]
            error  "\n $instname PORT: RTC_CLK is set to $avb_rtc_clk_freq_MHz MHz. It cannot be less than 25 MHz!\n" "" "mdt_error"
          } else {
            # avb_rtc_clk_freq >= 25000000
            set avb_rtc_clk_period_ps [expr 1000000000000 / $avb_rtc_clk_freq]
            set avb_rtc_clk_period_ps_2x [expr $avb_rtc_clk_period_ps * 2]
            set avb_rtc_clk_period_ps_3x [expr $avb_rtc_clk_period_ps * 3]

            set axi_lite_aclk_period_ps_2x [expr $axi_lite_aclk_period_ps * 2]
          }
      }
    }

    if {[xstrncmp $what_is_family "spartan6"] || [xstrncmp $what_is_family "spartan6t"] || [xstrncmp $what_is_family "spartan6l"] || [xstrncmp $what_is_family "qspartan6t"] || [xstrncmp $what_is_family "aspartan6t"] || [xstrncmp $what_is_family "aspartan6"] || [xstrncmp $what_is_family "qspartan6l"]} {
    puts $outputFile "# axi_ethernet: Base family is spartan6"
        if { $avb_present == 0} {
        puts $outputFile "# axi_ethernet: AVB is not present"
            if { $soft_or_hard_temac == 0} {
            puts $outputFile "# axi_ethernet: Using soft TEMAC 10/100 Mbps"
                if { $what_is_phy_interface == 0} {
                puts $outputFile "# axi_ethernet: Using PHY interface MII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 40000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 40000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*mii_interface/mii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 38800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 1} {
                puts $outputFile "# axi_ethernet: PHY interface GMII is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 3} {
                puts $outputFile "# axi_ethernet: PHY interface RGMII v2.0 is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 4} {
                puts $outputFile "# axi_ethernet: PHY interface SGMII is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 5} {
                puts $outputFile "# axi_ethernet: PHY interface 1000BASE-X is not supported in soft TEMAC 10/100 Mbps mode"
                } else {
                puts $outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
                }
            } elseif  { $soft_or_hard_temac == 1} {
            puts $outputFile "# axi_ethernet: Using soft TEMAC 10/100/1000 Mbps"
                if { $what_is_phy_interface == 0} {
                puts $outputFile "# axi_ethernet: Using PHY interface MII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 40000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 40000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*mii_interface/mii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 38800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 1} {
                puts $outputFile "# axi_ethernet: Using PHY interface GMII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "PIN \"*CLOCK_INST/BUFGMUX_SPEED_CLK.I1\" TIG;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 8000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*gmii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*gmii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*gmii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx1\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"

                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 3} {
                puts $outputFile "# axi_ethernet: Using PHY interface RGMII v2.0"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"RGMII_RXC\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMEGRP \"receiver_clock\" = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"receiver_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 4} {
                puts $outputFile "# axi_ethernet: Using PHY interface SGMII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/pcspma_userclk2\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/pcspma_userclk2\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 8000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "# axi_ethernet: Using Internal GMII to PCS/PMA"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    puts $outputFile "NET \"*/pcspma_clkin\" TNM_NET = \"clkin\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_clkin\" = PERIOD \"clkin\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/pcspma_gtclkout\" TNM_NET = \"xcvr_clkout\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtpclkout\" = PERIOD \"xcvr_clkout\" 8000 ps HIGH 50 %;"
                    if { [xstrncmp $s6_transceiver "A"]} {
                      puts $outputFile "# axi_ethernet: Using Spartan 6 Transceiver A"
                      puts $outputFile "NET \"*I_GIG_ETH_PCS_PMA_CORE_A/transceiver_inst/rxrecclk0\" TNM_NET = \"rxrecclk0\";"
                      puts $outputFile "TIMESPEC \"TS_${instname}_rxrecclk0\" = PERIOD \"rxrecclk0\" 8 ns;"
                      puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE_A/transceiver_inst/clock_correction_A/rd_addr_plus1*\" TNM = \"wr_graycode0\";"
                      puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE_A/transceiver_inst/clock_correction_A/wr_addr_gray*\" TNM = \"wr_graycode0\";"
                      puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE_A/transceiver_inst/clock_correction_A/rd_addr_gray*\" TNM = \"rd_graycode0\";"
                      puts $outputFile "TIMESPEC \"TS_${instname}_rx0_skew_control1\" = FROM \"wr_graycode0\" TO \"FFS\" 6 ns DATAPATHONLY;"
                      puts $outputFile "TIMESPEC \"TS_${instname}_rx0_skew_control2\" = FROM \"rd_graycode0\" TO \"FFS\" 6 ns DATAPATHONLY;"
                      puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE_A/transceiver_inst/rxrecclkreclock0/data_sync\" TNM = \"rxrecclk0_sample\";"
                      puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE_A/transceiver_inst/rxrstreclock0/reset_sync?\" TNM = \"rxrecclk0_sample\";"
                      puts $outputFile "TIMESPEC \"TS_${instname}_rxrecclk0_sample\" = FROM \"FFS\" TO \"rxrecclk0_sample\" 6 ns DATAPATHONLY;"
                    } else {
                      puts $outputFile "# axi_ethernet: Using Spartan 6 Transceiver B"
                      puts $outputFile "NET \"*I_GIG_ETH_PCS_PMA_CORE_B/transceiver_inst/rxrecclk1\" TNM_NET = \"rxrecclk1\";"
                      puts $outputFile "TIMESPEC \"TS_${instname}_rxrecclk1\" = PERIOD \"rxrecclk1\" 8 ns;"
                      puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE_B/transceiver_inst/clock_correction_B/rd_addr_plus1*\" TNM = \"wr_graycode1\";"
                      puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE_B/transceiver_inst/clock_correction_B/wr_addr_gray*\" TNM = \"wr_graycode1\";"
                      puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE_B/transceiver_inst/clock_correction_B/rd_addr_gray*\" TNM = \"rd_graycode1\";"
                      puts $outputFile "TIMESPEC \"TS_${instname}_rx1_skew_control1\" = FROM \"wr_graycode1\" TO \"FFS\" 6 ns DATAPATHONLY;"
                      puts $outputFile "TIMESPEC \"TS_${instname}_rx1_skew_control2\" = FROM \"rd_graycode1\" TO \"FFS\" 6 ns DATAPATHONLY;"
                      puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE_B/transceiver_inst/rxrecclkreclock1/data_sync\" TNM = \"rxrecclk1_sample\";"
                      puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE_B/transceiver_inst/rxrstreclock1/reset_sync?\" TNM = \"rxrecclk1_sample\";"
                      puts $outputFile "TIMESPEC \"TS_${instname}_rxrecclk1_sample\" = FROM \"FFS\" TO \"rxrecclk1_sample\" 6 ns DATAPATHONLY;"
                    }
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                      puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                      puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                      puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                      puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 5} {
                puts $outputFile "# axi_ethernet: Using PHY interface 1000BASE-X"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/pcspma_userclk2\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/pcspma_userclk2\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 8000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "# axi_ethernet: Using Internal GMII to PCS/PMA"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    puts $outputFile "NET \"*/pcspma_clkin\" TNM_NET = \"clkin\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_clkin\" = PERIOD \"clkin\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/pcspma_gtclkout\" TNM_NET = \"xcvr_clkout\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtpclkout\" = PERIOD \"xcvr_clkout\" 8000 ps HIGH 50 %;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                      puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                      puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                      puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                      puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                } else {
                puts $outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
                }
            } elseif  { $soft_or_hard_temac == 2} {
            puts $outputFile "# axi_ethernet: V6 hard TEMAC, C_TYPE = 6, 10/100/1000 Mbps is not supported in spartan6"
            } else {
            puts $outputFile "# axi_ethernet: Unsupported C_TYPE value $soft_or_hard_temac "
            }
###########################################################################################################
##
##
###########################################################################################################
        } elseif { $avb_present == 1} {
        puts $outputFile "# axi_ethernet: AVB is present"
            if { $soft_or_hard_temac == 0} {
            puts $outputFile "# axi_ethernet: Using soft TEMAC 10/100 Mbps"
                if { $what_is_phy_interface == 0} {
                puts $outputFile "# axi_ethernet: Using PHY interface MII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 40000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 40000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*mii_interface/mii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 38800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"

                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                } elseif  { $what_is_phy_interface == 1} {
                puts $outputFile "# axi_ethernet: PHY interface GMII is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 3} {
                puts $outputFile "# axi_ethernet: PHY interface RGMII v2.0 is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 4} {
                puts $outputFile "# axi_ethernet: PHY interface SGMII is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 5} {
                puts $outputFile "# axi_ethernet: PHY interface 1000BASE-X is not supported in soft TEMAC 10/100 Mbps mode"
                } else {
                puts $outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
                }
            } elseif  { $soft_or_hard_temac == 1} {
            puts $outputFile "# axi_ethernet: Using soft TEMAC 10/100/1000 Mbps"
                if { $what_is_phy_interface == 0} {
                puts $outputFile "# axi_ethernet: Using PHY interface MII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 40000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 40000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*mii_interface/mii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 38800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"

                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                   } elseif  { $what_is_phy_interface == 1} {
                puts $outputFile "# axi_ethernet: Using PHY interface GMII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "PIN \"*CLOCK_INST/BUFGMUX_SPEED_CLK.I1\" TIG;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 8000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*gmii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*gmii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*gmii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx1\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"

                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                   } elseif  { $what_is_phy_interface == 3} {
                puts $outputFile "# axi_ethernet: Using PHY interface RGMII v2.0"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"RGMII_RXC\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMEGRP \"receiver_clock\" = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"receiver_clock\" 8000 ps HIGH 50 %;"
                    ##  Tools do not recognize below NET
                    puts $outputFile "NET \"AXI_STR_AVBTX_ACLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"

                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"
                                   # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rd_data_result*\"  TNM= FFS \"rtc_rd_data\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/cpu_rd_data*\"     TNM= FFS \"rtc_cpu_rd_data\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_data\" = FROM \"rtc_rd_data\" TO \"rtc_cpu_rd_data\" ${axi_lite_aclk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                    puts $outputFile "INST \"*top*avb_configuration_inst/cpu_sync_reset\"                    TNM = \"cpu_reset\";"
                    puts $outputFile "INST \"*top*avb_configuration_inst/tx_sync_reset_gen/reset_sync_avb?\" TNM= \"sync_resets\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_resets\" = FROM \"cpu_reset\" TO \"sync_resets\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top*avb_configuration_inst/rtc_reset_gen/reset_sync_avb?\"     TNM= \"sync_resets_rtc\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_resets_rtc\" = FROM \"cpu_reset\" TO \"sync_resets_rtc\" ${avb_rtc_clk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "INST \"*top*avb_configuration_inst/cpu_reset_tx\"                     TNM= \"cpu_tx_reset\";"
                    puts $outputFile "INST \"*top*avb_configuration_inst/tx_reset_gen/reset_sync_avb?\"     TNM= \"cpu_tx_sync_reset\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_reset\" = FROM \"cpu_tx_reset\" TO \"cpu_tx_sync_reset\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top*avb_configuration_inst/cpu_reset_rx\"                     TNM= \"cpu_rx_reset\";"
                    puts $outputFile "INST \"*top*avb_configuration_inst/rx_reset_gen/reset_sync_avb?\"     TNM= \"cpu_rx_sync_reset\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_reset\" = FROM \"cpu_rx_reset\" TO \"cpu_rx_sync_reset\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top*avb_configuration_inst/cpu_reset_tx_ptp\"                     TNM= \"cpu_tx_ptp_reset\";"
                    puts $outputFile "INST \"*top*avb_configuration_inst/tx_ptp_reset_gen/reset_sync_avb?\"     TNM= \"cpu_tx_ptp_sync_reset\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_ptp_reset\" = FROM \"cpu_tx_ptp_reset\" TO \"cpu_tx_ptp_sync_reset\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top*avb_configuration_inst/cpu_reset_rx_ptp\"                     TNM= \"cpu_rx_ptp_reset\";"
                    puts $outputFile "INST \"*top*avb_configuration_inst/rx_ptp_reset_gen/reset_sync_avb?\"     TNM= \"cpu_rx_ptp_sync_reset\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_ptp_reset\" = FROM \"cpu_rx_ptp_reset\" TO \"cpu_rx_ptp_sync_reset\" 8 ns DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 4} {
                puts $outputFile "# axi_ethernet: Using PHY interface SGMII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    ##  Tools do not recognize below NET
                    puts $outputFile "NET \"AXI_STR_AVBRX_ACLK\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    ##  Tools do not recognize below NET
                    puts $outputFile "NET \"AXI_STR_AVBRX_ACLK\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 8000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "# axi_ethernet: Using Internal GMII to PCS/PMA"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    puts $outputFile "NET \"*/pcspma_clkin\" TNM_NET = \"clkin\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_clkin\" = PERIOD \"clkin\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/pcspma_gtclkout\" TNM_NET = \"xcvr_clkout\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtpclkout\" = PERIOD \"xcvr_clkout\" 8000 ps HIGH 50 %;"
                    if { [xstrncmp $s6_transceiver "A"]} {
                      puts $outputFile "# axi_ethernet: Using Spartan 6 Transceiver A"
                      puts $outputFile "NET \"*I_GIG_ETH_PCS_PMA_CORE_A/transceiver_inst/rxrecclk0\" TNM_NET = \"rxrecclk0\";"
                      puts $outputFile "TIMESPEC \"TS_${instname}_rxrecclk0\" = PERIOD \"rxrecclk0\" 8 ns;"
                      puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE_A/transceiver_inst/clock_correction_A/rd_addr_plus1*\" TNM = \"wr_graycode0\";"
                      puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE_A/transceiver_inst/clock_correction_A/wr_addr_gray*\" TNM = \"wr_graycode0\";"
                      puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE_A/transceiver_inst/clock_correction_A/rd_addr_gray*\" TNM = \"rd_graycode0\";"
                      puts $outputFile "TIMESPEC \"TS_${instname}_rx0_skew_control1\" = FROM \"wr_graycode0\" TO \"FFS\" 6 ns DATAPATHONLY;"
                      puts $outputFile "TIMESPEC \"TS_${instname}_rx0_skew_control2\" = FROM \"rd_graycode0\" TO \"FFS\" 6 ns DATAPATHONLY;"
                      puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE_A/transceiver_inst/rxrecclkreclock0/data_sync\" TNM = \"rxrecclk0_sample\";"
                      puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE_A/transceiver_inst/rxrstreclock0/reset_sync?\" TNM = \"rxrecclk0_sample\";"
                      puts $outputFile "TIMESPEC \"TS_${instname}_rxrecclk0_sample\" = FROM \"FFS\" TO \"rxrecclk0_sample\" 6 ns DATAPATHONLY;"
                    } else {
                      puts $outputFile "# axi_ethernet: Using Spartan 6 Transceiver B"
                      puts $outputFile "NET \"*I_GIG_ETH_PCS_PMA_CORE_B/transceiver_inst/rxrecclk1\" TNM_NET = \"rxrecclk1\";"
                      puts $outputFile "TIMESPEC \"TS_${instname}_rxrecclk1\" = PERIOD \"rxrecclk1\" 8 ns;"
                      puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE_B/transceiver_inst/clock_correction_B/rd_addr_plus1*\" TNM = \"wr_graycode1\";"
                      puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE_B/transceiver_inst/clock_correction_B/wr_addr_gray*\" TNM = \"wr_graycode1\";"
                      puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE_B/transceiver_inst/clock_correction_B/rd_addr_gray*\" TNM = \"rd_graycode1\";"
                      puts $outputFile "TIMESPEC \"TS_${instname}_rx1_skew_control1\" = FROM \"wr_graycode1\" TO \"FFS\" 6 ns DATAPATHONLY;"
                      puts $outputFile "TIMESPEC \"TS_${instname}_rx1_skew_control2\" = FROM \"rd_graycode1\" TO \"FFS\" 6 ns DATAPATHONLY;"
                      puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE_B/transceiver_inst/rxrecclkreclock1/data_sync\" TNM = \"rxrecclk1_sample\";"
                      puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE_B/transceiver_inst/rxrstreclock1/reset_sync?\" TNM = \"rxrecclk1_sample\";"
                      puts $outputFile "TIMESPEC \"TS_${instname}_rxrecclk1_sample\" = FROM \"FFS\" TO \"rxrecclk1_sample\" 6 ns DATAPATHONLY;"
                    }
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                      puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                      puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                      puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                      puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"

                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                 } elseif  { $what_is_phy_interface == 5} {
                puts $outputFile "# axi_ethernet: Using PHY interface 1000BASE-X"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    ##  Tools do not recognize below NET
                    puts $outputFile "NET \"AXI_STR_AVBRX_ACLK\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    ##  Tools do not recognize below NET
                    puts $outputFile "NET \"AXI_STR_AVBRX_ACLK\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 8000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "# axi_ethernet: Using Internal GMII to PCS/PMA"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    puts $outputFile "NET \"*/pcspma_clkin\" TNM_NET = \"clkin\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_clkin\" = PERIOD \"clkin\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/pcspma_gtclkout\" TNM_NET = \"xcvr_clkout\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtpclkout\" = PERIOD \"xcvr_clkout\" 8000 ps HIGH 50 %;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                      puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                      puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                      puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                      puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"

                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                } else {
                puts $outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
                }
            } elseif  { $soft_or_hard_temac == 2} {
            puts $outputFile "# axi_ethernet: V6 hard TEMAC, C_TYPE = 6, 10/100/1000 Mbps is not supported in spartan6"
            } else {
            puts $outputFile "# axi_ethernet: Unsupported C_TYPE value $soft_or_hard_temac "
            }
        } else {
        puts $outputFile "# axi_ethernet: Unsupported C_AVB value $avb_present "
        }
    } elseif  {[xstrncmp $what_is_family "virtex6"] || [xstrncmp $what_is_family "virtex6lx"] || [xstrncmp $what_is_family "virtex6sx"] || [xstrncmp $what_is_family "virtex6hx"] || [xstrncmp $what_is_family "virtex6cx"] || [xstrncmp $what_is_family "virtex6llx"] || [xstrncmp $what_is_family "virtex6lsx"] || [xstrncmp $what_is_family "qvirtex6lx"] || [xstrncmp $what_is_family "qvirtex6sx"] || [xstrncmp $what_is_family "qvirtex6fx"] || [xstrncmp $what_is_family "qvirtex6tx"]} {
    puts $outputFile "# axi_ethernet: Base family is virtex6"
        if { $avb_present == 0} {
        puts $outputFile "# axi_ethernet: AVB is not present"
            if { $soft_or_hard_temac == 0} {
            puts $outputFile "# axi_ethernet: Using soft TEMAC 10/100 Mbps"
                if { $what_is_phy_interface == 0} {
                puts $outputFile "# axi_ethernet: Using PHY interface MII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 40000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 40000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*mii_interface/mii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 38800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 1} {
                puts $outputFile "# axi_ethernet: PHY interface GMII is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 3} {
                puts $outputFile "# axi_ethernet: PHY interface RGMII v2.0 is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 4} {
                puts $outputFile "# axi_ethernet: PHY interface SGMII is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 5} {
                puts $outputFile "# axi_ethernet: PHY interface 1000BASE-X is not supported in soft TEMAC 10/100 Mbps mode"
                } else {
                puts $outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
                }
            } elseif  { $soft_or_hard_temac == 1} {
            puts $outputFile "# axi_ethernet: Using soft TEMAC 10/100/1000 Mbps"
                if { $what_is_phy_interface == 0} {
                puts $outputFile "# axi_ethernet: Using PHY interface MII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 40000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 40000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*mii_interface/mii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 38800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                 } elseif  { $what_is_phy_interface == 1} {
                puts $outputFile "# axi_ethernet: Using PHY interface GMII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "PIN \"*CLOCK_INST/BUFGMUX_SPEED_CLK.I1\" TIG;"
                    puts $outputFile "PIN \"*CLOCK_INST/BUFGMUX_SPEED_CLK.CE0\" TIG;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 8000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "NET \"REF_CLK\" TNM_NET = \"clk_ref_clk\";"
                    puts $outputFile "TIMEGRP \"ref_clk\" = \"clk_ref_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ref_clk\" = PERIOD \"ref_clk\" 5 ns HIGH 50 %;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*gmii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*gmii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*gmii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx1\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"

                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_ref_clk\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_ref_clk\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 3} {
                puts $outputFile "# axi_ethernet: Using PHY interface RGMII v2.0"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"RGMII_RXC\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMEGRP \"receiver_clock\" = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"receiver_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "NET \"REF_CLK\" TNM_NET = \"clk_ref_clk\";"
                    puts $outputFile "TIMEGRP \"ref_clk\" = \"clk_ref_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ref_clk\" = PERIOD \"ref_clk\" 5 ns HIGH 50 %;"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_ref_clk\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_ref_clk\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 4} {
                puts $outputFile "# axi_ethernet: Using PHY interface SGMII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/pcspma_userclk2\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/pcspma_userclk2\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 8000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "# axi_ethernet: Using Internal GMII to PCS/PMA"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    puts $outputFile "NET \"*/pcspma_clkin\" TNM_NET = \"mgtrefclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mgtrefclk\" = PERIOD \"mgtrefclk\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/pcspma_gtclkout\" TNM_NET = \"xcvr_clkout\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_txoutclk\" = PERIOD \"xcvr_clkout\" 8000 ps HIGH 50 %;"
                    puts $outputFile "# axi_ethernet: Using Virtex 6 Transceiver"
                    puts $outputFile "NET \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/RXRECCLK\" TNM_NET = \"rxrecclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rxrecclk\" = PERIOD \"rxrecclk\" 8 ns;"
                    puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/wr_addr_gray*\" TNM = \"wr_graycode\";"
                    puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/rd_addr_gray*\" TNM = \"rd_graycode\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_skew_control1\" = FROM \"wr_graycode\" TO \"FFS\" 14 ns DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_skew_control2\" = FROM \"rd_graycode\" TO \"FFS\" 14 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/rd_data*\" TNM = \"fifo_read\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ram_read_false_path\" = FROM \"RAMS\" TO \"fifo_read\" 6 ns DATAPATHONLY;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                      puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                      puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 5} {
                puts $outputFile "# axi_ethernet: Using PHY interface 1000BASE-X"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/pcspma_userclk2\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/pcspma_userclk2\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 8000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    puts $outputFile "NET \"*/pcspma_clkin\" TNM_NET = \"mgtrefclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mgtrefclk\" = PERIOD \"mgtrefclk\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/pcspma_gtclkout\" TNM_NET = \"xcvr_clkout\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_txoutclk\" = PERIOD \"xcvr_clkout\" 8000 ps HIGH 50 %;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                      puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                      puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                      puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                      puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                } else {
                puts $outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
                }
            } elseif  { $soft_or_hard_temac == 2} {
            puts $outputFile "# axi_ethernet: Using V6 hard TEMAC 10/100/1000 Mbps"
                if { $what_is_phy_interface == 0} {
                puts $outputFile "# axi_ethernet: Using PHY interface MII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"phy_clk_tx\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_clk_phy_tx\" = \"phy_clk_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_clk_phy_tx\" = PERIOD \"v6_emac_v2_2_clk_phy_tx\" 40000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"phy_clk_rx\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_clk_phy_rx\" = \"phy_clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_clk_phy_rx\" = PERIOD \"v6_emac_v2_2_clk_phy_rx\" 40000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_clk_ref_gtx\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_clk_ref_gtx\" = PERIOD \"v6_emac_v2_2_clk_ref_gtx\" 8 ns HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 %;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*mii_interface?rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface?rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface?rx_er_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface?mii_txd_?\"    IOB = force;"
                        puts $outputFile "INST \"*mii_interface?mii_tx_en\"    IOB = force;"
                        puts $outputFile "INST \"*mii_interface?mii_tx_er\"    IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\"  TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"   TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"phy_clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"phy_clk_rx\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"phy_clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"phy_clk_rx\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"phy_clk_tx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"phy_clk_tx\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"phy_clk_tx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"phy_clk_tx\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"phy_clk_rx\"     TO \"phy_clk_tx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"phy_clk_tx\"     TO \"phy_clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"phy_clk_rx\"     TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"phy_clk_rx\"    8000  ps DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 1} {
                puts $outputFile "# axi_ethernet: Using PHY interface GMII"

                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"phy_clk_rx\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_clk_phy_rx\" = \"phy_clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_clk_phy_rx\" = PERIOD \"v6_emac_v2_2_clk_phy_rx\" 7.5 ns HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_clk_ref_gtx\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_clk_ref_gtx\" = PERIOD \"v6_emac_v2_2_clk_ref_gtx\" 8 ns HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"phy_clk_tx\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_clk_ref_mux\" = \"phy_clk_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_clk_ref_mux\" = PERIOD \"v6_emac_v2_2_clk_ref_mux\" TS_${instname}_v6_emac_v2_2_clk_ref_gtx HIGH 50%;"
                    puts $outputFile "PIN \"*bufgmux_speed_clk.I1\" TIG;"
                    puts $outputFile "PIN \"*bufgmux_speed_clk.CE0\" TIG;"
                    puts $outputFile "NET \"REF_CLK\" TNM_NET = \"clk_ref_clk\";"
                    puts $outputFile "TIMEGRP \"ref_clk\" = \"clk_ref_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ref_clk\" = PERIOD \"ref_clk\" 5 ns HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 %;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*gmii_interface/rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*gmii_interface/rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*gmii_interface/rx_er_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*gmii_interface*gmii_txd_?\"   IOB = force;"
                        puts $outputFile "INST \"*gmii_interface*gmii_tx_en\"   IOB = force;"
                        puts $outputFile "INST \"*gmii_interface*gmii_tx_er\"   IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\"  TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"   TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"phy_clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"phy_clk_rx\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"phy_clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"phy_clk_rx\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"phy_clk_tx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"phy_clk_tx\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"phy_clk_tx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"phy_clk_tx\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"phy_clk_rx\"     TO \"phy_clk_tx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"phy_clk_tx\"     TO \"phy_clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"phy_clk_rx\"     TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"phy_clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_ref_clk\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_ref_clk\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 3} {
                puts $outputFile "# axi_ethernet: Using PHY interface RGMII v2.0"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"phy_clk_tx\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_clk_phy_tx\" = \"phy_clk_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_clk_phy_tx\" = PERIOD \"v6_emac_v2_2_clk_phy_tx\" 8 ns HIGH 50%;"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"phy_clk_rx\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_clk_phy_rx\" = \"phy_clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_clk_phy_rx\" = PERIOD \"v6_emac_v2_2_clk_phy_rx\" 8 ns HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_clk_ref_gtx\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_clk_ref_gtx\" = PERIOD \"v6_emac_v2_2_clk_ref_gtx\" 8 ns HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "NET \"REF_CLK\" TNM_NET = \"clk_ref_clk\";"
                    puts $outputFile "TIMEGRP \"ref_clk\" = \"clk_ref_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ref_clk\" = PERIOD \"ref_clk\" 5 ns HIGH 50 %;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\"  TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"   TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"phy_clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"phy_clk_rx\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"phy_clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"phy_clk_rx\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"phy_clk_tx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"phy_clk_tx\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"phy_clk_tx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"phy_clk_tx\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"phy_clk_rx\"     TO \"phy_clk_tx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"phy_clk_tx\"     TO \"phy_clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"phy_clk_rx\"     TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"phy_clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_ref_clk\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_ref_clk\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 4} {
                puts $outputFile "# axi_ethernet: Using PHY interface SGMII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/clk_ds\" TNM_NET = \"mgt_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_mgt_clk\" = PERIOD \"mgt_clk\" 8.000 ns HIGH 50 % INPUT_JITTER 50.0ps;"
                    puts $outputFile "NET \"*/gen_sgmii.clk125_out\" TNM_NET = \"clk_gt_clk\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_gt_clk\" = \"clk_gt_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_gt_clk\" = PERIOD \"v6_emac_v2_2_gt_clk\" 8 ns HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_axi_clk_out\" TNM_NET = \"clk_user\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_gt_clk_user\" = \"clk_user\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_gt_clk_user\" = PERIOD \"v6_emac_v2_2_gt_clk_user\" 8 ns HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_clk_ref_gtx\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_clk_ref_gtx\" = PERIOD \"v6_emac_v2_2_clk_ref_gtx\" 8 ns HIGH 50 %;"
                    puts $outputFile "NET \"*v6_gtxwizard_top_inst?RXRECCLK\" TNM_NET = \"clk_rec_clk\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_user_rec_clk\" = \"clk_rec_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_user_rec_clk\" = PERIOD \"v6_emac_v2_2_user_rec_clk\" 8 ns HIGH 50 %;"
                    puts $outputFile "INST \"*v6_gtxwizard_top_inst?rx_elastic_buffer_inst?rd_addr_gray_?\"   TNM = \"rx_elastic_rd_to_wr\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_elastic_rd_to_wr\"         = FROM \"rx_elastic_rd_to_wr\" TO \"clk_rec_clk\"   7.5 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*v6_gtxwizard_top_inst?rx_elastic_buffer_inst?wr_addr_gray_?\"   TNM = \"elastic_metastable\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_elastic_meta_protect\"         = FROM \"elastic_metastable\" 5 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*v6_gtxwizard_top_inst?rx_elastic_buffer_inst?rd_data*\"   TNM = \"fifo_read\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ram_read_false_path\"         = FROM \"RAMS\" TO \"fifo_read\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*v6_gtxwizard_top_inst?rx_elastic_buffer_inst?rd_wr_addr_gray*\"   TNM = \"rx_graycode\";"
                    puts $outputFile "INST \"*v6_gtxwizard_top_inst?rx_elastic_buffer_inst?rd_occupancy*\"      TNM = \"rx_binary\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_buf_meta_protect\"         = FROM \"rx_graycode\" TO \"rx_binary\" 5 ns DATAPATHONLY;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\"  TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"   TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_USERCLK\"     = FROM \"axistream_clk\"  TO \"clk_user\"      8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_USERCLK_2_AXISTREAMCLKS\"     = FROM \"clk_user\"       TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_USERCLK\"      = FROM \"axi4lite_clk\"   TO \"clk_user\"      8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_USERCLK_2_AXI4LITECLKS\"      = FROM \"clk_user\"       TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_USERCLK_2_GTX_CLK\"           = FROM \"clk_user\"       TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_USERCLK\"           = FROM \"clk_gtx\"        TO \"clk_user\"      8000  ps DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 5} {
                puts $outputFile "# axi_ethernet: Using PHY interface 1000BASE-X"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/clk_ds\" TNM_NET = \"mgt_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_mgt_clk\" = PERIOD \"mgt_clk\" 8.000 ns HIGH 50 % INPUT_JITTER 50.0ps;"
                    puts $outputFile "NET \"*/gen_1000bx.clk125_out\" TNM_NET = \"glbl125_clk\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_gt_clk\" = \"glbl125_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_gt_clk\" = PERIOD \"v6_emac_v2_2_gt_clk\" 8 ns HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 %;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\"  TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"   TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GLBL_125CLK\" = FROM \"axistream_clk\"  TO \"glbl125_clk\"   8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GLBL_125CLK_2_AXISTREAMCLKS\" = FROM \"glbl125_clk\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_GLBL_125CLK\"  = FROM \"axi4lite_clk\"   TO \"glbl125_clk\"   8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GLBL_125CLK_2_AXI4LITECLKS\"  = FROM \"glbl125_clk\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                } else {
                puts $outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
                }
            } else {
            puts $outputFile "# axi_ethernet: Unsupported C_TYPE value $soft_or_hard_temac "
            }
###########################################################################################################
##
##
###########################################################################################################
        } elseif { $avb_present == 1} {
        puts $outputFile "# axi_ethernet: AVB is present"
            if { $soft_or_hard_temac == 0} {
            puts $outputFile "# axi_ethernet: Using soft TEMAC 10/100 Mbps"
                if { $what_is_phy_interface == 0} {
                puts $outputFile "# axi_ethernet: Using PHY interface MII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 40000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 40000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*mii_interface/mii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 38800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"

                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                } elseif  { $what_is_phy_interface == 1} {
                puts $outputFile "# axi_ethernet: PHY interface GMII is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 3} {
                puts $outputFile "# axi_ethernet: PHY interface RGMII v2.0 is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 4} {
                puts $outputFile "# axi_ethernet: PHY interface SGMII is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 5} {
                puts $outputFile "# axi_ethernet: PHY interface 1000BASE-X is not supported in soft TEMAC 10/100 Mbps mode"
                } else {
                puts $outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
                }
            } elseif  { $soft_or_hard_temac == 1} {
            puts $outputFile "# axi_ethernet: Using soft TEMAC 10/100/1000 Mbps"
                if { $what_is_phy_interface == 0} {
                puts $outputFile "# axi_ethernet: Using PHY interface MII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 40000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 40000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*mii_interface/mii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 38800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"

                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                } elseif  { $what_is_phy_interface == 1} {
                puts $outputFile "# axi_ethernet: Using PHY interface GMII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "PIN \"*CLOCK_INST/BUFGMUX_SPEED_CLK.I1\" TIG;"
                    puts $outputFile "PIN \"*CLOCK_INST/BUFGMUX_SPEED_CLK.CE0\" TIG;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 8000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "NET \"REF_CLK\" TNM_NET = \"clk_ref_clk\";"
                    puts $outputFile "TIMEGRP \"ref_clk\" = \"clk_ref_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ref_clk\" = PERIOD \"ref_clk\" 5 ns HIGH 50 %;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*gmii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*gmii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*gmii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx1\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_ref_clk\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_ref_clk\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"

                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req*\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle*\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                  } elseif  { $what_is_phy_interface == 3} {
                puts $outputFile "# axi_ethernet: Using PHY interface RGMII v2.0"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"RGMII_RXC\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMEGRP \"receiver_clock\" = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"receiver_clock\" 8000 ps HIGH 50 %;"

                    ##  Tools do not recognize below NET
                    puts $outputFile "NET \"AXI_STR_AVBTX_ACLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "NET \"REF_CLK\" TNM_NET = \"clk_ref_clk\";"
                    puts $outputFile "TIMEGRP \"ref_clk\" = \"clk_ref_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ref_clk\" = PERIOD \"ref_clk\" 5 ns HIGH 50 %;"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_ref_clk\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_ref_clk\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"


                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                } elseif  { $what_is_phy_interface == 4} {
                puts $outputFile "# axi_ethernet: Using PHY interface SGMII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    ##  Tools do not recognize below NET
                    puts $outputFile "NET \"AXI_STR_AVBRX_ACLK\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    ##  Tools do not recognize below NET
                    puts $outputFile "NET \"AXI_STR_AVBRX_ACLK\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 8000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "# axi_ethernet: Using Internal GMII to PCS/PMA"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    puts $outputFile "NET \"*/pcspma_clkin\" TNM_NET = \"mgtrefclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mgtrefclk\" = PERIOD \"mgtrefclk\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/pcspma_gtclkout\" TNM_NET = \"xcvr_clkout\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_txoutclk\" = PERIOD \"xcvr_clkout\" 8000 ps HIGH 50 %;"
                    puts $outputFile "# axi_ethernet: Using Virtex 6 Transceiver"
                    puts $outputFile "NET \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/RXRECCLK\" TNM_NET = \"rxrecclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rxrecclk\" = PERIOD \"rxrecclk\" 8 ns;"
                    puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/wr_addr_gray*\" TNM = \"wr_graycode\";"
                    puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/rd_addr_gray*\" TNM = \"rd_graycode\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_skew_control1\" = FROM \"wr_graycode\" TO \"FFS\" 14 ns DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_skew_control2\" = FROM \"rd_graycode\" TO \"FFS\" 14 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/rd_data*\" TNM = \"fifo_read\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ram_read_false_path\" = FROM \"RAMS\" TO \"fifo_read\" 6 ns DATAPATHONLY;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                      puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                      puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"

                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                   } elseif  { $what_is_phy_interface == 5} {
                puts $outputFile "# axi_ethernet: Using PHY interface 1000BASE-X"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    ##  Tools do not recognize below NET
                    puts $outputFile "NET \"AXI_STR_AVBRX_ACLK\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    ##  Tools do not recognize below NET
                    puts $outputFile "NET \"AXI_STR_AVBRX_ACLK\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 8000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    puts $outputFile "NET \"*/pcspma_clkin\" TNM_NET = \"mgtrefclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mgtrefclk\" = PERIOD \"mgtrefclk\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/pcspma_gtclkout\" TNM_NET = \"xcvr_clkout\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_txoutclk\" = PERIOD \"xcvr_clkout\" 8000 ps HIGH 50 %;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                      puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                      puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                      puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                      puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"

                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                    } else {
                puts $outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
                }
            } elseif  { $soft_or_hard_temac == 2} {
            puts $outputFile "# axi_ethernet: Using V6 hard TEMAC 10/100/1000 Mbps"
                if { $what_is_phy_interface == 0} {
                puts $outputFile "# axi_ethernet: Using PHY interface MII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"phy_clk_tx\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_clk_phy_tx\" = \"phy_clk_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_clk_phy_tx\" = PERIOD \"v6_emac_v2_2_clk_phy_tx\" 40000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"phy_clk_rx\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_clk_phy_rx\" = \"phy_clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_clk_phy_rx\" = PERIOD \"v6_emac_v2_2_clk_phy_rx\" 40000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_clk_ref_gtx\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_clk_ref_gtx\" = PERIOD \"v6_emac_v2_2_clk_ref_gtx\" 8 ns HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 %;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*mii_interface?rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface?rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface?rx_er_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface?mii_txd_?\"    IOB = force;"
                        puts $outputFile "INST \"*mii_interface?mii_tx_en\"    IOB = force;"
                        puts $outputFile "INST \"*mii_interface?mii_tx_er\"    IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\"  TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"   TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"phy_clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"phy_clk_rx\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"phy_clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"phy_clk_rx\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"phy_clk_tx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"phy_clk_tx\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"phy_clk_tx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"phy_clk_tx\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"phy_clk_rx\"     TO \"phy_clk_tx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"phy_clk_tx\"     TO \"phy_clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"phy_clk_rx\"     TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"phy_clk_rx\"    8000  ps DATAPATHONLY;"

                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                } elseif  { $what_is_phy_interface == 1} {
                puts $outputFile "# axi_ethernet: Using PHY interface GMII"

                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"phy_clk_rx\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_clk_phy_rx\" = \"phy_clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_clk_phy_rx\" = PERIOD \"v6_emac_v2_2_clk_phy_rx\" 7.5 ns HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_clk_ref_gtx\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_clk_ref_gtx\" = PERIOD \"v6_emac_v2_2_clk_ref_gtx\" 8 ns HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"phy_clk_tx\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_clk_ref_mux\" = \"phy_clk_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_clk_ref_mux\" = PERIOD \"v6_emac_v2_2_clk_ref_mux\" TS_${instname}_v6_emac_v2_2_clk_ref_gtx HIGH 50%;"
                    puts $outputFile "PIN \"*bufgmux_speed_clk.I1\" TIG;"
                    puts $outputFile "PIN \"*bufgmux_speed_clk.CE0\" TIG;"
                    puts $outputFile "NET \"REF_CLK\" TNM_NET = \"clk_ref_clk\";"
                    puts $outputFile "TIMEGRP \"ref_clk\" = \"clk_ref_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ref_clk\" = PERIOD \"ref_clk\" 5 ns HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 %;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*gmii_interface/rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*gmii_interface/rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*gmii_interface/rx_er_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*gmii_interface*gmii_txd_?\"   IOB = force;"
                        puts $outputFile "INST \"*gmii_interface*gmii_tx_en\"   IOB = force;"
                        puts $outputFile "INST \"*gmii_interface*gmii_tx_er\"   IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\"  TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"   TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"phy_clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"phy_clk_rx\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"phy_clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"phy_clk_rx\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"phy_clk_tx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"phy_clk_tx\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"phy_clk_tx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"phy_clk_tx\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"phy_clk_rx\"     TO \"phy_clk_tx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"phy_clk_tx\"     TO \"phy_clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"phy_clk_rx\"     TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"phy_clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_ref_clk\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_ref_clk\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"

                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                    } elseif  { $what_is_phy_interface == 3} {
                puts $outputFile "# axi_ethernet: Using PHY interface RGMII v2.0"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"phy_clk_tx\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_clk_phy_tx\" = \"phy_clk_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_clk_phy_tx\" = PERIOD \"v6_emac_v2_2_clk_phy_tx\" 8 ns HIGH 50%;"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"phy_clk_rx\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_clk_phy_rx\" = \"phy_clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_clk_phy_rx\" = PERIOD \"v6_emac_v2_2_clk_phy_rx\" 8 ns HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_clk_ref_gtx\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_clk_ref_gtx\" = PERIOD \"v6_emac_v2_2_clk_ref_gtx\" 8 ns HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "NET \"REF_CLK\" TNM_NET = \"clk_ref_clk\";"
                    puts $outputFile "TIMEGRP \"ref_clk\" = \"clk_ref_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ref_clk\" = PERIOD \"ref_clk\" 5 ns HIGH 50 %;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\"  TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"   TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"phy_clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"phy_clk_rx\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"phy_clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"phy_clk_rx\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"phy_clk_tx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"phy_clk_tx\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"phy_clk_tx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"phy_clk_tx\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"phy_clk_rx\"     TO \"phy_clk_tx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"phy_clk_tx\"     TO \"phy_clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"phy_clk_rx\"     TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"phy_clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_ref_clk\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_ref_clk\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"

                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                   } elseif  { $what_is_phy_interface == 4} {
                puts $outputFile "# axi_ethernet: Using PHY interface SGMII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/clk_ds\" TNM_NET = \"mgt_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_mgt_clk\" = PERIOD \"mgt_clk\" 8.000 ns HIGH 50 % INPUT_JITTER 50.0ps;"
                    puts $outputFile "NET \"*/gen_sgmii.clk125_out\" TNM_NET = \"clk_gt_clk\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_gt_clk\" = \"clk_gt_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_gt_clk\" = PERIOD \"v6_emac_v2_2_gt_clk\" 8 ns HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_axi_clk_out\" TNM_NET = \"clk_user\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_gt_clk_user\" = \"clk_user\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_gt_clk_user\" = PERIOD \"v6_emac_v2_2_gt_clk_user\" 8 ns HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_clk_ref_gtx\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_clk_ref_gtx\" = PERIOD \"v6_emac_v2_2_clk_ref_gtx\" 8 ns HIGH 50 %;"
                    puts $outputFile "NET \"*v6_gtxwizard_top_inst?RXRECCLK\" TNM_NET = \"clk_rec_clk\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_user_rec_clk\" = \"clk_rec_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_user_rec_clk\" = PERIOD \"v6_emac_v2_2_user_rec_clk\" 8 ns HIGH 50 %;"
                    puts $outputFile "INST \"*v6_gtxwizard_top_inst?rx_elastic_buffer_inst?rd_addr_gray_?\"   TNM = \"rx_elastic_rd_to_wr\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_elastic_rd_to_wr\"         = FROM \"rx_elastic_rd_to_wr\" TO \"clk_rec_clk\"   7.5 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*v6_gtxwizard_top_inst?rx_elastic_buffer_inst?wr_addr_gray_?\"   TNM = \"elastic_metastable\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_elastic_meta_protect\"         = FROM \"elastic_metastable\" 5 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*v6_gtxwizard_top_inst?rx_elastic_buffer_inst?rd_data*\"   TNM = \"fifo_read\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ram_read_false_path\"         = FROM \"RAMS\" TO \"fifo_read\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*v6_gtxwizard_top_inst?rx_elastic_buffer_inst?rd_wr_addr_gray*\"   TNM = \"rx_graycode\";"
                    puts $outputFile "INST \"*v6_gtxwizard_top_inst?rx_elastic_buffer_inst?rd_occupancy*\"      TNM = \"rx_binary\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_buf_meta_protect\"         = FROM \"rx_graycode\" TO \"rx_binary\" 5 ns DATAPATHONLY;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\"  TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"   TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_USERCLK\"     = FROM \"axistream_clk\"  TO \"clk_user\"      8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_USERCLK_2_AXISTREAMCLKS\"     = FROM \"clk_user\"       TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_USERCLK\"      = FROM \"axi4lite_clk\"   TO \"clk_user\"      8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_USERCLK_2_AXI4LITECLKS\"      = FROM \"clk_user\"       TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_USERCLK_2_GTX_CLK\"           = FROM \"clk_user\"       TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_USERCLK\"           = FROM \"clk_gtx\"        TO \"clk_user\"      8000  ps DATAPATHONLY;"

                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"
                                     # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                } elseif  { $what_is_phy_interface == 5} {
                puts $outputFile "# axi_ethernet: Using PHY interface 1000BASE-X"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/clk_ds\" TNM_NET = \"mgt_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_mgt_clk\" = PERIOD \"mgt_clk\" 8.000 ns HIGH 50 % INPUT_JITTER 50.0ps;"
                    puts $outputFile "NET \"*/gen_1000bx.clk125_out\" TNM_NET = \"glbl125_clk\";"
                    puts $outputFile "TIMEGRP \"v6_emac_v2_2_gt_clk\" = \"glbl125_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_v6_emac_v2_2_gt_clk\" = PERIOD \"v6_emac_v2_2_gt_clk\" 8 ns HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 %;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\"  TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"   TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GLBL_125CLK\" = FROM \"axistream_clk\"  TO \"glbl125_clk\"   8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GLBL_125CLK_2_AXISTREAMCLKS\" = FROM \"glbl125_clk\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_GLBL_125CLK\"  = FROM \"axi4lite_clk\"   TO \"glbl125_clk\"   8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GLBL_125CLK_2_AXI4LITECLKS\"  = FROM \"glbl125_clk\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"

                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"
                                   # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                } else {
                puts $outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
                }
            } else {
            puts $outputFile "# axi_ethernet: Unsupported C_TYPE value $soft_or_hard_temac "
            }
        } else {
        puts $outputFile "# axi_ethernet: Unsupported C_AVB value $avb_present "
        }
    } elseif  {[xstrncmp $what_is_family "kintex7"]} {
    puts $outputFile "# axi_ethernet: Base family is kintex7"
        if { $avb_present == 0} {
        puts $outputFile "# axi_ethernet: AVB is not present"
            if { $soft_or_hard_temac == 0} {
            puts $outputFile "# axi_ethernet: Using soft TEMAC 10/100 Mbps"
                if { $what_is_phy_interface == 0} {
                    puts $outputFile "# axi_ethernet: Using PHY interface MII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 40000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 40000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*mii_interface/mii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 38800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 1} {
                puts $outputFile "# axi_ethernet: PHY interface GMII is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 3} {
                puts $outputFile "# axi_ethernet: PHY interface RGMII v2.0 is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 4} {
                puts $outputFile "# axi_ethernet: PHY interface SGMII is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 5} {
                puts $outputFile "# axi_ethernet: PHY interface 1000BASE-X is not supported in soft TEMAC 10/100 Mbps mode"
                } else {
                puts $outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
                }
            } elseif  { $soft_or_hard_temac == 1} {
            puts $outputFile "# axi_ethernet: Using soft TEMAC 10/100/1000 Mbps"
                if { $what_is_phy_interface == 0} {
                puts $outputFile "# axi_ethernet: Using PHY interface MII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 40000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 40000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*mii_interface/mii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 38800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 1} {
                puts $outputFile "# axi_ethernet: Using PHY interface GMII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "PIN \"*CLOCK_INST/BUFGMUX_SPEED_CLK.I1\" TIG;"
                    puts $outputFile "PIN \"*CLOCK_INST/BUFGMUX_SPEED_CLK.CE0\" TIG;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 8000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "NET \"REF_CLK\" TNM_NET = \"clk_ref_clk\";"
                    puts $outputFile "TIMEGRP \"ref_clk\" = \"clk_ref_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ref_clk\" = PERIOD \"ref_clk\" 5 ns HIGH 50 %;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*gmii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*gmii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*gmii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx1\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_ref_clk\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_ref_clk\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 3} {
                puts $outputFile "# axi_ethernet: Using PHY interface RGMII v2.0"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"RGMII_RXC\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMEGRP \"receiver_clock\" = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"receiver_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*pcspma_userclk2\" TNM_NET = \"clk_der_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_der_clock\" = \"clk_der_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_der_clk\" = PERIOD \"gtx_der_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "NET \"REF_CLK\" TNM_NET = \"clk_ref_clk\";"
                    puts $outputFile "TIMEGRP \"ref_clk\" = \"clk_ref_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ref_clk\" = PERIOD \"ref_clk\" 5 ns HIGH 50 %;"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_der_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    puts $outputFile "INST \"*/SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/SYNC_TX_RESET_I/R4\" TNM = \"txrst\";"
                    puts $outputFile "INST \"*/SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/rgmii_interface/GEN_K7.tx_reset90_sync/R2\" TNM = \"rst90sync1\";"
                    puts $outputFile "INST \"*/SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/rgmii_interface/GEN_K7.tx_reset90_sync/R1\" TNM = \"rst90sync2\";"
                    puts $outputFile "INST \"*/SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/enable_gen/GEN_A7K7.reset90gen/R2\" TNM = \"rst90sync3\";"
                    puts $outputFile "INST \"*/SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/enable_gen/GEN_A7K7.reset90gen/R1\" TNM = \"rst90sync4\";"
                    puts $outputFile "TIMESPEC \"TS_txrst90\" = FROM \"txrst\" TO  \"rst90sync1\" TIG;"
                    puts $outputFile "TIMESPEC \"TS_txrst901\" = FROM \"txrst\" TO  \"rst90sync2\" TIG;"
                    puts $outputFile "TIMESPEC \"TS_txrst902\" = FROM \"txrst\" TO  \"rst90sync3\" TIG;"
                    puts $outputFile "TIMESPEC \"TS_txrst903\" = FROM \"txrst\" TO  \"rst90sync4\" TIG;"

                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                      puts $outputFile "TIMESPEC \"TS_${instname}_GTX_DER_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_der_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                     puts $outputFile "TIMESPEC \"TS_${instname}_GTX_DER_CLK_2_AXILITECLKS\"     = FROM \"clk_der_gtx\"        TO \"axi4lite_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                      puts $outputFile "TIMESPEC \"TS_${instname}_AXILITECLKS_2_GTX_DER_CLKS\"     = FROM \"axi4lite_clk\"        TO \"clk_der_gtx\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"

                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_ref_clk\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_ref_clk\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 4} {
                puts $outputFile "# axi_ethernet: Using PHY interface SGMII"
                puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*ETHERNET/SOFT_PCS_PMA.GEN_K7.userclk2\" TNM_NET  = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*ETHERNET/SOFT_PCS_PMA.GEN_K7.userclk2\" TNM_NET  = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_clk_tx_mac\" = PERIOD \"clk_tx_mac\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx1\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                     if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_tx_mac\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_tx_mac\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_tx_mac\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "NET \"*/pcspma_clkin\" TNM_NET = \"gtrefclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtrefclk\" = PERIOD \"gtrefclk\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/pcspma_gtclkout\" TNM_NET = \"txoutclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_txoutclk\" = PERIOD \"txoutclk\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/RXRECCLK\" TNM_NET = \"rxrecclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rxrecclk\" = PERIOD \"rxrecclk\" 8 ns;"
                    puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/wr_addr_gray*\" TNM = \"wr_graycode\";"
                    puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/rd_addr_gray*\" TNM = \"rd_graycode\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_skew_control1\" = FROM \"wr_graycode\" TO \"FFS\" 14 ns DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_skew_control2\" = FROM \"rd_graycode\" TO \"FFS\" 14 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/rd_data*\" TNM = \"fifo_read\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ram_read_false_path\" = FROM \"RAMS\" TO \"fifo_read\" 6 ns DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 5} {
                puts $outputFile "# axi_ethernet: Using PHY interface 1000BASE-X"
                 puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*ETHERNET/SOFT_PCS_PMA.GEN_K7.userclk2\" TNM_NET  = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*ETHERNET/SOFT_PCS_PMA.GEN_K7.userclk2\" TNM_NET  = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_clk_tx_mac\" = PERIOD \"clk_tx_mac\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx1\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                     if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_tx_mac\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_tx_mac\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_tx_mac\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "NET \"*/pcspma_clkin\" TNM_NET = \"gtrefclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtrefclk\" = PERIOD \"gtrefclk\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/pcspma_gtclkout\" TNM_NET = \"txoutclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_txoutclk\" = PERIOD \"txoutclk\" 8000 ps HIGH 50 %;"

                } else {
                puts $outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
                }
            } elseif  { $soft_or_hard_temac == 2} {
            puts $outputFile "# axi_ethernet: V6 hard TEMAC, C_TYPE = 6, 10/100/1000 Mbps is not supported in kintex7"
            } else {
            puts $outputFile "# axi_ethernet: Unsupported C_TYPE value $soft_or_hard_temac "
            }
###########################################################################################################
##
##
###########################################################################################################
        } elseif { $avb_present == 1} {
        puts $outputFile "# axi_ethernet: AVB is present"
            if { $soft_or_hard_temac == 0} {
            puts $outputFile "# axi_ethernet: Using soft TEMAC 10/100 Mbps"
                if { $what_is_phy_interface == 0} {
                    puts $outputFile "# axi_ethernet: Using PHY interface MII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 40000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 40000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*mii_interface/mii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 38800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"

                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                    } elseif  { $what_is_phy_interface == 1} {
                puts $outputFile "# axi_ethernet: PHY interface GMII is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 3} {
                puts $outputFile "# axi_ethernet: PHY interface RGMII v2.0 is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 4} {
                puts $outputFile "# axi_ethernet: PHY interface SGMII is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 5} {
                puts $outputFile "# axi_ethernet: PHY interface 1000BASE-X is not supported in soft TEMAC 10/100 Mbps mode"
                } else {
                puts $outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
                }
            } elseif  { $soft_or_hard_temac == 1} {
            puts $outputFile "# axi_ethernet: Using soft TEMAC 10/100/1000 Mbps"
                if { $what_is_phy_interface == 0} {
                puts $outputFile "# axi_ethernet: Using PHY interface MII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 40000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 40000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*mii_interface/mii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 38800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"

                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                } elseif  { $what_is_phy_interface == 1} {
                puts $outputFile "# axi_ethernet: Using PHY interface GMII"

                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "PIN \"*CLOCK_INST/BUFGMUX_SPEED_CLK.I1\" TIG;"
                    puts $outputFile "PIN \"*CLOCK_INST/BUFGMUX_SPEED_CLK.CE0\" TIG;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 8000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "NET \"REF_CLK\" TNM_NET = \"clk_ref_clk\";"
                    puts $outputFile "TIMEGRP \"ref_clk\" = \"clk_ref_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ref_clk\" = PERIOD \"ref_clk\" 5 ns HIGH 50 %;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*gmii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*gmii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*gmii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx1\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_ref_clk\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_ref_clk\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"

                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                   } elseif  { $what_is_phy_interface == 3} {
                puts $outputFile "# axi_ethernet: Using PHY interface RGMII v2.0"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"RGMII_RXC\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMEGRP \"receiver_clock\" = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"receiver_clock\" 8000 ps HIGH 50 %;"

                    ##  Tools do not recognize below NET
                    puts $outputFile "NET \"AXI_STR_AVBTX_ACLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "NET \"REF_CLK\" TNM_NET = \"clk_ref_clk\";"
                    puts $outputFile "TIMEGRP \"ref_clk\" = \"clk_ref_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ref_clk\" = PERIOD \"ref_clk\" 5 ns HIGH 50 %;"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_ref_clk\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_ref_clk\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"


                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                } elseif  { $what_is_phy_interface == 4} {
                puts $outputFile "# axi_ethernet: Using PHY interface SGMII"
                 puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_AVBRX_ACLK\" TNM_NET  = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"AXI_STR_AVBRX_ACLK\" TNM_NET  = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_clk_tx_mac\" = PERIOD \"clk_tx_mac\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx1\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                     if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_tx_mac\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_tx_mac\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_tx_mac\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "NET \"*/pcspma_clkin\" TNM_NET = \"gtrefclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtrefclk\" = PERIOD \"gtrefclk\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/pcspma_gtclkout\" TNM_NET = \"txoutclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_txoutclk\" = PERIOD \"txoutclk\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/RXRECCLK\" TNM_NET = \"rxrecclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rxrecclk\" = PERIOD \"rxrecclk\" 8 ns;"
                    puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/wr_addr_gray*\" TNM = \"wr_graycode\";"
                    puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/rd_addr_gray*\" TNM = \"rd_graycode\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_skew_control1\" = FROM \"wr_graycode\" TO \"FFS\" 14 ns DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_skew_control2\" = FROM \"rd_graycode\" TO \"FFS\" 14 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/rd_data*\" TNM = \"fifo_read\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ram_read_false_path\" = FROM \"RAMS\" TO \"fifo_read\" 6 ns DATAPATHONLY;"
                 puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"
                                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                    } elseif  { $what_is_phy_interface == 5} {
                puts $outputFile "# axi_ethernet: Using PHY interface 1000BASE-X"
                 puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_AVBRX_ACLK\" TNM_NET  = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"AXI_STR_AVBRX_ACLK\" TNM_NET  = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_clk_tx_mac\" = PERIOD \"clk_tx_mac\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx1\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                     if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_tx_mac\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_tx_mac\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_tx_mac\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "NET \"*/pcspma_clkin\" TNM_NET = \"gtrefclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtrefclk\" = PERIOD \"gtrefclk\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/pcspma_gtclkout\" TNM_NET = \"txoutclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_txoutclk\" = PERIOD \"txoutclk\" 8000 ps HIGH 50 %;"
                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                } else {
                puts $outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
                }
            } elseif  { $soft_or_hard_temac == 2} {
            puts $outputFile "# axi_ethernet: V6 hard TEMAC, C_TYPE = 6, 10/100/1000 Mbps is not supported in kintex7"
            } else {
            puts $outputFile "# axi_ethernet: Unsupported C_TYPE value $soft_or_hard_temac "
            }
        } else {
        puts $outputFile "# axi_ethernet: Unsupported C_AVB value $avb_present "
        }
        } elseif  {[xstrncmp $what_is_family "artix7"] || [xstrncmp $what_is_family "zynq"]} {
    puts $outputFile "# axi_ethernet: Base family is artix7"
        if { $avb_present == 0} {
        puts $outputFile "# axi_ethernet: AVB is not present"
            if { $soft_or_hard_temac == 0} {
            puts $outputFile "# axi_ethernet: Using soft TEMAC 10/100 Mbps"
                if { $what_is_phy_interface == 0} {
                    puts $outputFile "# axi_ethernet: Using PHY interface MII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 40000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 40000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*mii_interface/mii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 38800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 1} {
                puts $outputFile "# axi_ethernet: PHY interface GMII is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 3} {
                puts $outputFile "# axi_ethernet: PHY interface RGMII v2.0 is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 4} {
                puts $outputFile "# axi_ethernet: PHY interface SGMII is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 5} {
                puts $outputFile "# axi_ethernet: PHY interface 1000BASE-X is not supported in soft TEMAC 10/100 Mbps mode"
                } else {
                puts $outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
                }
            } elseif  { $soft_or_hard_temac == 1} {
            puts $outputFile "# axi_ethernet: Using soft TEMAC 10/100/1000 Mbps"
                if { $what_is_phy_interface == 0} {
                puts $outputFile "# axi_ethernet: Using PHY interface MII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 40000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 40000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*mii_interface/mii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 38800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 1} {
                puts $outputFile "# axi_ethernet: Using PHY interface GMII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "PIN \"*CLOCK_INST/BUFGMUX_SPEED_CLK.I1\" TIG;"
                    puts $outputFile "PIN \"*CLOCK_INST/BUFGMUX_SPEED_CLK.CE0\" TIG;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 8000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "NET \"REF_CLK\" TNM_NET = \"clk_ref_clk\";"
                    puts $outputFile "TIMEGRP \"ref_clk\" = \"clk_ref_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ref_clk\" = PERIOD \"ref_clk\" 5 ns HIGH 50 %;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*gmii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*gmii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*gmii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx1\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_ref_clk\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_ref_clk\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 3} {
                puts $outputFile "# axi_ethernet: Using PHY interface RGMII v2.0"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"RGMII_RXC\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMEGRP \"receiver_clock\" = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"receiver_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*pcspma_userclk2\" TNM_NET = \"clk_der_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_der_clock\" = \"clk_der_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_der_clk\" = PERIOD \"gtx_der_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "NET \"REF_CLK\" TNM_NET = \"clk_ref_clk\";"
                    puts $outputFile "TIMEGRP \"ref_clk\" = \"clk_ref_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ref_clk\" = PERIOD \"ref_clk\" 5 ns HIGH 50 %;"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_der_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    puts $outputFile "INST \"*/SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/SYNC_TX_RESET_I/R4\" TNM = \"txrst\";"
                    if {($c_device == "xc7z010" || $c_device == "xc7z020")} {
                      puts $outputFile "INST \"*/SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/rgmii_interface/GEN_A7.tx_reset90_sync/R2\" TNM = \"rst90sync1\";"
                      puts $outputFile "INST \"*/SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/rgmii_interface/GEN_A7.tx_reset90_sync/R1\" TNM = \"rst90sync2\";"
                    } else {
                      puts $outputFile "INST \"*/SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/rgmii_interface/GEN_K7.tx_reset90_sync/R2\" TNM = \"rst90sync1\";"
                      puts $outputFile "INST \"*/SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/rgmii_interface/GEN_K7.tx_reset90_sync/R1\" TNM = \"rst90sync2\";"
                    }

                    puts $outputFile "INST \"*/SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/enable_gen/GEN_A7K7.reset90gen/R2\" TNM = \"rst90sync3\";"
                    puts $outputFile "INST \"*/SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/enable_gen/GEN_A7K7.reset90gen/R1\" TNM = \"rst90sync4\";"
                    puts $outputFile "TIMESPEC \"TS_txrst90\" = FROM \"txrst\" TO  \"rst90sync1\" TIG;"
                    puts $outputFile "TIMESPEC \"TS_txrst901\" = FROM \"txrst\" TO  \"rst90sync2\" TIG;"
                    puts $outputFile "TIMESPEC \"TS_txrst902\" = FROM \"txrst\" TO  \"rst90sync3\" TIG;"
                    puts $outputFile "TIMESPEC \"TS_txrst903\" = FROM \"txrst\" TO  \"rst90sync4\" TIG;"

                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                      puts $outputFile "TIMESPEC \"TS_${instname}_GTX_DER_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_der_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                     puts $outputFile "TIMESPEC \"TS_${instname}_GTX_DER_CLK_2_AXILITECLKS\"     = FROM \"clk_der_gtx\"        TO \"axi4lite_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                      puts $outputFile "TIMESPEC \"TS_${instname}_AXILITECLKS_2_GTX_DER_CLKS\"     = FROM \"axi4lite_clk\"        TO \"clk_der_gtx\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"

                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_ref_clk\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_ref_clk\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 4} {
                puts $outputFile "# axi_ethernet: Using PHY interface SGMII"
                puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*ETHERNET/SOFT_PCS_PMA.GEN_K7.userclk2\" TNM_NET  = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*ETHERNET/SOFT_PCS_PMA.GEN_K7.userclk2\" TNM_NET  = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_clk_tx_mac\" = PERIOD \"clk_tx_mac\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx1\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                     if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_tx_mac\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_tx_mac\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_tx_mac\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "NET \"*/pcspma_clkin\" TNM_NET = \"gtrefclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtrefclk\" = PERIOD \"gtrefclk\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/pcspma_gtclkout\" TNM_NET = \"txoutclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_txoutclk\" = PERIOD \"txoutclk\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/RXRECCLK\" TNM_NET = \"rxrecclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rxrecclk\" = PERIOD \"rxrecclk\" 8 ns;"
                    puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/wr_addr_gray*\" TNM = \"wr_graycode\";"
                    puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/rd_addr_gray*\" TNM = \"rd_graycode\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_skew_control1\" = FROM \"wr_graycode\" TO \"FFS\" 14 ns DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_skew_control2\" = FROM \"rd_graycode\" TO \"FFS\" 14 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/rd_data*\" TNM = \"fifo_read\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ram_read_false_path\" = FROM \"RAMS\" TO \"fifo_read\" 6 ns DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 5} {
                puts $outputFile "# axi_ethernet: Using PHY interface 1000BASE-X"
                 puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*ETHERNET/SOFT_PCS_PMA.GEN_K7.userclk2\" TNM_NET  = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*ETHERNET/SOFT_PCS_PMA.GEN_K7.userclk2\" TNM_NET  = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_clk_tx_mac\" = PERIOD \"clk_tx_mac\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx1\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                     if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_tx_mac\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_tx_mac\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_tx_mac\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "NET \"*/pcspma_clkin\" TNM_NET = \"gtrefclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtrefclk\" = PERIOD \"gtrefclk\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/pcspma_gtclkout\" TNM_NET = \"txoutclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_txoutclk\" = PERIOD \"txoutclk\" 8000 ps HIGH 50 %;"

                } else {
                puts $outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
                }
            } elseif  { $soft_or_hard_temac == 2} {
            puts $outputFile "# axi_ethernet: V6 hard TEMAC, C_TYPE = 6, 10/100/1000 Mbps is not supported in kintex7"
            } else {
            puts $outputFile "# axi_ethernet: Unsupported C_TYPE value $soft_or_hard_temac "
            }
###########################################################################################################
##
##
###########################################################################################################
        } elseif { $avb_present == 1} {
        puts $outputFile "# axi_ethernet: AVB is present"
            if { $soft_or_hard_temac == 0} {
            puts $outputFile "# axi_ethernet: Using soft TEMAC 10/100 Mbps"
                if { $what_is_phy_interface == 0} {
                    puts $outputFile "# axi_ethernet: Using PHY interface MII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 40000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 40000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*mii_interface/mii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 38800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"

                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                    } elseif  { $what_is_phy_interface == 1} {
                puts $outputFile "# axi_ethernet: PHY interface GMII is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 3} {
                puts $outputFile "# axi_ethernet: PHY interface RGMII v2.0 is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 4} {
                puts $outputFile "# axi_ethernet: PHY interface SGMII is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 5} {
                puts $outputFile "# axi_ethernet: PHY interface 1000BASE-X is not supported in soft TEMAC 10/100 Mbps mode"
                } else {
                puts $outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
                }
            } elseif  { $soft_or_hard_temac == 1} {
            puts $outputFile "# axi_ethernet: Using soft TEMAC 10/100/1000 Mbps"
                if { $what_is_phy_interface == 0} {
                puts $outputFile "# axi_ethernet: Using PHY interface MII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 40000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 40000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*mii_interface/mii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 38800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"

                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                } elseif  { $what_is_phy_interface == 1} {
                puts $outputFile "# axi_ethernet: Using PHY interface GMII"

                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "PIN \"*CLOCK_INST/BUFGMUX_SPEED_CLK.I1\" TIG;"
                    puts $outputFile "PIN \"*CLOCK_INST/BUFGMUX_SPEED_CLK.CE0\" TIG;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 8000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "NET \"REF_CLK\" TNM_NET = \"clk_ref_clk\";"
                    puts $outputFile "TIMEGRP \"ref_clk\" = \"clk_ref_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ref_clk\" = PERIOD \"ref_clk\" 5 ns HIGH 50 %;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*gmii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*gmii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*gmii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx1\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_ref_clk\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_ref_clk\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"

                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                   } elseif  { $what_is_phy_interface == 3} {
                puts $outputFile "# axi_ethernet: Using PHY interface RGMII v2.0"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"RGMII_RXC\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMEGRP \"receiver_clock\" = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"receiver_clock\" 8000 ps HIGH 50 %;"

                    ##  Tools do not recognize below NET
                    puts $outputFile "NET \"AXI_STR_AVBTX_ACLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "NET \"REF_CLK\" TNM_NET = \"clk_ref_clk\";"
                    puts $outputFile "TIMEGRP \"ref_clk\" = \"clk_ref_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ref_clk\" = PERIOD \"ref_clk\" 5 ns HIGH 50 %;"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_ref_clk\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_ref_clk\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"


                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                } elseif  { $what_is_phy_interface == 4} {
                puts $outputFile "# axi_ethernet: Using PHY interface SGMII"
                 puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_AVBRX_ACLK\" TNM_NET  = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"AXI_STR_AVBRX_ACLK\" TNM_NET  = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_clk_tx_mac\" = PERIOD \"clk_tx_mac\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx1\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                     if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_tx_mac\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_tx_mac\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_tx_mac\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "NET \"*/pcspma_clkin\" TNM_NET = \"gtrefclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtrefclk\" = PERIOD \"gtrefclk\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/pcspma_gtclkout\" TNM_NET = \"txoutclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_txoutclk\" = PERIOD \"txoutclk\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/RXRECCLK\" TNM_NET = \"rxrecclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rxrecclk\" = PERIOD \"rxrecclk\" 8 ns;"
                    puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/wr_addr_gray*\" TNM = \"wr_graycode\";"
                    puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/rd_addr_gray*\" TNM = \"rd_graycode\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_skew_control1\" = FROM \"wr_graycode\" TO \"FFS\" 14 ns DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_skew_control2\" = FROM \"rd_graycode\" TO \"FFS\" 14 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/rd_data*\" TNM = \"fifo_read\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ram_read_false_path\" = FROM \"RAMS\" TO \"fifo_read\" 6 ns DATAPATHONLY;"
                 puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"
                                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                    } elseif  { $what_is_phy_interface == 5} {
                puts $outputFile "# axi_ethernet: Using PHY interface 1000BASE-X"
                 puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_AVBRX_ACLK\" TNM_NET  = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"AXI_STR_AVBRX_ACLK\" TNM_NET  = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_clk_tx_mac\" = PERIOD \"clk_tx_mac\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx1\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                     if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_tx_mac\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_tx_mac\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_tx_mac\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "NET \"*/pcspma_clkin\" TNM_NET = \"gtrefclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtrefclk\" = PERIOD \"gtrefclk\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/pcspma_gtclkout\" TNM_NET = \"txoutclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_txoutclk\" = PERIOD \"txoutclk\" 8000 ps HIGH 50 %;"
                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                } else {
                puts $outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
                }
            } elseif  { $soft_or_hard_temac == 2} {
            puts $outputFile "# axi_ethernet: V6 hard TEMAC, C_TYPE = 6, 10/100/1000 Mbps is not supported in kintex7"
            } else {
            puts $outputFile "# axi_ethernet: Unsupported C_TYPE value $soft_or_hard_temac "
            }
        } else {
        puts $outputFile "# axi_ethernet: Unsupported C_AVB value $avb_present "
        }
    } elseif  {[xstrncmp $what_is_family "virtex7"]} {
    puts $outputFile "# axi_ethernet: Base family is virtex7"
        if { $avb_present == 0} {
        puts $outputFile "# axi_ethernet: AVB is not present"
            if { $soft_or_hard_temac == 0} {
            puts $outputFile "# axi_ethernet: Using soft TEMAC 10/100 Mbps"
                if { $what_is_phy_interface == 0} {
                    puts $outputFile "# axi_ethernet: Using PHY interface MII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 40000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 40000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*mii_interface/mii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 38800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 1} {
                puts $outputFile "# axi_ethernet: PHY interface GMII is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 3} {
                puts $outputFile "# axi_ethernet: PHY interface RGMII v2.0 is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 4} {
                puts $outputFile "# axi_ethernet: PHY interface SGMII is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 5} {
                puts $outputFile "# axi_ethernet: PHY interface 1000BASE-X is not supported in soft TEMAC 10/100 Mbps mode"
                } else {
                puts $outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
                }
            } elseif  { $soft_or_hard_temac == 1} {
            puts $outputFile "# axi_ethernet: Using soft TEMAC 10/100/1000 Mbps"
                if { $what_is_phy_interface == 0} {
                    puts $outputFile "# axi_ethernet: Using PHY interface MII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 40000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 40000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*mii_interface/mii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 38800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 1} {
                puts $outputFile "# axi_ethernet: Using PHY interface GMII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "PIN \"*CLOCK_INST/BUFGMUX_SPEED_CLK.I1\" TIG;"
                    puts $outputFile "PIN \"*CLOCK_INST/BUFGMUX_SPEED_CLK.CE0\" TIG;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 8000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "NET \"REF_CLK\" TNM_NET = \"clk_ref_clk\";"
                    puts $outputFile "TIMEGRP \"ref_clk\" = \"clk_ref_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ref_clk\" = PERIOD \"ref_clk\" 5 ns HIGH 50 %;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*gmii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*gmii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*gmii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx1\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_ref_clk\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_ref_clk\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"

                } elseif  { $what_is_phy_interface == 3} {
                    puts $outputFile "# axi_ethernet: Using PHY interface RGMII v2.0"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"RGMII_RXC\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMEGRP \"receiver_clock\" = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"receiver_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "NET \"REF_CLK\" TNM_NET = \"clk_ref_clk\";"
                    puts $outputFile "TIMEGRP \"ref_clk\" = \"clk_ref_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ref_clk\" = PERIOD \"ref_clk\" 5 ns HIGH 50 %;"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_ref_clk\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_ref_clk\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 4} {
                puts $outputFile "# axi_ethernet: Using PHY interface SGMII"
                puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*ETHERNET/SOFT_PCS_PMA.GEN_V7.userclk2\" TNM_NET  = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*ETHERNET/SOFT_PCS_PMA.GEN_V7.userclk2\" TNM_NET  = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_clk_tx_mac\" = PERIOD \"clk_tx_mac\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx1\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                     if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_tx_mac\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_tx_mac\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_tx_mac\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "NET \"*/pcspma_clkin\" TNM_NET = \"gtrefclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtrefclk\" = PERIOD \"gtrefclk\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/pcspma_gtclkout\" TNM_NET = \"txoutclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_txoutclk\" = PERIOD \"txoutclk\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/RXRECCLK\" TNM_NET = \"rxrecclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rxrecclk\" = PERIOD \"rxrecclk\" 8 ns;"
                    puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/wr_addr_gray*\" TNM = \"wr_graycode\";"
                    puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/rd_addr_gray*\" TNM = \"rd_graycode\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_skew_control1\" = FROM \"wr_graycode\" TO \"FFS\" 14 ns DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_skew_control2\" = FROM \"rd_graycode\" TO \"FFS\" 14 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/rd_data*\" TNM = \"fifo_read\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ram_read_false_path\" = FROM \"RAMS\" TO \"fifo_read\" 6 ns DATAPATHONLY;"

                } elseif  { $what_is_phy_interface == 5} {
                puts $outputFile "# axi_ethernet: Using PHY interface 1000BASE-X"
                 puts $outputFile "# axi_ethernet: Using PHY interface 1000BASE-X"
                 puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*ETHERNET/SOFT_PCS_PMA.GEN_V7.userclk2\" TNM_NET  = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*ETHERNET/SOFT_PCS_PMA.GEN_V7.userclk2\" TNM_NET  = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_clk_tx_mac\" = PERIOD \"clk_tx_mac\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx1\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                     if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_tx_mac\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_tx_mac\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_tx_mac\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "NET \"*/pcspma_clkin\" TNM_NET = \"gtrefclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtrefclk\" = PERIOD \"gtrefclk\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/pcspma_gtclkout\" TNM_NET = \"txoutclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_txoutclk\" = PERIOD \"txoutclk\" 8000 ps HIGH 50 %;"

                } else {
                puts $outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
                }
            } elseif  { $soft_or_hard_temac == 2} {
            puts $outputFile "# axi_ethernet: V6 hard TEMAC, C_TYPE = 6, 10/100/1000 Mbps is not supported in virtex7"
            } else {
            puts $outputFile "# axi_ethernet: Unsupported C_TYPE value $soft_or_hard_temac "
            }
###########################################################################################################
##
##
###########################################################################################################
        } elseif { $avb_present == 1} {
        puts $outputFile "# axi_ethernet: AVB is present"
            if { $soft_or_hard_temac == 0} {
            puts $outputFile "# axi_ethernet: Using soft TEMAC 10/100 Mbps"
                if { $what_is_phy_interface == 0} {
                puts $outputFile "# axi_ethernet: Using PHY interface MII"
                   puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 40000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 40000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*mii_interface/mii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 38800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"

                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 1} {
                puts $outputFile "# axi_ethernet: PHY interface GMII is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 3} {
                puts $outputFile "# axi_ethernet: PHY interface RGMII v2.0 is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 4} {
                puts $outputFile "# axi_ethernet: PHY interface SGMII is not supported in soft TEMAC 10/100 Mbps mode"
                } elseif  { $what_is_phy_interface == 5} {
                puts $outputFile "# axi_ethernet: PHY interface 1000BASE-X is not supported in soft TEMAC 10/100 Mbps mode"
                } else {
                puts $outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
                }
            } elseif  { $soft_or_hard_temac == 1} {
            puts $outputFile "# axi_ethernet: Using soft TEMAC 10/100/1000 Mbps"
                if { $what_is_phy_interface == 0} {
                puts $outputFile "# axi_ethernet: Using PHY interface MII"
                  puts $outputFile "# axi_ethernet: Using PHY interface MII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 40000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 40000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*mii_interface/mii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/mii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*mii_interface/rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 38800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"

                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 1} {
                   puts $outputFile "# axi_ethernet: Using PHY interface GMII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"*/rx_mac_aclk_int\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "PIN \"*CLOCK_INST/BUFGMUX_SPEED_CLK.I1\" TIG;"
                    puts $outputFile "PIN \"*CLOCK_INST/BUFGMUX_SPEED_CLK.CE0\" TIG;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/tx_mac_aclk*\" TNM_NET = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_mac_clk\" = PERIOD \"tx_mac_clk\" 8000 ps HIGH 50%;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "NET \"REF_CLK\" TNM_NET = \"clk_ref_clk\";"
                    puts $outputFile "TIMEGRP \"ref_clk\" = \"clk_ref_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ref_clk\" = PERIOD \"ref_clk\" 5 ns HIGH 50 %;"
                    if { $include_io == 1} {
                    puts $outputFile "# axi_ethernet: Using IOBs"
                        puts $outputFile "INST \"*gmii_txd*\"  IOB = force;"
                        puts $outputFile "INST \"*gmii_tx_en\" IOB = force;"
                        puts $outputFile "INST \"*gmii_tx_er\" IOB = force;"
                        puts $outputFile "INST \"*rxd_to_mac*\"  IOB = force;"
                        puts $outputFile "INST \"*rx_dv_to_mac\" IOB = force;"
                        puts $outputFile "INST \"*rx_er_to_mac\" IOB = force;"
                    } else {
                    puts $outputFile "# axi_ethernet: Not using IOBs"
                    }
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx1\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_TX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_tx_mac\"     TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_TX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_tx_mac\"     TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"     TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_ref_clk\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_ref_clk\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"

                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                    # clock domain crossing constraints for resets
                    #---------------------------------------------
                   } elseif  { $what_is_phy_interface == 3} {
                    puts $outputFile "# axi_ethernet: Using PHY interface RGMII v2.0"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"RGMII_RXC\" TNM_NET = \"clk_rx\";"
                    puts $outputFile "TIMEGRP \"receiver_clock\" = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"receiver_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "NET \"REF_CLK\" TNM_NET = \"clk_ref_clk\";"
                    puts $outputFile "TIMEGRP \"ref_clk\" = \"clk_ref_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ref_clk\" = PERIOD \"ref_clk\" 5 ns HIGH 50 %;"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                    if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_ref_clk\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_ref_clk\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_ref_clk\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"

                } elseif  { $what_is_phy_interface == 4} {
                    puts $outputFile "# axi_ethernet: Using PHY interface SGMII"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_AVBRX_ACLK\" TNM_NET  = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"AXI_STR_AVBRX_ACLK\" TNM_NET  = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_clk_tx_mac\" = PERIOD \"clk_tx_mac\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx1\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                     if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_tx_mac\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_tx_mac\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_tx_mac\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "NET \"*/pcspma_clkin\" TNM_NET = \"gtrefclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtrefclk\" = PERIOD \"gtrefclk\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/pcspma_gtclkout\" TNM_NET = \"txoutclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_txoutclk\" = PERIOD \"txoutclk\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/RXRECCLK\" TNM_NET = \"rxrecclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rxrecclk\" = PERIOD \"rxrecclk\" 8 ns;"
                    puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/wr_addr_gray*\" TNM = \"wr_graycode\";"
                    puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/rd_addr_gray*\" TNM = \"rd_graycode\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_skew_control1\" = FROM \"wr_graycode\" TO \"FFS\" 14 ns DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_skew_control2\" = FROM \"rd_graycode\" TO \"FFS\" 14 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/rd_data*\" TNM = \"fifo_read\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_ram_read_false_path\" = FROM \"RAMS\" TO \"fifo_read\" 6 ns DATAPATHONLY;"
                 puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"
                                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"
                } elseif  { $what_is_phy_interface == 5} {
                    puts $outputFile "# axi_ethernet: Using PHY interface 1000BASE-X"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"axi4lite_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_TXC_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXD_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_RXS_ACLK\" TNM_NET = \"axistream_clk\";"
                    puts $outputFile "NET \"AXI_STR_AVBRX_ACLK\" TNM_NET  = \"clk_rx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clk\" = PERIOD \"clk_rx\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"GTX_CLK\" TNM_NET = \"clk_gtx\";"
                    puts $outputFile "TIMEGRP \"gtx_clock\" = \"clk_gtx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtx_clk\" = PERIOD \"gtx_clock\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"AXI_STR_AVBRX_ACLK\" TNM_NET  = \"clk_tx_mac\";"
                    puts $outputFile "TIMEGRP \"tx_mac_clk\" = \"clk_tx_mac\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_clk_tx_mac\" = PERIOD \"clk_tx_mac\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = \"host_clk\";"
                    puts $outputFile "TIMEGRP \"host\" = \"host_clk\" EXCEPT \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_host_clk\" = PERIOD \"host\" ${axi_lite_aclk_period_ps} PS HIGH 50 % PRIORITY 10;"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "INST \"*/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*\" TNM=\"flow_rx_to_tx\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx\" = FROM \"flow_rx_to_tx\" TO \"clk_tx_mac\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_flow_rx_to_tx1\" = FROM \"flow_rx_to_tx\" TO \"clk_gtx\" 7800 ps DATAPATHONLY;"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN/PHY/ENABLE_REG\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?READY_INT\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?STATE_COUNT*\" TNM = FFS \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_TRISTATE\" TNM = \"mdio_logic\";"
                    puts $outputFile "INST \"*/MANIFGEN?MANAGEN?PHY?MDIO_OUT\" TNM = \"mdio_logic\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_mdio\" = PERIOD \"mdio_logic\" 400000 ps PRIORITY 0;"
                     if { $axi_stream_tx_aclk_period_ps == $axi_lite_aclk_period_ps} {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                    } else {
                    puts $outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_AXI4LITECLKS\" = FROM \"axistream_clk\" TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                        puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_AXISTREAMCLKS\" = FROM \"axi4lite_clk\"  TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    }
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_RX_MAC_ACLK\" = FROM \"axistream_clk\"  TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXISTREAMCLKS\" = FROM \"clk_rx\"         TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITECLKS_2_RX_MAC_ACLK\"  = FROM \"axi4lite_clk\"   TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_AXI4LITECLKS\"  = FROM \"clk_rx\"         TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_GTX_CLK\"     = FROM \"axistream_clk\"  TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_gtx\"        TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_GTX_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_gtx\"        TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_GTX_CLK\"       = FROM \"clk_rx\"         TO \"clk_gtx\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_GTX_CLK_2_RX_MAC_ACLK\"       = FROM \"clk_gtx\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_RX_MAC_ACLK_2_TX_MAC_ACLK\"   = FROM \"clk_rx\"         TO \"clk_tx_mac\"       8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_TX_MAC_ACLK_2_RX_MAC_ACLK\"   = FROM \"clk_tx_mac\"        TO \"clk_rx\"    8000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXISTREAMCLKS_2_REF_CLK\"     = FROM \"axistream_clk\"  TO \"clk_tx_mac\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXISTREAMCLKS\"     = FROM \"clk_tx_mac\"    TO \"axistream_clk\" ${axi_stream_tx_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_AXI4LITE_CLK_2_REF_CLK\"      = FROM \"axi4lite_clk\"   TO \"clk_tx_mac\"   5000  ps DATAPATHONLY;"
                    puts $outputFile "TIMESPEC \"TS_${instname}_REF_CLK_2_AXI4LITE_CLK\"      = FROM \"clk_tx_mac\"    TO \"axi4lite_clk\"  ${axi_lite_aclk_period_ps} PS DATAPATHONLY;"
                    puts $outputFile "NET \"*/pcspma_clkin\" TNM_NET = \"gtrefclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_gtrefclk\" = PERIOD \"gtrefclk\" 8000 ps HIGH 50 %;"
                    puts $outputFile "NET \"*/pcspma_gtclkout\" TNM_NET = \"txoutclk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_txoutclk\" = PERIOD \"txoutclk\" 8000 ps HIGH 50 %;"
                    puts $outputFile "# axi_ethernet: AVB specific constraints"
                    puts $outputFile "NET \"RTC_CLK\" TNM_NET = \"rtc_clk\";"
                    puts $outputFile "TIMEGRP \"rtc_clock\" = \"rtc_clk\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_clock\" = PERIOD \"rtc_clock\" ${avb_rtc_clk_period_ps} PS HIGH 50 %;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_toggle_req\" TNM= FFS \"tx_sample_req\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"tx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_req\" = FROM \"tx_sample_req\" TO \"tx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/sample_taken_toggle\" TNM= FFS \"tx_sample_taken\";"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"tx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_sample_taken\" = FROM \"tx_sample_taken\" TO \"tx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/tx_rtc_sample_inst/timestamp*\" TNM= FFS \"tx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_timestamp_route\" = FROM \"tx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_toggle_req\"                  TNM= FFS \"rx_sample_req\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync\" TNM= FFS \"rx_sample_req_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_req\" = FROM \"rx_sample_req\" TO \"rx_sample_req_resync\" ${avb_rtc_clk_period_ps} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/sample_taken_toggle\"                  TNM= FFS \"rx_sample_taken\";"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync\" TNM= FFS \"rx_sample_taken_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_sample_taken\" = FROM \"rx_sample_taken\" TO \"rx_sample_taken_resync\" TIG;"
                    puts $outputFile "INST \"*top/rx_rtc_sample_inst/timestamp*\" TNM = FFS \"rx_timestamp\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_timestamp_route\" = FROM \"rx_timestamp\" TO \"FFS\" 8 ns DATAPATHONLY;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good\"                   TNM= FFS \"frame_was_good\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"frame_was_good_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_frame_was_good\" = FROM \"frame_was_good\" TO \"frame_was_good_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle\"               TNM= FFS \"rx_clear_toggle\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync\" TNM= FFS \"rx_clear_toggle_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rx_clear_toggle\" = FROM \"rx_clear_toggle\" TO \"rx_clear_toggle_resync\" TIG;"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2\"                    TNM= FFS \"tx_valid_reg2\";"
                    puts $outputFile "INST \"*top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync\" TNM= FFS \"tx_valid_reg2_resync\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_valid_reg2\" = FROM \"tx_valid_reg2\" TO \"tx_valid_reg2_resync\" TIG;"

                    # clock domain crossing constraints for Tx Configuration
                    #---------------------------------------------------------
                    puts $outputFile "NET \"S_AXI_ACLK\" TNM_NET = FFS \"cpu_bus\";"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/wr_toggle\"                        TNM= FFS \"tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_tx_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_wr_toggle\" = FROM \"tx_wr_toggle\" TO \"resync_tx_write_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/rd_toggle\"                    TNM= FFS \"tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync\" TNM= FFS \"resync_tx_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_rd_toggle\" = FROM \"tx_rd_toggle\" TO \"resync_tx_read_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_tx_rd_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_rd_toggle\" = FROM \"cpu_tx_rd_toggle\" TO \"resync_cpu_tx_rd_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle\"                  TNM= FFS \"cpu_tx_wr_toggle\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync\" TNM= FFS \"resync_cpu_tx_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_tx_wr_toggle\" = FROM \"cpu_tx_wr_toggle\" TO \"resync_cpu_tx_wr_toggle\" TIG;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_be*\"   TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_cpu_reclock/new_addr*\" TNM= FFS \"tx_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_cpu_sample\" = FROM \"cpu_bus\" TO \"tx_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"

                    puts $outputFile "INST \"*top/avb_configuration_inst/clear_tx_int\"      TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_send_frame*\"    TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_sendslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "INST \"*top/avb_configuration_inst/tx_idleslope_int*\" TNM= FFS \"tx_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_tx_regs_sample\" = FROM \"cpu_bus\" TO \"tx_regs_sample\" 24 ns DATAPATHONLY;"


                    # clock domain crossing constraints for RTC Configuration Logic
                    #---------------------------------------------------------
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle\"                        TNM= FFS \"rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync\"    TNM= FFS \"resync_rtc_write_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_wr_toggle\" = FROM \"rtc_wr_toggle\" TO \"resync_rtc_write_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle\"                       TNM= FFS \"rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync\"    TNM= FFS \"resync_rtc_read_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_rd_toggle\" = FROM \"rtc_rd_toggle\" TO \"resync_rtc_read_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle\"                  TNM= FFS \"cpu_rtc_rd_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync\" TNM= FFS \"resync_cpu_rtc_rd_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_rd_toggle\" = FROM \"cpu_rtc_rd_toggle\" TO \"resync_cpu_rtc_rd_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle\"                        TNM= FFS \"cpu_rtc_wr_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync\"    TNM= FFS \"resync_cpu_rtc_wr_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_cpu_rtc_wr_toggle\" = FROM \"cpu_rtc_wr_toggle\" TO \"resync_cpu_rtc_wr_toggle\" TIG;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be*\"      TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\"    TNM= FFS \"rtc_cpu_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_cpu_sample\" = FROM \"cpu_bus\" TO \"rtc_cpu_sample\" ${avb_rtc_clk_period_ps_2x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset*\" TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_sec_offset*\"     TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_epoch_offset*\"   TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_rtc_increment*\"  TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\"      TNM= FFS \"rtc_regs_sample\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_rtc_regs_sample\" = FROM \"cpu_bus\" TO \"rtc_regs_sample\" ${avb_rtc_clk_period_ps_3x} ps DATAPATHONLY;"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle\"      TNM= FFS \"pulse1div128sec_toggle\";"
                    puts $outputFile "INST \"*top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync\" TNM= FFS \"resync_set_toggle\";"
                    puts $outputFile "TIMESPEC \"TS_${instname}_pulse1div128sec_toggle\" = FROM \"pulse1div128sec_toggle\" TO \"resync_set_toggle\" ${axi_lite_aclk_period_ps} ps DATAPATHONLY;"
                } else {
                puts $outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
                }
            } elseif  { $soft_or_hard_temac == 2} {
            puts $outputFile "# axi_ethernet: V6 hard TEMAC, C_TYPE = 6, 10/100/1000 Mbps is not supported in virtex7"
            } else {
            puts $outputFile "# axi_ethernet: Unsupported C_TYPE value $soft_or_hard_temac "
            }
        } else {
        puts $outputFile "# axi_ethernet: Unsupported C_AVB value $avb_present "
        }
    } else {
    puts $outputFile "# axi_ethernet: Unsupported C_FAMILY value $what_is_family "
    }
    puts $outputFile "#"
    puts $outputFile "#"
    puts $outputFile "\n"

    # Close the file
    close $outputFile

    #XDC constraints
    set  xdc_filePath [xget_ncf_dir $mhsinst]
    file mkdir    $xdc_filePath

    # specify file name
    set    xdc_instname   [xget_hw_parameter_value $mhsinst "INSTANCE"]
    set    xdc_name_lower [string      tolower    $instname]
    set    xdc_fileName   $name_lower
    append xdc_fileName   ".xdc"
    append xdc_filePath   $xdc_fileName

    set xdc_outputFile [open $xdc_filePath "w"]

        set what_is_family [xget_hw_parameter_value $mhsinst "C_FAMILY"]

    set soft_or_hard_temac [xget_hw_parameter_value $mhsinst "C_TYPE"]

    set what_is_phy_interface [xget_hw_parameter_value $mhsinst "C_PHY_TYPE"]

    set avb_present [xget_hw_parameter_value $mhsinst "C_AVB"]

    set include_io [xget_hw_parameter_value $mhsinst "C_INCLUDE_IO"]

    set s6_transceiver [xget_hw_parameter_value $mhsinst "C_TRANS"]

    set axi_lite_aclk_freq [xget_hw_parameter_value $mhsinst "C_S_AXI_ACLK_FREQ_HZ"]
    set axi_lite_aclk_period_ns [expr $axi_lite_aclk_period_ps/ 1000.0 ]

    set axi_stream_tx_aclk_freq [xget_hw_parameter_value $mhsinst "C_AXI_STR_TXC_ACLK_FREQ_HZ"]
    set axi_stream_tx_aclk_period_ns [expr $axi_stream_tx_aclk_period_ps / 1000.0 ]

    if { $avb_present == 1} {
      #  Get RTC_CLK Freq
      set avb_rtc_clk_port [xget_hw_port_handle $mhsinst "RTC_CLK"]
      set avb_rtc_clk_freq [xget_hw_subproperty_value $avb_rtc_clk_port CLK_FREQ_HZ]
      if { [string compare $avb_rtc_clk_freq ""] == 0 } {
      #  Check for an empty string.  If $avb_rtc_clk_freq is an empty string, then the RTC clock is not connected
        error  "\n $instname PORT: RTC_CLK is not connected to a clock source!\n" "" "mdt_error"
      } else {
          if {$avb_rtc_clk_freq < 25000000} {
            # force an error if the Frequency is not greater 25 MHz or greater
            set avb_rtc_clk_freq_MHz [expr $avb_rtc_clk_freq * 1.0 / 1000000]
            error  "\n $instname PORT: RTC_CLK is set to $avb_rtc_clk_freq_MHz MHz. It cannot be less than 25 MHz!\n" "" "mdt_error"
          } else {
            # avb_rtc_clk_freq >= 25000000
            set avb_rtc_clk_period_ns [expr $avb_rtc_clk_period_ps / 1000.0 ]
            set avb_rtc_clk_period_ns_2x [expr $avb_rtc_clk_period_ns * 2]
            set avb_rtc_clk_period_ns_3x [expr $avb_rtc_clk_period_ns * 3]

            set axi_lite_aclk_period_ns_2x [expr $axi_lite_aclk_period_ns * 2]
          }
      }
    }
    if  {[xstrncmp $what_is_family "kintex7"]} {
         puts $xdc_outputFile "# axi_ethernet: Base family is kintex7"
         if { $soft_or_hard_temac == 0} {
             puts $xdc_outputFile "# axi_ethernet: Using soft TEMAC 10/100 Mbps"
             if { $what_is_phy_interface == 0} {
               puts $xdc_outputFile "# axi_ethernet: Using PHY interface MII"
               puts $xdc_outputFile "set rx_mac_aclk_int \[get_pins SOFT_SYS.I_TEMAC/rx_mac_aclk\]"
               puts $xdc_outputFile "set rx_mac_aclk_int \[get_clocks -of \[get_pins SOFT_SYS.I_TEMAC/rx_mac_aclk\]\]"
               puts $xdc_outputFile "set tx_mac_aclk_int \[get_pins SOFT_SYS.I_TEMAC/tx_mac_aclk\]"
               puts $xdc_outputFile "set gtx_clk         \[get_nets GTX_CLK\]"

#               puts $xdc_outputFile "create_clock -add -name rx_mac_aclk_int -period 40      \$rx_mac_aclk_int"
               puts $xdc_outputFile "create_clock -add -name tx_mac_aclk_int -period 40      \$tx_mac_aclk_int"
               puts $xdc_outputFile "create_clock -add -name GTX_CLK         -period 8.000   \$gtx_clk"
               puts $xdc_outputFile "create_clock -add -name S_AXI_ACLK      -period ${axi_lite_aclk_period_ns} \[get_nets S_AXI_ACLK\]"
               puts $xdc_outputFile "create_clock -add -name AXI_STR_RXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXD_ACLK\]"
               puts $xdc_outputFile "create_clock -add -name AXI_STR_TXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXD_ACLK\]"
               puts $xdc_outputFile "create_clock -add -name AXI_STR_RXS_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXS_ACLK\]"
               puts $xdc_outputFile "create_clock -add -name AXI_STR_TXC_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXC_ACLK\]"

               if { $include_io == 1} {
                  puts $xdc_outputFile "# axi_ethernet: Using IOBs"
                  puts $xdc_outputFile "set     gig_tx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*mii_txd_*\]"
                  puts $xdc_outputFile "set gig_tx_signals \[ list \$gig_tx_signals   \[get_cells SOFT_SYS.I_TEMAC/*/*/*mii_tx_en*\] \]"
                  puts $xdc_outputFile "set gig_tx_signals \[ list \$gig_tx_signals   \[get_cells SOFT_SYS.I_TEMAC/*/*/*mii_tx_er*\] \]"

                  puts $xdc_outputFile "set     gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*rxd_to_mac_*\]"
                  puts $xdc_outputFile "set  gig_rx_signals \[ list \$gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*rx_dv_to_mac*\]\]"
                  puts $xdc_outputFile "set  gig_rx_signals \[ list \$gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*rx_er_to_mac*\]\]"

                  puts $xdc_outputFile "set_property IOB TRUE \[get_cells \[ list \$gig_tx_signals \] \]"
                  puts $xdc_outputFile "set_property IOB TRUE \[get_cells \[ list \$gig_rx_signals \] \]"
               } else {
                  puts $xdc_outputFile "# axi_ethernet: Not using IOBs"
               }
               puts $xdc_outputFile "create_clock -add -name MDC               -period 400.000 \[get_pins SOFT_SYS.I_TEMAC/mdc\]"

#

                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX* }  \] -filter { name =~ *Q } \] "
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*} \] -filter { name =~ *Q } \] "

               puts $xdc_outputFile "set     axi_str_signals \[get_clocks AXI_STR_RXD_ACLK\]"
               puts $xdc_outputFile "set     axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_RXS_ACLK\]\]"
               puts $xdc_outputFile "set     axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXC_ACLK\]\]"
               puts $xdc_outputFile "set     axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXD_ACLK\]\]"
               # axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints
               if { $axi_stream_tx_aclk_period_ns == $axi_lite_aclk_period_ns} {
                  puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
               } else {
                  puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                  puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks AXI_STR_RXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks AXI_STR_RXS_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks AXI_STR_TXC_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks AXI_STR_TXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks AXI_STR_RXD_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks AXI_STR_RXS_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks AXI_STR_TXD_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks AXI_STR_TXC_ACLK\]"
               }
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks AXI_STR_RXD_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks AXI_STR_RXS_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks AXI_STR_TXD_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks AXI_STR_TXC_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks AXI_STR_RXD_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks AXI_STR_RXS_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks AXI_STR_TXD_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks AXI_STR_TXC_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks S_AXI_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks AXI_STR_RXD_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks AXI_STR_RXS_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks AXI_STR_TXD_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks AXI_STR_TXC_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks AXI_STR_RXD_ACLK \]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks AXI_STR_RXS_ACLK \]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks AXI_STR_TXD_ACLK \]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks AXI_STR_TXC_ACLK \]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks S_AXI_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks AXI_STR_RXD_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks AXI_STR_RXS_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks AXI_STR_TXD_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks AXI_STR_TXC_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks AXI_STR_RXD_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks AXI_STR_RXS_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks AXI_STR_TXD_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks AXI_STR_TXC_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks S_AXI_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks GTX_CLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
             } elseif  { $what_is_phy_interface == 1} {
             puts $xdc_outputFile "# axi_ethernet: PHY interface GMII is not supported in soft TEMAC 10/100 Mbps mode"
             } elseif  { $what_is_phy_interface == 3} {
             puts $xdc_outputFile "# axi_ethernet: PHY interface RGMII v2.0 is not supported in soft TEMAC 10/100 Mbps mode"
             } elseif  { $what_is_phy_interface == 4} {
             puts $xdc_outputFile "# axi_ethernet: PHY interface SGMII is not supported in soft TEMAC 10/100 Mbps mode"
             } elseif  { $what_is_phy_interface == 5} {
             puts $xdc_outputFile "# axi_ethernet: PHY interface 1000BASE-X is not supported in soft TEMAC 10/100 Mbps mode"
             } else {
             puts $xdc_outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
             }
         } elseif  { $soft_or_hard_temac == 1} {
             puts $xdc_outputFile "# axi_ethernet: Using soft TEMAC 10/100/1000 Mbps"
             if { $what_is_phy_interface == 0} {
               puts $xdc_outputFile "# axi_ethernet: Using PHY interface MII"
               puts $xdc_outputFile "set rx_mac_aclk_int \[get_pins SOFT_SYS.I_TEMAC/rx_mac_aclk\]"
               puts $xdc_outputFile "set rx_mac_aclk_int \[get_clocks -of  \[get_pins SOFT_SYS.I_TEMAC/rx_mac_aclk\]\]"
               puts $xdc_outputFile "set tx_mac_aclk_int \[get_pins SOFT_SYS.I_TEMAC/tx_mac_aclk\]"
               puts $xdc_outputFile "set gtx_clk         \[get_nets GTX_CLK\]"

#               puts $xdc_outputFile "create_clock -add -name rx_mac_aclk_int -period 40      \$rx_mac_aclk_int"
               puts $xdc_outputFile "create_clock -add -name tx_mac_aclk_int -period 40      \$tx_mac_aclk_int"
               puts $xdc_outputFile "create_clock -add -name GTX_CLK         -period 8.000   \$gtx_clk"
               puts $xdc_outputFile "create_clock -add -name S_AXI_ACLK      -period ${axi_lite_aclk_period_ns} \[get_nets S_AXI_ACLK\]"
               puts $xdc_outputFile "create_clock -add -name AXI_STR_RXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXD_ACLK\]"
               puts $xdc_outputFile "create_clock -add -name AXI_STR_TXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXD_ACLK\]"
               puts $xdc_outputFile "create_clock -add -name AXI_STR_RXS_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXS_ACLK\]"
               puts $xdc_outputFile "create_clock -add -name AXI_STR_TXC_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXC_ACLK\]"

               if { $include_io == 1} {
                  puts $xdc_outputFile "# axi_ethernet: Using IOBs"
                  puts $xdc_outputFile "set     gig_tx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*mii_txd_*\]"
                  puts $xdc_outputFile "set  gig_tx_signals \[ list \$gig_tx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*mii_tx_en*\]\]"
                  puts $xdc_outputFile "set  gig_tx_signals \[ list \$gig_tx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*mii_tx_er*\]\]"

                  puts $xdc_outputFile "set     gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*rxd_to_mac_*\]"
                  puts $xdc_outputFile "set  gig_rx_signals \[ list \$gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*rx_dv_to_mac*\]\]"
                  puts $xdc_outputFile "set  gig_rx_signals \[ list \$gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*rx_er_to_mac*\]\]"

                  puts $xdc_outputFile "set_property IOB TRUE \[get_cells \[ list \$gig_tx_signals \] \]"
                  puts $xdc_outputFile "set_property IOB TRUE \[get_cells \[ list \$gig_rx_signals \] \]"
               } else {
                  puts $xdc_outputFile "# axi_ethernet: Not using IOBs"
               }
               puts $xdc_outputFile "create_clock -add -name MDC               -period 400.000 \[get_pins SOFT_SYS.I_TEMAC/mdc\]"

#

                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX* }  \] -filter { name =~ *Q } \] "
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*} \] -filter { name =~ *Q } \] "

               puts $xdc_outputFile "set     axi_str_signals \[get_clocks AXI_STR_RXD_ACLK\]"
               puts $xdc_outputFile "set     axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_RXS_ACLK\]\]"
               puts $xdc_outputFile "set     axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXC_ACLK\]\]"
               puts $xdc_outputFile "set     axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXD_ACLK\]\]"
               # axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints
               if { $axi_stream_tx_aclk_period_ns == $axi_lite_aclk_period_ns} {
                  puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
               } else {
                  puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                  puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks   AXI_STR_RXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks   AXI_STR_RXS_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks   AXI_STR_TXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks   AXI_STR_TXC_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks   AXI_STR_RXD_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks   AXI_STR_RXS_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks   AXI_STR_TXD_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks   AXI_STR_TXC_ACLK\]"
               }
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks   AXI_STR_RXD_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks   AXI_STR_RXS_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks   AXI_STR_TXD_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks   AXI_STR_TXC_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks   AXI_STR_RXD_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks   AXI_STR_RXS_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks   AXI_STR_TXD_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks   AXI_STR_TXC_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks S_AXI_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks   AXI_STR_RXD_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks   AXI_STR_RXS_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks   AXI_STR_TXD_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks   AXI_STR_TXC_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks   AXI_STR_RXD_ACLK \]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks   AXI_STR_RXS_ACLK \]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks   AXI_STR_TXD_ACLK \]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks   AXI_STR_TXC_ACLK \]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks S_AXI_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks   AXI_STR_RXD_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks   AXI_STR_RXS_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks   AXI_STR_TXD_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks   AXI_STR_TXC_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks   AXI_STR_RXD_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks   AXI_STR_RXS_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks   AXI_STR_TXD_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks   AXI_STR_TXC_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks S_AXI_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks GTX_CLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
             } elseif  { $what_is_phy_interface == 1} {
                puts $xdc_outputFile "# axi_ethernet: Using PHY interface GMII"
                puts $xdc_outputFile "set rx_mac_aclk_int \[get_pins -hier -filter { name =~ *SOFT_SYS.I_TEMAC/rx_mac_aclk }  \]"
                puts $xdc_outputFile "set tx_mac_aclk_int \[get_pins -hier -filter { name =~ *SOFT_SYS.I_TEMAC/tx_mac_aclk }  \]"
                puts $xdc_outputFile "set gtx_clk         \[get_nets GTX_CLK\]"

                puts $xdc_outputFile "set rx_mac_aclk_int \[get_clocks -of \[get_pins -hier -filter { name =~ *SOFT_SYS.I_TEMAC/rx_mac_aclk }  \] \]"
                puts $xdc_outputFile "create_clock -add -name tx_mac_aclk_int  -period 8.000                            \$tx_mac_aclk_int"
                puts $xdc_outputFile "create_clock -add -name GTX_CLK          -period 8.000                            \$gtx_clk"
                puts $xdc_outputFile "create_clock -add -name S_AXI_ACLK       -period ${axi_lite_aclk_period_ns}       \[get_nets S_AXI_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name REF_CLK          -period 5.000                            \[get_pins SOFT_SYS.I_TEMAC/refclk\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_RXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_TXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_RXS_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_TXC_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXC_ACLK\]"

                puts $xdc_outputFile "set bufgmux_I1  \[get_pins SOFT_SYS.I_TEMAC/*/clock_inst/bufgmux_speed_clk/I1\]"
                puts $xdc_outputFile "set bufgmux_CE0 \[get_pins SOFT_SYS.I_TEMAC/*/clock_inst/bufgmux_speed_clk/CE0\]"

                puts $xdc_outputFile "set_false_path -through  \$bufgmux_I1"
                puts $xdc_outputFile "set_false_path -to      \$bufgmux_CE0"

                if { $include_io == 1} {
                   puts $xdc_outputFile "# axi_ethernet: Using IOBs"
                   puts $xdc_outputFile "set     gig_tx_signals \[get_cells SOFT_SYS.I_TEMAC/*/gmii_interface/GEN_V6.GEN_IO.gmii_txd_*\]"
                   puts $xdc_outputFile "set     gig_tx_signals \[ list \$gig_tx_signals \[get_cells SOFT_SYS.I_TEMAC/*/gmii_interface/GEN_V6.GEN_IO.gmii_tx_en*\]\]"
                   puts $xdc_outputFile "set     gig_tx_signals \[ list \$gig_tx_signals \[get_cells SOFT_SYS.I_TEMAC/*/gmii_interface/GEN_V6.GEN_IO.gmii_tx_er*\]\]"

                   puts $xdc_outputFile "set     gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/gmii_interface/GEN_V6.GEN_IO.rxd_to_mac_*\]"
                   puts $xdc_outputFile "set     gig_rx_signals \[ list \$gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/gmii_interface/GEN_V6.GEN_IO.rx_dv_to_mac*\]\]"
                   puts $xdc_outputFile "set     gig_rx_signals \[ list \$gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/gmii_interface/GEN_V6.GEN_IO.rx_er_to_mac*\]\]"

                   puts $xdc_outputFile "set_property IOB TRUE \[get_cells  \$gig_tx_signals\]"
                   puts $xdc_outputFile "set_property IOB TRUE \[get_cells  \$gig_rx_signals\]"
                } else {
                   puts $xdc_outputFile "# axi_ethernet: Not using IOBs"
                }
                puts $xdc_outputFile "create_clock -add -name MDC               -period 400.000 \[get_pins SOFT_SYS.I_TEMAC/mdc\]"

#
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX* }  \] -filter { name =~ *Q } \] "
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*} \] -filter { name =~ *Q } \] "

                puts $xdc_outputFile "set     axi_str_signals \[get_clocks AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_RXS_ACLK\]\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXC_ACLK\]\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXD_ACLK\]\]"

                # axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints
                if { $axi_stream_tx_aclk_period_ns == $axi_lite_aclk_period_ns} {
                   puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                } else {
                   puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                   puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks   AXI_STR_RXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks   AXI_STR_RXS_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks   AXI_STR_TXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks   AXI_STR_TXC_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks   AXI_STR_RXD_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks   AXI_STR_RXS_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks   AXI_STR_TXD_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks   AXI_STR_TXC_ACLK\]"
                }
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks   AXI_STR_RXD_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks   AXI_STR_RXS_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks   AXI_STR_TXD_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks   AXI_STR_TXC_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks   AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks   AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks   AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks   AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks   AXI_STR_RXD_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks   AXI_STR_RXS_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks   AXI_STR_TXD_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks   AXI_STR_TXC_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks   AXI_STR_RXD_ACLK \]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks   AXI_STR_RXS_ACLK \]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks   AXI_STR_TXD_ACLK \]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks   AXI_STR_TXC_ACLK \]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks   AXI_STR_RXD_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks   AXI_STR_RXS_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks   AXI_STR_TXD_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks   AXI_STR_TXC_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks   AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks   AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks   AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks   AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks tx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks \$rx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks GTX_CLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 5.000  -from \[get_clocks   AXI_STR_RXD_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay 5.000  -from \[get_clocks   AXI_STR_RXS_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay 5.000  -from \[get_clocks   AXI_STR_TXD_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay 5.000  -from \[get_clocks   AXI_STR_TXC_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks REF_CLK\] -to \[get_clocks   AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks REF_CLK\] -to \[get_clocks   AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks REF_CLK\] -to \[get_clocks   AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks REF_CLK\] -to \[get_clocks   AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 5.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks REF_CLK\] -to \[get_clocks S_AXI_ACLK\]"
             } elseif  { $what_is_phy_interface == 3} {
                puts $xdc_outputFile "# axi_ethernet: Using PHY interface RGMII v2.0"
                puts $xdc_outputFile "create_clock -add -name USR_CLK2       -period 8.000                           \[get_pins SOFT_SYS.I_TEMAC/gtx_clk\]"
                puts $xdc_outputFile "create_clock -add -name GTX_CLK          -period 8.000                            \[get_nets GTX_CLK]"
                puts $xdc_outputFile "create_clock -add -name S_AXI_ACLK       -period ${axi_lite_aclk_period_ns}       \[get_nets S_AXI_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name RGMII_RXC        -period 8.000                            \[get_pins SOFT_SYS.I_TEMAC/rgmii_rxc\]"
                puts $xdc_outputFile "create_clock -add -name REF_CLK          -period 5.000                            \[get_pins SOFT_SYS.I_TEMAC/refclk\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_RXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_TXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_RXS_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_TXC_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXC_ACLK\]"


                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX* }  \] -filter { name =~ *Q } \] "
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*} \] -filter { name =~ *Q } \] "

                puts $xdc_outputFile "create_clock -add -name MDC              -period 400.000 \[get_pins SOFT_SYS.I_TEMAC/mdc\]"

                puts $xdc_outputFile "set     sync_tx_reset_r4 \[get_cells SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/SYNC_TX_RESET_I/R4*\]"
                puts $xdc_outputFile "#set_false_path -from \$sync_tx_reset_r4 -to \[get_cells SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/rgmii_interface/GEN_*.tx_reset90_sync/R2*\]"
                puts $xdc_outputFile "#set_false_path -from \$sync_tx_reset_r4 -to \[get_cells SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/rgmii_interface/GEN_*.tx_reset90_sync/R1*\]"
                puts $xdc_outputFile "set_false_path -from \$sync_tx_reset_r4 -to \[get_cells SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/enable_gen/GEN_*.reset90gen/R2*\]"
                puts $xdc_outputFile "set_false_path -from \$sync_tx_reset_r4 -to \[get_cells SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/enable_gen/GEN_*.reset90gen/R1*\]"
                puts $xdc_outputFile "set     axi_str_signals \[get_clocks AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_RXS_ACLK\]\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXC_ACLK\]\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXD_ACLK\]\]"

                if { $axi_stream_tx_aclk_period_ns == $axi_lite_aclk_period_ns} {
                   puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                } else {
                   puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                   puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks   AXI_STR_RXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks   AXI_STR_RXS_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks   AXI_STR_TXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks   AXI_STR_TXC_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks   AXI_STR_RXD_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks   AXI_STR_RXS_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks   AXI_STR_TXD_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks   AXI_STR_TXC_ACLK\]"
                }

                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks   AXI_STR_RXD_ACLK\] -to \[get_clocks RGMII_RXC\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks   AXI_STR_RXS_ACLK\] -to \[get_clocks RGMII_RXC\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks   AXI_STR_TXD_ACLK\] -to \[get_clocks RGMII_RXC\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks   AXI_STR_TXC_ACLK\] -to \[get_clocks RGMII_RXC\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RGMII_RXC\]   -to \[get_clocks   AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RGMII_RXC\]   -to \[get_clocks   AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RGMII_RXC\]   -to \[get_clocks   AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RGMII_RXC\]   -to \[get_clocks   AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks RGMII_RXC\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks RGMII_RXC\]   -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks   AXI_STR_RXD_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks   AXI_STR_RXS_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks   AXI_STR_TXD_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks   AXI_STR_TXC_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks   AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks   AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks   AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks   AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks GTX_CLK\]     -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks USR_CLK2\]    -to \[get_clocks   AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks USR_CLK2\]    -to \[get_clocks   AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks USR_CLK2\]    -to \[get_clocks   AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks USR_CLK2\]    -to \[get_clocks   AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks   AXI_STR_RXD_ACLK\] -to \[get_clocks USR_CLK2 \]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks   AXI_STR_RXS_ACLK\] -to \[get_clocks USR_CLK2 \]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks   AXI_STR_TXD_ACLK\] -to \[get_clocks USR_CLK2 \]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks   AXI_STR_TXC_ACLK\] -to \[get_clocks USR_CLK2 \]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks RGMII_RXC\]   -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks GTX_CLK\]     -to \[get_clocks RGMII_RXC\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks   AXI_STR_RXD_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks   AXI_STR_RXS_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks   AXI_STR_TXD_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks   AXI_STR_TXC_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks REF_CLK\]     -to \[get_clocks   AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks REF_CLK\]     -to \[get_clocks   AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks REF_CLK\]     -to \[get_clocks   AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks REF_CLK\]     -to \[get_clocks   AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks REF_CLK\]     -to \[get_clocks S_AXI_ACLK\]"
             } elseif  { $what_is_phy_interface == 4} {
                puts $xdc_outputFile "# axi_ethernet: Using PHY interface SGMII"
                puts $xdc_outputFile "create_clock -add -name S_AXI_ACLK       -period ${axi_lite_aclk_period_ns}       \[get_nets S_AXI_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name GTX_CLK          -period 8.000                            \[get_nets GTX_CLK\]"
                puts $xdc_outputFile "create_clock -add -name TXUSR_CLK2 -period 8.000 \[get_pins SOFT_SYS.I_TEMAC/tx_mac_aclk\]"
                puts $xdc_outputFile "create_clock -add -name RXUSR_CLK2 -period 8.000 \[get_pins SOFT_SYS.I_TEMAC/rx_mac_aclk\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_RXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_TXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_RXS_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_TXC_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXC_ACLK\]"

#
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX* }  \] -filter { name =~ *Q } \] "
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*} \] -filter { name =~ *Q } \] "

                puts $xdc_outputFile "create_clock -add -name MDC -period 400.000 \[get_pins SOFT_SYS.I_TEMAC/mdc\]"

                puts $xdc_outputFile "set     axi_str_signals \[get_clocks AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_RXS_ACLK\]\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXC_ACLK\]\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXD_ACLK\]\]"

                if { $axi_stream_tx_aclk_period_ns == $axi_lite_aclk_period_ns} {
                    puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                } else {
                    puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                    puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks   AXI_STR_RXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks   AXI_STR_RXS_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks   AXI_STR_TXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks   AXI_STR_TXC_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks   AXI_STR_RXD_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks   AXI_STR_RXS_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks   AXI_STR_TXD_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks   AXI_STR_TXC_ACLK\]"
                }

                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks   AXI_STR_RXD_ACLK\] -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks   AXI_STR_RXS_ACLK\] -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks   AXI_STR_TXD_ACLK\] -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks   AXI_STR_TXC_ACLK\] -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RXUSR_CLK2\]  -to \[get_clocks   AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RXUSR_CLK2\]  -to \[get_clocks   AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RXUSR_CLK2\]  -to \[get_clocks   AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RXUSR_CLK2\]  -to \[get_clocks   AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks RXUSR_CLK2\]  -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks   AXI_STR_RXD_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks   AXI_STR_RXS_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks   AXI_STR_TXD_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks   AXI_STR_TXC_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks   AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks   AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks   AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks   AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks GTX_CLK\]     -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks RXUSR_CLK2\]  -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks GTX_CLK\]     -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks RXUSR_CLK2\]  -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks TXUSR_CLK2\]  -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks   AXI_STR_RXD_ACLK\] -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks   AXI_STR_RXS_ACLK\] -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks   AXI_STR_TXD_ACLK\] -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks   AXI_STR_TXC_ACLK\] -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]  -to \[get_clocks   AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]  -to \[get_clocks   AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]  -to \[get_clocks   AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]  -to \[get_clocks   AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks TXUSR_CLK2\]  -to \[get_clocks S_AXI_ACLK\]"

                puts $xdc_outputFile "#create_clock -name pcspma_clkin    -period 8.000  \[get_nets */pcspma_clkin\]"
                puts $xdc_outputFile "#create_clock -name pcspma_gtclkout -period 8.000 \[get_nets */pcspma_gtclkout\]"
                puts $xdc_outputFile "#create_clock -name RXRECCLK        -period 8.000  \[get_nets */RXRECCLK\]"

                puts $xdc_outputFile "set_max_delay 14.000  -from \[get_cells SOFT_PCS_PMA.I_PCSPMA/GEN_*_PCS_PMA.GEN_*_SGMII.I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/wr_addr_gray*\] -to \[all_registers -edge_triggered\]"
                puts $xdc_outputFile "set_max_delay 14.000  -from \[get_cells SOFT_PCS_PMA.I_PCSPMA/GEN_*_PCS_PMA.GEN_*_SGMII.I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/rd_addr_gray*\] -to \[all_registers -edge_triggered\]"

                puts $xdc_outputFile "set_max_delay 6.000   -from \[all_rams\]  -to \[get_cells SOFT_PCS_PMA.I_PCSPMA/GEN_*_PCS_PMA.GEN_*_SGMII.I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/rd_data*\]"
             } elseif  { $what_is_phy_interface == 5} {
                puts $xdc_outputFile "# axi_ethernet: Using PHY interface 1000BASE-X"
                puts $xdc_outputFile "create_clock -add -name S_AXI_ACLK   -period ${axi_lite_aclk_period_ns}          \[get_nets S_AXI_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name GTX_CLK      -period 8.000                               \[get_nets GTX_CLK\]"
                puts $xdc_outputFile "create_clock -add -name TXUSR_CLK2 -period 8.000 \[get_pins SOFT_SYS.I_TEMAC/tx_mac_aclk\]"
                puts $xdc_outputFile "create_clock -add -name RXUSR_CLK2 -period 8.000 \[get_pins SOFT_SYS.I_TEMAC/rx_mac_aclk\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_RXD_ACLK -period ${axi_stream_tx_aclk_period_ns} \[get_nets AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_TXD_ACLK -period ${axi_stream_tx_aclk_period_ns} \[get_nets AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_RXS_ACLK -period ${axi_stream_tx_aclk_period_ns} \[get_nets AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_TXC_ACLK -period ${axi_stream_tx_aclk_period_ns} \[get_nets AXI_STR_TXC_ACLK\]"

#
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX* }  \] -filter { name =~ *Q } \] "
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*} \] -filter { name =~ *Q } \] "

                puts $xdc_outputFile "create_clock -add -name MDC                               -period 400.000 \[get_pins SOFT_SYS.I_TEMAC/mdc\]"

                puts $xdc_outputFile "set     axi_str_signals \[get_clocks AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_RXS_ACLK\]\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXC_ACLK\]\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXD_ACLK\]\]"

                if { $axi_stream_tx_aclk_period_ns == $axi_lite_aclk_period_ns} {
                    puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                } else {
                    puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                    puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_RXD_ACLK\]  -to \[get_clocks S_AXI_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_RXS_ACLK\]  -to \[get_clocks S_AXI_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_TXD_ACLK\]  -to \[get_clocks S_AXI_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_TXC_ACLK\]  -to \[get_clocks S_AXI_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                }

                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RXUSR_CLK2\]    -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RXUSR_CLK2\]    -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks RXUSR_CLK2\]    -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks GTX_CLK\]     -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks RXUSR_CLK2\]    -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks GTX_CLK\]     -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks RXUSR_CLK2\]    -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks S_AXI_ACLK\]"

                puts $xdc_outputFile "#create_clock -name pcspma_clkin    -period 8.000  \[get_nets */pcspma_clkin\]"
                puts $xdc_outputFile "#create_clock -name pcspma_gtclkout -period 8.000 \[get_nets */pcspma_gtclkout\]"
             } else {
                puts $xdc_outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
             }
         } elseif  { $soft_or_hard_temac == 2} {
            puts $xdc_outputFile "# axi_ethernet: V6 hard TEMAC, C_TYPE = 6, 10/100/1000 Mbps is not supported in kintex7"
         } else {
            puts $xdc_outputFile "# axi_ethernet: Unsupported C_TYPE value $soft_or_hard_temac "
         }
        if { $avb_present == 0} {
            puts $xdc_outputFile "# axi_ethernet: AVB is not present"
        } elseif { $avb_present == 1} {
            puts $xdc_outputFile "# axi_ethernet: AVB is present"
            puts $xdc_outputFile "create_clock -add -name RTC_CLK -period ${avb_rtc_clk_period_ns} \[get_pins SOFT_SYS.I_TEMAC/rtc_clk\]"
            puts $xdc_outputFile "set avb_top SOFT_SYS.I_TEMAC/GEN_GMII.I_GMII/trimac_core/TRIMAC_TOP/ETHERNET_AVB.eth_avb_inst/top/top"
            puts $xdc_outputFile "set_max_delay ${avb_rtc_clk_period_ns}  -from \[get_cells \$avb_top/tx_rtc_sample_inst/sample_toggle_req*\] -to \[get_cells \$avb_top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync*\]"
            puts $xdc_outputFile "set_max_delay 8.000  -from \[get_cells \$avb_top/tx_rtc_sample_inst/timestamp*\] -to \[all_registers -edge_triggered\]"
            puts $xdc_outputFile "set_max_delay ${avb_rtc_clk_period_ns}  -from \[get_cells \$avb_top/rx_rtc_sample_inst/sample_toggle_req*\] -to \[get_cells \$avb_top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync*\]"
            puts $xdc_outputFile "set_max_delay 8.000  -from \[get_cells \$avb_top/rx_rtc_sample_inst/timestamp*\] -to \[all_registers -edge_triggered\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/tx_rtc_sample_inst/sample_taken_toggle*\] -to \[get_cells \$avb_top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/rx_rtc_sample_inst/sample_taken_toggle*\] -to \[get_cells \$avb_top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good*\] -to \[get_cells \$avb_top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle*\] -to \[get_cells \$avb_top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2*\] -to \[get_cells \$avb_top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync*\]"

            # clock domain crossing constraints for Tx Configuration
            #---------------------------------------------------------
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/avb_configuration_inst/tx_cpu_reclock/wr_toggle*\] -to \[get_cells \$avb_top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/avb_configuration_inst/tx_cpu_reclock/rd_toggle*\] -to \[get_cells \$avb_top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle*\] -to \[get_cells \$avb_top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle*\] -to \[get_cells \$avb_top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync*\]"
            puts $xdc_outputFile "set_max_delay ${avb_rtc_clk_period_ns_2x} -from \[get_clocks S_AXI_ACLK\] -to \[get_cells \[list \$avb_top/avb_configuration_inst/tx_cpu_reclock/new_be* \$avb_top/avb_configuration_inst/tx_cpu_reclock/new_addr*\]\]"
            puts $xdc_outputFile "set_max_delay 24.000 -from \[get_clocks S_AXI_ACLK\] -to \[get_cells \[list \$avb_top/avb_configuration_inst/clear_tx_int* \$avb_top/avb_configuration_inst/tx_send_frame* \$avb_top/avb_configuration_inst/tx_sendslope_int* \$avb_top/avb_configuration_inst/tx_idleslope_int*\]\]"

            # clock domain crossing constraints for RTC Configuration Logic
            #---------------------------------------------------------
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle*\] -to \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle*\] -to \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle*\] -to \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle*\] -to \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync*\]"
            puts $xdc_outputFile "set_max_delay ${avb_rtc_clk_period_ns_2x} -from \[get_clocks S_AXI_ACLK*\] -to \[get_cells \[list \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be* \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\]\]"
            puts $xdc_outputFile "set_max_delay ${avb_rtc_clk_period_ns_3x} -from \[get_clocks S_AXI_ACLK*\] -to \[get_cells \[list \$avb_top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset* \$avb_top/rtc_inst/rtc_configuration_inst/reg_sec_offset* \$avb_top/rtc_inst/rtc_configuration_inst/reg_epoch_offset* \$avb_top/rtc_inst/rtc_configuration_inst/reg_rtc_increment* \$avb_top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\]\]"
            puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle*\] -to \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync*\]"

        } else {
           puts $xdc_outputFile "# axi_ethernet: Unsupported C_AVB value $avb_present "
        }
   } elseif  {[xstrncmp $what_is_family "virtex7"]} {
              puts $xdc_outputFile "# axi_ethernet: Base family is virtex7"
         if { $soft_or_hard_temac == 0} {
             puts $xdc_outputFile "# axi_ethernet: Using soft TEMAC 10/100 Mbps"
             if { $what_is_phy_interface == 0} {
               puts $xdc_outputFile "# axi_ethernet: Using PHY interface MII"
               puts $xdc_outputFile "set tx_mac_aclk_int \[get_pins SOFT_SYS.I_TEMAC/tx_mac_aclk\]"
               puts $xdc_outputFile "set gtx_clk         \[get_nets GTX_CLK\]"


               puts $xdc_outputFile "set rx_mac_aclk_int \[get_clocks -of  \[get_pins SOFT_SYS.I_TEMAC/rx_mac_aclk\] \]"
               puts $xdc_outputFile "create_clock -add -name tx_mac_aclk_int -period 40      \$tx_mac_aclk_int"
               puts $xdc_outputFile "create_clock -add -name GTX_CLK         -period 8.000   \$gtx_clk"
               puts $xdc_outputFile "create_clock -add -name S_AXI_ACLK      -period ${axi_lite_aclk_period_ns} \[get_nets S_AXI_ACLK\]"
               puts $xdc_outputFile "create_clock -add -name AXI_STR_RXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXD_ACLK\]"
               puts $xdc_outputFile "create_clock -add -name AXI_STR_TXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXD_ACLK\]"
               puts $xdc_outputFile "create_clock -add -name AXI_STR_RXS_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXS_ACLK\]"
               puts $xdc_outputFile "create_clock -add -name AXI_STR_TXC_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXC_ACLK\]"

               if { $include_io == 1} {
                  puts $xdc_outputFile "# axi_ethernet: Using IOBs"
                  puts $xdc_outputFile "set     gig_tx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*mii_txd_*\]"
                  puts $xdc_outputFile "set  gig_tx_signals \[ list \$gig_tx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*mii_tx_en*\]\]"
                  puts $xdc_outputFile "set  gig_tx_signals \[ list \$gig_tx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*mii_tx_er*\]\]"

                  puts $xdc_outputFile "set     gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*rxd_to_mac_*\]"
                  puts $xdc_outputFile "set  gig_rx_signals \[ list \$gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*rx_dv_to_mac*\]\]"
                  puts $xdc_outputFile "set  gig_rx_signals \[ list \$gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*rx_er_to_mac*\]\]"

                  puts $xdc_outputFile "set_property IOB TRUE \[get_cells \[ list \$gig_tx_signals \] \]"
                  puts $xdc_outputFile "set_property IOB TRUE \[get_cells \[ list \$gig_rx_signals \] \]"
               } else {
                  puts $xdc_outputFile "# axi_ethernet: Not using IOBs"
               }
               puts $xdc_outputFile "create_clock -add -name MDC               -period 400.000 \[get_pins SOFT_SYS.I_TEMAC/mdc\]"

#
#
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX* }  \] -filter { name =~ *Q } \] "
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*} \] -filter { name =~ *Q } \] "

               puts $xdc_outputFile "set     axi_str_signals \[get_clocks AXI_STR_RXD_ACLK\]"
               puts $xdc_outputFile "set     axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_RXS_ACLK\]\]"
               puts $xdc_outputFile "set     axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXC_ACLK\]\]"
               puts $xdc_outputFile "set     axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXD_ACLK\]\]"
               # axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints
               if { $axi_stream_tx_aclk_period_ns == $axi_lite_aclk_period_ns} {
                  puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
               } else {
                  puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                  puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_TXC_ACLK\]"
               }
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks  AXI_STR_RXD_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks  AXI_STR_RXS_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks  AXI_STR_TXD_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks  AXI_STR_TXC_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks S_AXI_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks  AXI_STR_RXD_ACLK \]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks  AXI_STR_RXS_ACLK \]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks  AXI_STR_TXD_ACLK \]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks  AXI_STR_TXC_ACLK \]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks S_AXI_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks  AXI_STR_RXD_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks  AXI_STR_RXS_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks  AXI_STR_TXD_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks  AXI_STR_TXC_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks S_AXI_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks GTX_CLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
             } elseif  { $what_is_phy_interface == 1} {
             puts $xdc_outputFile "# axi_ethernet: PHY interface GMII is not supported in soft TEMAC 10/100 Mbps mode"
             } elseif  { $what_is_phy_interface == 3} {
             puts $xdc_outputFile "# axi_ethernet: PHY interface RGMII v2.0 is not supported in soft TEMAC 10/100 Mbps mode"
             } elseif  { $what_is_phy_interface == 4} {
             puts $xdc_outputFile "# axi_ethernet: PHY interface SGMII is not supported in soft TEMAC 10/100 Mbps mode"
             } elseif  { $what_is_phy_interface == 5} {
             puts $xdc_outputFile "# axi_ethernet: PHY interface 1000BASE-X is not supported in soft TEMAC 10/100 Mbps mode"
             } else {
             puts $xdc_outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
             }
         } elseif  { $soft_or_hard_temac == 1} {
             puts $xdc_outputFile "# axi_ethernet: Using soft TEMAC 10/100/1000 Mbps"
             if { $what_is_phy_interface == 0} {
               puts $xdc_outputFile "# axi_ethernet: Using PHY interface MII"
               puts $xdc_outputFile "set rx_mac_aclk_int \[get_pins SOFT_SYS.I_TEMAC/rx_mac_aclk\]"
               puts $xdc_outputFile "set tx_mac_aclk_int \[get_pins SOFT_SYS.I_TEMAC/tx_mac_aclk\]"
               puts $xdc_outputFile "set gtx_clk         \[get_nets GTX_CLK\]"

               puts $xdc_outputFile "set rx_mac_aclk_int \[get_clocks -of  \[get_pins SOFT_SYS.I_TEMAC/rx_mac_aclk\]"
               puts $xdc_outputFile "create_clock -add -name tx_mac_aclk_int -period 40      \$tx_mac_aclk_int"
               puts $xdc_outputFile "create_clock -add -name GTX_CLK         -period 8.000   \$gtx_clk"
               puts $xdc_outputFile "create_clock -add -name S_AXI_ACLK      -period ${axi_lite_aclk_period_ns} \[get_nets S_AXI_ACLK\]"
               puts $xdc_outputFile "create_clock -add -name AXI_STR_RXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXD_ACLK\]"
               puts $xdc_outputFile "create_clock -add -name AXI_STR_TXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXD_ACLK\]"
               puts $xdc_outputFile "create_clock -add -name AXI_STR_RXS_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXS_ACLK\]"
               puts $xdc_outputFile "create_clock -add -name AXI_STR_TXC_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXC_ACLK\]"

               if { $include_io == 1} {
                  puts $xdc_outputFile "# axi_ethernet: Using IOBs"
                  puts $xdc_outputFile "set     gig_tx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*mii_txd_*\]"
                  puts $xdc_outputFile "set  gig_tx_signals \[ list \$gig_tx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*mii_tx_en*\]\]"
                  puts $xdc_outputFile "set  gig_tx_signals \[ list \$gig_tx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*mii_tx_er*\]\]"

                  puts $xdc_outputFile "set     gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*rxd_to_mac_*\]"
                  puts $xdc_outputFile "set  gig_rx_signals \[ list \$gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*rx_dv_to_mac*\]\]"
                  puts $xdc_outputFile "set  gig_rx_signals \[ list \$gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*rx_er_to_mac*\]\]"

                  puts $xdc_outputFile "set_property IOB TRUE \[get_cells \[ list \$gig_tx_signals \] \]"
                  puts $xdc_outputFile "set_property IOB TRUE \[get_cells \[ list \$gig_rx_signals \] \]"
               } else {
                  puts $xdc_outputFile "# axi_ethernet: Not using IOBs"
               }
               puts $xdc_outputFile "create_clock -add -name MDC               -period 400.000 \[get_pins SOFT_SYS.I_TEMAC/mdc\]"

#
#
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX* }  \] -filter { name =~ *Q } \] "
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*} \] -filter { name =~ *Q } \] "

               puts $xdc_outputFile "set     axi_str_signals \[get_clocks AXI_STR_RXD_ACLK\]"
               puts $xdc_outputFile "set     axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_RXS_ACLK\]\]"
               puts $xdc_outputFile "set     axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXC_ACLK\]\]"
               puts $xdc_outputFile "set     axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXD_ACLK\]\]"
               # axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints
               if { $axi_stream_tx_aclk_period_ns == $axi_lite_aclk_period_ns} {
                  puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
               } else {
                  puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                  puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_TXC_ACLK\]"
               }
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks  AXI_STR_RXD_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks  AXI_STR_RXS_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks  AXI_STR_TXD_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks  AXI_STR_TXC_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks S_AXI_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks  AXI_STR_RXD_ACLK \]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks  AXI_STR_RXS_ACLK \]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks  AXI_STR_TXD_ACLK \]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks  AXI_STR_TXC_ACLK \]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks S_AXI_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks  AXI_STR_RXD_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks  AXI_STR_RXS_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks  AXI_STR_TXD_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks  AXI_STR_TXC_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks S_AXI_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks GTX_CLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
             } elseif  { $what_is_phy_interface == 1} {
                puts $xdc_outputFile "# axi_ethernet: Using PHY interface GMII"
                puts $xdc_outputFile "set rx_mac_aclk_int \[get_pins SOFT_SYS.I_TEMAC/GEN_GMII.I_GMII/gmii_interface/GEN_V6.GEN_IO.bufr_gmii_rx_clk/O\]"
                puts $xdc_outputFile "set rx_mac_aclk_int \[get_clocks -of \[get_pins SOFT_SYS.I_TEMAC/GEN_GMII.I_GMII/gmii_interface/GEN_V6.GEN_IO.bufr_gmii_rx_clk/O\] \]"
                puts $xdc_outputFile "set tx_mac_aclk_int \[get_pins SOFT_SYS.I_TEMAC/GEN_GMII.I_GMII/clock_inst/bufgmux_speed_clk/O\]"
                puts $xdc_outputFile "set gtx_clk         \[get_nets GTX_CLK\]"

#                puts $xdc_outputFile "create_clock -add -name rx_mac_aclk_int  -period 8.000                            \$rx_mac_aclk_int"
                puts $xdc_outputFile "create_clock -add -name tx_mac_aclk_int  -period 8.000                            \$tx_mac_aclk_int"
                puts $xdc_outputFile "create_clock -add -name GTX_CLK          -period 8.000                            \$gtx_clk"
                puts $xdc_outputFile "create_clock -add -name S_AXI_ACLK       -period ${axi_lite_aclk_period_ns}       \[get_nets S_AXI_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name REF_CLK          -period 5.000                            \[get_pins SOFT_SYS.I_TEMAC/refclk\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_RXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_TXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_RXS_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_TXC_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXC_ACLK\]"

                puts $xdc_outputFile "set bufgmux_I1  \[get_pins SOFT_SYS.I_TEMAC/*/clock_inst/bufgmux_speed_clk/I1\]"
                puts $xdc_outputFile "set bufgmux_CE0 \[get_pins SOFT_SYS.I_TEMAC/*/clock_inst/bufgmux_speed_clk/CE0\]"

                puts $xdc_outputFile "set_false_path -through  \$bufgmux_I1"
                puts $xdc_outputFile "set_false_path -to      \$bufgmux_CE0"

                if { $include_io == 1} {
                   puts $xdc_outputFile "# axi_ethernet: Using IOBs"
                   puts $xdc_outputFile "set     gig_tx_signals \[get_cells SOFT_SYS.I_TEMAC/*/gmii_interface/GEN_V6.GEN_IO.gmii_txd_*\]"
                   puts $xdc_outputFile "set     gig_tx_signals \[ list \$gig_tx_signals \[get_cells SOFT_SYS.I_TEMAC/*/gmii_interface/GEN_V6.GEN_IO.gmii_tx_en*\]\]"
                   puts $xdc_outputFile "set     gig_tx_signals \[ list \$gig_tx_signals \[get_cells SOFT_SYS.I_TEMAC/*/gmii_interface/GEN_V6.GEN_IO.gmii_tx_er*\]\]"

                   puts $xdc_outputFile "set     gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/gmii_interface/GEN_V6.GEN_IO.rxd_to_mac_*\]"
                   puts $xdc_outputFile "set     gig_rx_signals \[ list \$gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/gmii_interface/GEN_V6.GEN_IO.rx_dv_to_mac*\]\]"
                   puts $xdc_outputFile "set     gig_rx_signals \[ list \$gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/gmii_interface/GEN_V6.GEN_IO.rx_er_to_mac*\]\]"

                   puts $xdc_outputFile "set_property IOB TRUE \[get_cells \[ list \$gig_tx_signals \] \]"
                   puts $xdc_outputFile "set_property IOB TRUE \[get_cells \[ list \$gig_rx_signals \] \]"
                } else {
                   puts $xdc_outputFile "# axi_ethernet: Not using IOBs"
                }
                puts $xdc_outputFile "create_clock -add -name MDC               -period 400.000 \[get_pins SOFT_SYS.I_TEMAC/mdc\]"

#

                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX* }  \] -filter { name =~ *Q } \] "
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*} \] -filter { name =~ *Q } \] "


                puts $xdc_outputFile "set     axi_str_signals \[get_clocks AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_RXS_ACLK\]\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXC_ACLK\]\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXD_ACLK\]\]"
                # axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints
                if { $axi_stream_tx_aclk_period_ns == $axi_lite_aclk_period_ns} {
                   puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                } else {
                   puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                   puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                }
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks  AXI_STR_RXD_ACLK \]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks  AXI_STR_RXS_ACLK \]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks  AXI_STR_TXD_ACLK \]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks  AXI_STR_TXC_ACLK \]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks tx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks \$rx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks GTX_CLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 5.000  -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay 5.000  -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay 5.000  -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay 5.000  -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks REF_CLK\] -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks REF_CLK\] -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks REF_CLK\] -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks REF_CLK\] -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 5.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks REF_CLK\] -to \[get_clocks S_AXI_ACLK\]"
             } elseif  { $what_is_phy_interface == 3} {
                puts $xdc_outputFile "# axi_ethernet: Using PHY interface RGMII v2.0"
                puts $xdc_outputFile "create_clock -add -name USR_CLK2       -period 8.000                           \[get_pins SOFT_SYS.I_TEMAC/gtx_clk\]"
                puts $xdc_outputFile "create_clock -add -name GTX_CLK          -period 8.000                            \[get_nets GTX_CLK]"
                puts $xdc_outputFile "create_clock -add -name S_AXI_ACLK       -period ${axi_lite_aclk_period_ns}       \[get_nets S_AXI_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name RGMII_RXC        -period 8.000                            \[get_pins SOFT_SYS.I_TEMAC/rgmii_rxc\]"
                puts $xdc_outputFile "create_clock -add -name REF_CLK          -period 5.000                            \[get_pins SOFT_SYS.I_TEMAC/refclk\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_RXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_TXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_RXS_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_TXC_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXC_ACLK\]"

#
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX* }  \] -filter { name =~ *Q } \] "
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*} \] -filter { name =~ *Q } \] "

                puts $xdc_outputFile "create_clock -add -name MDC              -period 400.000 \[get_pins SOFT_SYS.I_TEMAC/mdc\]"

                puts $xdc_outputFile "set     sync_tx_reset_r4 \[get_cells SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/SYNC_TX_RESET_I/R4*\]"
                puts $xdc_outputFile "#set_false_path -from \$sync_tx_reset_r4 -to \[get_cells SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/rgmii_interface/GEN_*.tx_reset90_sync/R2*\]"
                puts $xdc_outputFile "#set_false_path -from \$sync_tx_reset_r4 -to \[get_cells SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/rgmii_interface/GEN_*.tx_reset90_sync/R1*\]"
                puts $xdc_outputFile "set_false_path -from \$sync_tx_reset_r4 -to \[get_cells SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/enable_gen/GEN_*.reset90gen/R2*\]"
                puts $xdc_outputFile "set_false_path -from \$sync_tx_reset_r4 -to \[get_cells SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/enable_gen/GEN_*.reset90gen/R1*\]"
                puts $xdc_outputFile "set     axi_str_signals \[get_clocks AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_RXS_ACLK\]\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXC_ACLK\]\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXD_ACLK\]\]"

                if { $axi_stream_tx_aclk_period_ns == $axi_lite_aclk_period_ns} {
                   puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                } else {
                   puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                   puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                }

                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks RGMII_RXC\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks RGMII_RXC\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks RGMII_RXC\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks RGMII_RXC\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RGMII_RXC\]   -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RGMII_RXC\]   -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RGMII_RXC\]   -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RGMII_RXC\]   -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks RGMII_RXC\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks RGMII_RXC\]   -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks GTX_CLK\]     -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks USR_CLK2\]    -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks USR_CLK2\]    -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks USR_CLK2\]    -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks USR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks USR_CLK2 \]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks USR_CLK2 \]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks USR_CLK2 \]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks USR_CLK2 \]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks RGMII_RXC\]   -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks GTX_CLK\]     -to \[get_clocks RGMII_RXC\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks REF_CLK\]     -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks REF_CLK\]     -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks REF_CLK\]     -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks REF_CLK\]     -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks REF_CLK\]     -to \[get_clocks S_AXI_ACLK\]"
             } elseif  { $what_is_phy_interface == 4} {
                puts $xdc_outputFile "# axi_ethernet: Using PHY interface SGMII"
                puts $xdc_outputFile "create_clock -add -name S_AXI_ACLK       -period ${axi_lite_aclk_period_ns}       \[get_nets S_AXI_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name GTX_CLK          -period 8.000                            \[get_nets GTX_CLK\]"
                puts $xdc_outputFile "create_clock -add -name TXUSR_CLK2 -period 8.000 \[get_pins SOFT_SYS.I_TEMAC/tx_mac_aclk\]"
                puts $xdc_outputFile "create_clock -add -name RXUSR_CLK2 -period 8.000 \[get_pins SOFT_SYS.I_TEMAC/rx_mac_aclk\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_RXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_TXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_RXS_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_TXC_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXC_ACLK\]"

#
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX* }  \] -filter { name =~ *Q } \] "
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*} \] -filter { name =~ *Q } \] "

                puts $xdc_outputFile "create_clock -add -name MDC -period 400.000 \[get_pins SOFT_SYS.I_TEMAC/mdc\]"

                puts $xdc_outputFile "set     axi_str_signals \[get_clocks AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_RXS_ACLK\]\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXC_ACLK\]\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXD_ACLK\]\]"

                if { $axi_stream_tx_aclk_period_ns == $axi_lite_aclk_period_ns} {
                    puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                } else {
                    puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                    puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                }

                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RXUSR_CLK2\]  -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RXUSR_CLK2\]  -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RXUSR_CLK2\]  -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RXUSR_CLK2\]  -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks RXUSR_CLK2\]  -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks GTX_CLK\]     -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks RXUSR_CLK2\]  -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks GTX_CLK\]     -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks RXUSR_CLK2\]  -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks TXUSR_CLK2\]  -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]  -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]  -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]  -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]  -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks TXUSR_CLK2\]  -to \[get_clocks S_AXI_ACLK\]"

                puts $xdc_outputFile "#create_clock -name pcspma_clkin    -period 8.000  \[get_nets */pcspma_clkin\]"
                puts $xdc_outputFile "#create_clock -name pcspma_gtclkout -period 8.000 \[get_nets */pcspma_gtclkout\]"
                puts $xdc_outputFile "#create_clock -name RXRECCLK        -period 8.000  \[get_nets */RXRECCLK\]"

                puts $xdc_outputFile "set_max_delay 14.000  -from \[get_cells SOFT_PCS_PMA.I_PCSPMA/GEN_*_PCS_PMA.GEN_*_SGMII.I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/wr_addr_gray*\] -to \[all_registers -edge_triggered\]"
                puts $xdc_outputFile "set_max_delay 14.000  -from \[get_cells SOFT_PCS_PMA.I_PCSPMA/GEN_*_PCS_PMA.GEN_*_SGMII.I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/rd_addr_gray*\] -to \[all_registers -edge_triggered\]"

                puts $xdc_outputFile "set_max_delay 6.000   -from \[all_rams\]  -to \[get_cells SOFT_PCS_PMA.I_PCSPMA/GEN_*_PCS_PMA.GEN_*_SGMII.I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/rd_data*\]"
             } elseif  { $what_is_phy_interface == 5} {
                puts $xdc_outputFile "# axi_ethernet: Using PHY interface 1000BASE-X"
                puts $xdc_outputFile "create_clock -add -name S_AXI_ACLK   -period ${axi_lite_aclk_period_ns}          \[get_nets S_AXI_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name GTX_CLK      -period 8.000                               \[get_nets GTX_CLK\]"
                puts $xdc_outputFile "create_clock -add -name TXUSR_CLK2 -period 8.000 \[get_pins SOFT_SYS.I_TEMAC/tx_mac_aclk\]"
                puts $xdc_outputFile "create_clock -add -name RXUSR_CLK2 -period 8.000 \[get_pins SOFT_SYS.I_TEMAC/rx_mac_aclk\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_RXD_ACLK -period ${axi_stream_tx_aclk_period_ns} \[get_nets AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_TXD_ACLK -period ${axi_stream_tx_aclk_period_ns} \[get_nets AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_RXS_ACLK -period ${axi_stream_tx_aclk_period_ns} \[get_nets AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_TXC_ACLK -period ${axi_stream_tx_aclk_period_ns} \[get_nets AXI_STR_TXC_ACLK\]"

#
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX* }  \] -filter { name =~ *Q } \] "
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*} \] -filter { name =~ *Q } \] "

                puts $xdc_outputFile "create_clock -add -name MDC                               -period 400.000 \[get_pins SOFT_SYS.I_TEMAC/mdc\]"

                puts $xdc_outputFile "set     axi_str_signals \[get_clocks AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_RXS_ACLK\]\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXC_ACLK\]\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXD_ACLK\]\]"

                if { $axi_stream_tx_aclk_period_ns == $axi_lite_aclk_period_ns} {
                    puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                } else {
                    puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                    puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_RXD_ACLK\]  -to \[get_clocks S_AXI_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_RXS_ACLK\]  -to \[get_clocks S_AXI_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_TXD_ACLK\]  -to \[get_clocks S_AXI_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_TXC_ACLK\]  -to \[get_clocks S_AXI_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                }

                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RXUSR_CLK2\]    -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RXUSR_CLK2\]    -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks RXUSR_CLK2\]    -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks GTX_CLK\]     -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks RXUSR_CLK2\]    -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks GTX_CLK\]     -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks RXUSR_CLK2\]    -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks S_AXI_ACLK\]"

                puts $xdc_outputFile "#create_clock -name pcspma_clkin    -period 8.000  \[get_nets */pcspma_clkin\]"
                puts $xdc_outputFile "#create_clock -name pcspma_gtclkout -period 8.000 \[get_nets */pcspma_gtclkout\]"
             } else {
                puts $xdc_outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
             }
         } elseif  { $soft_or_hard_temac == 2} {
            puts $xdc_outputFile "# axi_ethernet: V6 hard TEMAC, C_TYPE = 6, 10/100/1000 Mbps is not supported in virtex7"
         } else {
            puts $xdc_outputFile "# axi_ethernet: Unsupported C_TYPE value $soft_or_hard_temac "
         }
        if { $avb_present == 0} {
            puts $xdc_outputFile "# axi_ethernet: AVB is not present"
        } elseif { $avb_present == 1} {
            puts $xdc_outputFile "# axi_ethernet: AVB is present"
            puts $xdc_outputFile "create_clock -add -name RTC_CLK -period ${avb_rtc_clk_period_ns} \[get_pins SOFT_SYS.I_TEMAC/rtc_clk\]"
            puts $xdc_outputFile "set avb_top SOFT_SYS.I_TEMAC/GEN_GMII.I_GMII/trimac_core/TRIMAC_TOP/ETHERNET_AVB.eth_avb_inst/top/top"
            puts $xdc_outputFile "set_max_delay ${avb_rtc_clk_period_ns}  -from \[get_cells \$avb_top/tx_rtc_sample_inst/sample_toggle_req*\] -to \[get_cells \$avb_top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync*\]"
            puts $xdc_outputFile "set_max_delay 8.000  -from \[get_cells \$avb_top/tx_rtc_sample_inst/timestamp*\] -to \[all_registers -edge_triggered\]"
            puts $xdc_outputFile "set_max_delay ${avb_rtc_clk_period_ns}  -from \[get_cells \$avb_top/rx_rtc_sample_inst/sample_toggle_req*\] -to \[get_cells \$avb_top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync*\]"
            puts $xdc_outputFile "set_max_delay 8.000  -from \[get_cells \$avb_top/rx_rtc_sample_inst/timestamp*\] -to \[all_registers -edge_triggered\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/tx_rtc_sample_inst/sample_taken_toggle*\] -to \[get_cells \$avb_top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/rx_rtc_sample_inst/sample_taken_toggle*\] -to \[get_cells \$avb_top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good*\] -to \[get_cells \$avb_top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle*\] -to \[get_cells \$avb_top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2*\] -to \[get_cells \$avb_top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync*\]"

            # clock domain crossing constraints for Tx Configuration
            #---------------------------------------------------------
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/avb_configuration_inst/tx_cpu_reclock/wr_toggle*\] -to \[get_cells \$avb_top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/avb_configuration_inst/tx_cpu_reclock/rd_toggle*\] -to \[get_cells \$avb_top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle*\] -to \[get_cells \$avb_top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle*\] -to \[get_cells \$avb_top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync*\]"
            puts $xdc_outputFile "set_max_delay ${avb_rtc_clk_period_ns_2x} -from \[get_clocks S_AXI_ACLK\] -to \[get_cells \[list \$avb_top/avb_configuration_inst/tx_cpu_reclock/new_be* \$avb_top/avb_configuration_inst/tx_cpu_reclock/new_addr*\]\]"
            puts $xdc_outputFile "set_max_delay 24.000 -from \[get_clocks S_AXI_ACLK\] -to \[get_cells \[list \$avb_top/avb_configuration_inst/clear_tx_int* \$avb_top/avb_configuration_inst/tx_send_frame* \$avb_top/avb_configuration_inst/tx_sendslope_int* \$avb_top/avb_configuration_inst/tx_idleslope_int*\]\]"

            # clock domain crossing constraints for RTC Configuration Logic
            #---------------------------------------------------------
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle*\] -to \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle*\] -to \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle*\] -to \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle*\] -to \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync*\]"
            puts $xdc_outputFile "set_max_delay ${avb_rtc_clk_period_ns_2x} -from \[get_clocks S_AXI_ACLK*\] -to \[get_cells \[list \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be* \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\]\]"
            puts $xdc_outputFile "set_max_delay ${avb_rtc_clk_period_ns_3x} -from \[get_clocks S_AXI_ACLK*\] -to \[get_cells \[list \$avb_top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset* \$avb_top/rtc_inst/rtc_configuration_inst/reg_sec_offset* \$avb_top/rtc_inst/rtc_configuration_inst/reg_epoch_offset* \$avb_top/rtc_inst/rtc_configuration_inst/reg_rtc_increment* \$avb_top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\]\]"
            puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle*\] -to \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync*\]"

        } else {
           puts $xdc_outputFile "# axi_ethernet: Unsupported C_AVB value $avb_present "
        }
   } elseif  {[xstrncmp $what_is_family "artix7"]}  {
              puts $xdc_outputFile "# axi_ethernet: Base family is artix7"
         if { $soft_or_hard_temac == 0} {
             puts $xdc_outputFile "# axi_ethernet: Using soft TEMAC 10/100 Mbps"
             if { $what_is_phy_interface == 0} {
               puts $xdc_outputFile "# axi_ethernet: Using PHY interface MII"
               puts $xdc_outputFile "set rx_mac_aclk_int \[get_pins SOFT_SYS.I_TEMAC/rx_mac_aclk\]"
               puts $xdc_outputFile "set rx_mac_aclk_int \[get_clocks -of \[get_pins SOFT_SYS.I_TEMAC/rx_mac_aclk\]\]"
               puts $xdc_outputFile "set tx_mac_aclk_int \[get_pins SOFT_SYS.I_TEMAC/tx_mac_aclk\]"
               puts $xdc_outputFile "set gtx_clk         \[get_nets GTX_CLK\]"

#               puts $xdc_outputFile "create_clock -add -name rx_mac_aclk_int -period 40      \$rx_mac_aclk_int"
               puts $xdc_outputFile "create_clock -add -name tx_mac_aclk_int -period 40      \$tx_mac_aclk_int"
               puts $xdc_outputFile "create_clock -add -name GTX_CLK         -period 8.000   \$gtx_clk"
               puts $xdc_outputFile "create_clock -add -name S_AXI_ACLK      -period ${axi_lite_aclk_period_ns} \[get_nets S_AXI_ACLK\]"
               puts $xdc_outputFile "create_clock -add -name AXI_STR_RXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXD_ACLK\]"
               puts $xdc_outputFile "create_clock -add -name AXI_STR_TXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXD_ACLK\]"
               puts $xdc_outputFile "create_clock -add -name AXI_STR_RXS_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXS_ACLK\]"
               puts $xdc_outputFile "create_clock -add -name AXI_STR_TXC_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXC_ACLK\]"

               if { $include_io == 1} {
                  puts $xdc_outputFile "# axi_ethernet: Using IOBs"
                  puts $xdc_outputFile "set     gig_tx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*mii_txd_*\]"
                  puts $xdc_outputFile "set  gig_tx_signals \[ list \$gig_tx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*mii_tx_en*\]\]"
                  puts $xdc_outputFile "set  gig_tx_signals \[ list \$gig_tx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*mii_tx_er*\]\]"

                  puts $xdc_outputFile "set     gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*rxd_to_mac_*\]"
                  puts $xdc_outputFile "set  gig_rx_signals \[ list \$gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*rx_dv_to_mac*\]\]"
                  puts $xdc_outputFile "set  gig_rx_signals \[ list \$gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*rx_er_to_mac*\]\]"

                  puts $xdc_outputFile "set_property IOB TRUE \[get_cells \[ list \$gig_tx_signals \] \]"
                  puts $xdc_outputFile "set_property IOB TRUE \[get_cells \[ list \$gig_rx_signals \] \]"
               } else {
                  puts $xdc_outputFile "# axi_ethernet: Not using IOBs"
               }
               puts $xdc_outputFile "create_clock -add -name MDC               -period 400.000 \[get_pins SOFT_SYS.I_TEMAC/mdc\]"

#
#
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX* }  \] -filter { name =~ *Q } \] "
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*} \] -filter { name =~ *Q } \] "

               puts $xdc_outputFile "set     axi_str_signals \[get_clocks AXI_STR_RXD_ACLK\]"
               puts $xdc_outputFile "set     axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_RXS_ACLK\]\]"
               puts $xdc_outputFile "set     axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXC_ACLK\]\]"
               puts $xdc_outputFile "set     axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXD_ACLK\]\]"
               # axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints
               if { $axi_stream_tx_aclk_period_ns == $axi_lite_aclk_period_ns} {
                  puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
               } else {
                  puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                  puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_TXC_ACLK\]"
               }
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks  AXI_STR_RXD_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks  AXI_STR_RXS_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks  AXI_STR_TXD_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks  AXI_STR_TXC_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks S_AXI_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks  AXI_STR_RXD_ACLK \]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks  AXI_STR_RXS_ACLK \]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks  AXI_STR_TXD_ACLK \]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks  AXI_STR_TXC_ACLK \]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks S_AXI_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks  AXI_STR_RXD_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks  AXI_STR_RXS_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks  AXI_STR_TXD_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks  AXI_STR_TXC_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks S_AXI_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks GTX_CLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
             } elseif  { $what_is_phy_interface == 1} {
             puts $xdc_outputFile "# axi_ethernet: PHY interface GMII is not supported in soft TEMAC 10/100 Mbps mode"
             } elseif  { $what_is_phy_interface == 3} {
             puts $xdc_outputFile "# axi_ethernet: PHY interface RGMII v2.0 is not supported in soft TEMAC 10/100 Mbps mode"
             } elseif  { $what_is_phy_interface == 4} {
             puts $xdc_outputFile "# axi_ethernet: PHY interface SGMII is not supported in soft TEMAC 10/100 Mbps mode"
             } elseif  { $what_is_phy_interface == 5} {
             puts $xdc_outputFile "# axi_ethernet: PHY interface 1000BASE-X is not supported in soft TEMAC 10/100 Mbps mode"
             } else {
             puts $xdc_outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
             }
         } elseif  { $soft_or_hard_temac == 1} {
             puts $xdc_outputFile "# axi_ethernet: Using soft TEMAC 10/100/1000 Mbps"
             if { $what_is_phy_interface == 0} {
               puts $xdc_outputFile "# axi_ethernet: Using PHY interface MII"
               puts $xdc_outputFile "set rx_mac_aclk_int \[get_pins SOFT_SYS.I_TEMAC/rx_mac_aclk\]"
               puts $xdc_outputFile "set rx_mac_aclk_int \[get_clocks -of \[get_pins SOFT_SYS.I_TEMAC/rx_mac_aclk\] \]"
               puts $xdc_outputFile "set tx_mac_aclk_int \[get_pins SOFT_SYS.I_TEMAC/tx_mac_aclk\]"
               puts $xdc_outputFile "set gtx_clk         \[get_nets GTX_CLK\]"

#               puts $xdc_outputFile "create_clock -add -name rx_mac_aclk_int -period 40      \$rx_mac_aclk_int"
               puts $xdc_outputFile "create_clock -add -name tx_mac_aclk_int -period 40      \$tx_mac_aclk_int"
               puts $xdc_outputFile "create_clock -add -name GTX_CLK         -period 8.000   \$gtx_clk"
               puts $xdc_outputFile "create_clock -add -name S_AXI_ACLK      -period ${axi_lite_aclk_period_ns} \[get_nets S_AXI_ACLK\]"
               puts $xdc_outputFile "create_clock -add -name AXI_STR_RXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXD_ACLK\]"
               puts $xdc_outputFile "create_clock -add -name AXI_STR_TXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXD_ACLK\]"
               puts $xdc_outputFile "create_clock -add -name AXI_STR_RXS_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXS_ACLK\]"
               puts $xdc_outputFile "create_clock -add -name AXI_STR_TXC_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXC_ACLK\]"

               if { $include_io == 1} {
                  puts $xdc_outputFile "# axi_ethernet: Using IOBs"
                  puts $xdc_outputFile "set     gig_tx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*mii_txd_*\]"
                  puts $xdc_outputFile "set  gig_tx_signals \[ list \$gig_tx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*mii_tx_en*\]\]"
                  puts $xdc_outputFile "set  gig_tx_signals \[ list \$gig_tx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*mii_tx_er*\]\]"

                  puts $xdc_outputFile "set     gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*rxd_to_mac_*\]"
                  puts $xdc_outputFile "set  gig_rx_signals \[ list \$gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*rx_dv_to_mac*\]\]"
                  puts $xdc_outputFile "set  gig_rx_signals \[ list \$gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/*/*rx_er_to_mac*\]\]"

                  puts $xdc_outputFile "set_property IOB TRUE \[get_cells \[ list \$gig_tx_signals \] \]"
                  puts $xdc_outputFile "set_property IOB TRUE \[get_cells \[ list \$gig_rx_signals \] \]"
               } else {
                  puts $xdc_outputFile "# axi_ethernet: Not using IOBs"
               }
               puts $xdc_outputFile "create_clock -add -name MDC               -period 400.000 \[get_pins SOFT_SYS.I_TEMAC/mdc\]"

#
#
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX* }  \] -filter { name =~ *Q } \] "
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*} \] -filter { name =~ *Q } \] "

               puts $xdc_outputFile "set     axi_str_signals \[get_clocks AXI_STR_RXD_ACLK\]"
               puts $xdc_outputFile "set     axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_RXS_ACLK\]\]"
               puts $xdc_outputFile "set     axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXC_ACLK\]\]"
               puts $xdc_outputFile "set     axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXD_ACLK\]\]"
               # axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints
               if { $axi_stream_tx_aclk_period_ns == $axi_lite_aclk_period_ns} {
                  puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
               } else {
                  puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                  puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                  puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_TXC_ACLK\]"
               }
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks  AXI_STR_RXD_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks  AXI_STR_RXS_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks  AXI_STR_TXD_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks  AXI_STR_TXC_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks S_AXI_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks  AXI_STR_RXD_ACLK \]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks  AXI_STR_RXS_ACLK \]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks  AXI_STR_TXD_ACLK \]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks  AXI_STR_TXC_ACLK \]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks S_AXI_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks  AXI_STR_RXD_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks  AXI_STR_RXS_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks  AXI_STR_TXD_ACLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks  AXI_STR_TXC_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks S_AXI_ACLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks tx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks \$rx_mac_aclk_int\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks GTX_CLK\]"
               puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks GTX_CLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
             } elseif  { $what_is_phy_interface == 1} {
                puts $xdc_outputFile "# axi_ethernet: Using PHY interface GMII"
                puts $xdc_outputFile "set rx_mac_aclk_int \[get_pins SOFT_SYS.I_TEMAC/GEN_GMII.I_GMII/gmii_interface/GEN_V6.GEN_IO.bufr_gmii_rx_clk/O\]"
                puts $xdc_outputFile "set rx_mac_aclk_int \[get_clocks -of  \[get_pins SOFT_SYS.I_TEMAC/GEN_GMII.I_GMII/gmii_interface/GEN_V6.GEN_IO.bufr_gmii_rx_clk/O\]\]"
                puts $xdc_outputFile "set tx_mac_aclk_int \[get_pins SOFT_SYS.I_TEMAC/GEN_GMII.I_GMII/clock_inst/bufgmux_speed_clk/O\]"
                puts $xdc_outputFile "set gtx_clk         \[get_nets GTX_CLK\]"

#                puts $xdc_outputFile "create_clock -add -name rx_mac_aclk_int  -period 8.000                            \$rx_mac_aclk_int"
                puts $xdc_outputFile "create_clock -add -name tx_mac_aclk_int  -period 8.000                            \$tx_mac_aclk_int"
                puts $xdc_outputFile "create_clock -add -name GTX_CLK          -period 8.000                            \$gtx_clk"
                puts $xdc_outputFile "create_clock -add -name S_AXI_ACLK       -period ${axi_lite_aclk_period_ns}       \[get_nets S_AXI_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name REF_CLK          -period 5.000                            \[get_pins SOFT_SYS.I_TEMAC/refclk\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_RXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_TXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_RXS_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_TXC_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXC_ACLK\]"

                puts $xdc_outputFile "set bufgmux_I1  \[get_pins SOFT_SYS.I_TEMAC/*/clock_inst/bufgmux_speed_clk/I1\]"
                puts $xdc_outputFile "set bufgmux_CE0 \[get_pins SOFT_SYS.I_TEMAC/*/clock_inst/bufgmux_speed_clk/CE0\]"

                puts $xdc_outputFile "set_false_path -through  \$bufgmux_I1"
                puts $xdc_outputFile "set_false_path -to      \$bufgmux_CE0"

                if { $include_io == 1} {
                   puts $xdc_outputFile "# axi_ethernet: Using IOBs"
                   puts $xdc_outputFile "set     gig_tx_signals \[get_cells SOFT_SYS.I_TEMAC/*/gmii_interface/GEN_V6.GEN_IO.gmii_txd_*\]"
                   puts $xdc_outputFile "set     gig_tx_signals \[ list \$gig_tx_signals \[get_cells SOFT_SYS.I_TEMAC/*/gmii_interface/GEN_V6.GEN_IO.gmii_tx_en*\]\]"
                   puts $xdc_outputFile "set     gig_tx_signals \[ list \$gig_tx_signals \[get_cells SOFT_SYS.I_TEMAC/*/gmii_interface/GEN_V6.GEN_IO.gmii_tx_er*\]\]"

                   puts $xdc_outputFile "set     gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/gmii_interface/GEN_V6.GEN_IO.rxd_to_mac_*\]"
                   puts $xdc_outputFile "set     gig_rx_signals \[ list \$gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/gmii_interface/GEN_V6.GEN_IO.rx_dv_to_mac*\]\]"
                   puts $xdc_outputFile "set     gig_rx_signals \[ list \$gig_rx_signals \[get_cells SOFT_SYS.I_TEMAC/*/gmii_interface/GEN_V6.GEN_IO.rx_er_to_mac*\]\]"

                   puts $xdc_outputFile "set_property IOB TRUE \[get_cells \[ list \$gig_tx_signals \] \]"
                   puts $xdc_outputFile "set_property IOB TRUE \[get_cells \[ list \$gig_rx_signals \] \]"
                } else {
                   puts $xdc_outputFile "# axi_ethernet: Not using IOBs"
                }
                puts $xdc_outputFile "create_clock -add -name MDC               -period 400.000 \[get_pins SOFT_SYS.I_TEMAC/mdc\]"

#

                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX* }  \] -filter { name =~ *Q } \] "
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*} \] -filter { name =~ *Q } \] "


                puts $xdc_outputFile "set     axi_str_signals \[get_clocks AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_RXS_ACLK\]\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXC_ACLK\]\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXD_ACLK\]\]"
                # axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints
                if { $axi_stream_tx_aclk_period_ns == $axi_lite_aclk_period_ns} {
                   puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                } else {
                   puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                   puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                }
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks  AXI_STR_RXD_ACLK \]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks  AXI_STR_RXS_ACLK \]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks  AXI_STR_TXD_ACLK \]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks  AXI_STR_TXC_ACLK \]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks tx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks GTX_CLK\] -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks tx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks tx_mac_aclk_int\] -to \[get_clocks \$rx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks \$rx_mac_aclk_int\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000  -from \[get_clocks GTX_CLK\] -to \[get_clocks \$rx_mac_aclk_int\]"
                puts $xdc_outputFile "set_max_delay 5.000  -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay 5.000  -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay 5.000  -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay 5.000  -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks REF_CLK\] -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks REF_CLK\] -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks REF_CLK\] -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks REF_CLK\] -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 5.000  -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_clocks REF_CLK\] -to \[get_clocks S_AXI_ACLK\]"
             } elseif  { $what_is_phy_interface == 3} {
                puts $xdc_outputFile "# axi_ethernet: Using PHY interface RGMII v2.0"
                puts $xdc_outputFile "create_clock -add -name USR_CLK2       -period 8.000                           \[get_pins SOFT_SYS.I_TEMAC/gtx_clk\]"
                puts $xdc_outputFile "create_clock -add -name GTX_CLK          -period 8.000                            \[get_nets GTX_CLK]"
                puts $xdc_outputFile "create_clock -add -name S_AXI_ACLK       -period ${axi_lite_aclk_period_ns}       \[get_nets S_AXI_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name RGMII_RXC        -period 8.000                            \[get_pins SOFT_SYS.I_TEMAC/rgmii_rxc\]"
                puts $xdc_outputFile "create_clock -add -name REF_CLK          -period 5.000                            \[get_pins SOFT_SYS.I_TEMAC/refclk\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_RXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_TXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_RXS_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_TXC_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXC_ACLK\]"

#
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX* }  \] -filter { name =~ *Q } \] "
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*} \] -filter { name =~ *Q } \] "

                puts $xdc_outputFile "create_clock -add -name MDC              -period 400.000 \[get_pins SOFT_SYS.I_TEMAC/mdc\]"

                puts $xdc_outputFile "set     sync_tx_reset_r4 \[get_cells SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/SYNC_TX_RESET_I/R4*\]"
                puts $xdc_outputFile "#set_false_path -from \$sync_tx_reset_r4 -to \[get_cells SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/rgmii_interface/GEN_*.tx_reset90_sync/R2*\]"
                puts $xdc_outputFile "#set_false_path -from \$sync_tx_reset_r4 -to \[get_cells SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/rgmii_interface/GEN_*.tx_reset90_sync/R1*\]"
                puts $xdc_outputFile "set_false_path -from \$sync_tx_reset_r4 -to \[get_cells SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/enable_gen/GEN_*.reset90gen/R2*\]"
                puts $xdc_outputFile "set_false_path -from \$sync_tx_reset_r4 -to \[get_cells SOFT_SYS.I_TEMAC/GEN_RGMII.I_RGMII/enable_gen/GEN_*.reset90gen/R1*\]"
                puts $xdc_outputFile "set     axi_str_signals \[get_clocks AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_RXS_ACLK\]\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXC_ACLK\]\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXD_ACLK\]\]"

                if { $axi_stream_tx_aclk_period_ns == $axi_lite_aclk_period_ns} {
                   puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                } else {
                   puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                   puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                   puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                }

                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks RGMII_RXC\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks RGMII_RXC\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks RGMII_RXC\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks RGMII_RXC\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RGMII_RXC\]   -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RGMII_RXC\]   -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RGMII_RXC\]   -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RGMII_RXC\]   -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks RGMII_RXC\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks RGMII_RXC\]   -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks GTX_CLK\]     -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks USR_CLK2\]    -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks USR_CLK2\]    -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks USR_CLK2\]    -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks USR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks USR_CLK2 \]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks USR_CLK2 \]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks USR_CLK2 \]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks USR_CLK2 \]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks RGMII_RXC\]   -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks GTX_CLK\]     -to \[get_clocks RGMII_RXC\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks REF_CLK\]     -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks REF_CLK\]     -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks REF_CLK\]     -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks REF_CLK\]     -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks REF_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks REF_CLK\]     -to \[get_clocks S_AXI_ACLK\]"
             } elseif  { $what_is_phy_interface == 4} {
                puts $xdc_outputFile "# axi_ethernet: Using PHY interface SGMII"
                puts $xdc_outputFile "create_clock -add -name S_AXI_ACLK       -period ${axi_lite_aclk_period_ns}       \[get_nets S_AXI_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name GTX_CLK          -period 8.000                            \[get_nets GTX_CLK\]"
                puts $xdc_outputFile "create_clock -add -name TXUSR_CLK2 -period 8.000 \[get_pins SOFT_SYS.I_TEMAC/tx_mac_aclk\]"
                puts $xdc_outputFile "create_clock -add -name RXUSR_CLK2 -period 8.000 \[get_pins SOFT_SYS.I_TEMAC/rx_mac_aclk\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_RXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_TXD_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_RXS_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_TXC_ACLK -period ${axi_stream_tx_aclk_period_ns}  \[get_nets AXI_STR_TXC_ACLK\]"

#
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX* }  \] -filter { name =~ *Q } \] "
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*} \] -filter { name =~ *Q } \] "

                puts $xdc_outputFile "create_clock -add -name MDC -period 400.000 \[get_pins SOFT_SYS.I_TEMAC/mdc\]"

                puts $xdc_outputFile "set     axi_str_signals \[get_clocks AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_RXS_ACLK\]\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXC_ACLK\]\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXD_ACLK\]\]"

                if { $axi_stream_tx_aclk_period_ns == $axi_lite_aclk_period_ns} {
                    puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                } else {
                    puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                    puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks S_AXI_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                }

                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RXUSR_CLK2\]  -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RXUSR_CLK2\]  -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RXUSR_CLK2\]  -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RXUSR_CLK2\]  -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks RXUSR_CLK2\]  -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks GTX_CLK\]     -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks RXUSR_CLK2\]  -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks GTX_CLK\]     -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks RXUSR_CLK2\]  -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks TXUSR_CLK2\]  -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]  -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]  -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]  -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]  -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks TXUSR_CLK2\]  -to \[get_clocks S_AXI_ACLK\]"

                puts $xdc_outputFile "#create_clock -name pcspma_clkin    -period 8.000  \[get_nets */pcspma_clkin\]"
                puts $xdc_outputFile "#create_clock -name pcspma_gtclkout -period 8.000 \[get_nets */pcspma_gtclkout\]"
                puts $xdc_outputFile "#create_clock -name RXRECCLK        -period 8.000  \[get_nets */RXRECCLK\]"

                puts $xdc_outputFile "set_max_delay 14.000  -from \[get_cells SOFT_PCS_PMA.I_PCSPMA/GEN_*_PCS_PMA.GEN_*_SGMII.I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/wr_addr_gray*\] -to \[all_registers -edge_triggered\]"
                puts $xdc_outputFile "set_max_delay 14.000  -from \[get_cells SOFT_PCS_PMA.I_PCSPMA/GEN_*_PCS_PMA.GEN_*_SGMII.I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/rd_addr_gray*\] -to \[all_registers -edge_triggered\]"

                puts $xdc_outputFile "set_max_delay 6.000   -from \[all_rams\]  -to \[get_cells SOFT_PCS_PMA.I_PCSPMA/GEN_*_PCS_PMA.GEN_*_SGMII.I_GIG_ETH_PCS_PMA_CORE/transceiver_inst/rx_elastic_buffer_inst/rd_data*\]"
             } elseif  { $what_is_phy_interface == 5} {
                puts $xdc_outputFile "# axi_ethernet: Using PHY interface 1000BASE-X"
                puts $xdc_outputFile "create_clock -add -name S_AXI_ACLK   -period ${axi_lite_aclk_period_ns}          \[get_nets S_AXI_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name GTX_CLK      -period 8.000                               \[get_nets GTX_CLK\]"
                puts $xdc_outputFile "create_clock -add -name TXUSR_CLK2 -period 8.000 \[get_pins SOFT_SYS.I_TEMAC/tx_mac_aclk\]"
                puts $xdc_outputFile "create_clock -add -name RXUSR_CLK2 -period 8.000 \[get_pins SOFT_SYS.I_TEMAC/rx_mac_aclk\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_RXD_ACLK -period ${axi_stream_tx_aclk_period_ns} \[get_nets AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_TXD_ACLK -period ${axi_stream_tx_aclk_period_ns} \[get_nets AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_RXS_ACLK -period ${axi_stream_tx_aclk_period_ns} \[get_nets AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "create_clock -add -name AXI_STR_TXC_ACLK -period ${axi_stream_tx_aclk_period_ns} \[get_nets AXI_STR_TXC_ACLK\]"

#
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_REQ_TO_TX* }  \] -filter { name =~ *Q } \] "
                puts $xdc_outputFile "set_max_delay 7.8 -throu \[get_pins -of \[get_cells -hier -filter { name =~ *SOFT_SYS.I_TEMAC/*/trimac_core/TRIMAC_TOP/TRI_SPEED.TRIMAC_INST/FLOW/RX_PAUSE/PAUSE_VALUE_TO_TX*} \] -filter { name =~ *Q } \] "

                puts $xdc_outputFile "create_clock -add -name MDC                               -period 400.000 \[get_pins SOFT_SYS.I_TEMAC/mdc\]"

                puts $xdc_outputFile "set     axi_str_signals \[get_clocks AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_RXS_ACLK\]\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXC_ACLK\]\]"
                puts $xdc_outputFile "set    axi_str_signals    \[ list \$axi_str_signals \[get_clocks AXI_STR_TXD_ACLK\]\]"

                if { $axi_stream_tx_aclk_period_ns == $axi_lite_aclk_period_ns} {
                    puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are the same so no need for clock domain crossing constraints"
                } else {
                    puts $xdc_outputFile "# axi_ethernet: AXIStream and AXI Lite clocks are not the same so we need clock domain crossing constraints"
                    puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_RXD_ACLK\]  -to \[get_clocks S_AXI_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_RXS_ACLK\]  -to \[get_clocks S_AXI_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_TXD_ACLK\]  -to \[get_clocks S_AXI_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks  AXI_STR_TXC_ACLK\]  -to \[get_clocks S_AXI_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                    puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks S_AXI_ACLK\] -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                }

                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RXUSR_CLK2\]    -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RXUSR_CLK2\]    -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks RXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks RXUSR_CLK2\]    -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks GTX_CLK\]     -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks GTX_CLK\]     -to \[get_clocks S_AXI_ACLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks RXUSR_CLK2\]    -to \[get_clocks GTX_CLK\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks GTX_CLK\]     -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks RXUSR_CLK2\]    -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 8.000                           -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks RXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_RXD_ACLK\] -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_RXS_ACLK\] -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_TXD_ACLK\] -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks  AXI_STR_TXC_ACLK\] -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_RXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_RXS_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXD_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay ${axi_stream_tx_aclk_period_ns} -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks  AXI_STR_TXC_ACLK\]"
                puts $xdc_outputFile "set_max_delay 5.000                           -from \[get_clocks S_AXI_ACLK\]  -to \[get_clocks TXUSR_CLK2\]"
                puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns}      -from \[get_clocks TXUSR_CLK2\]    -to \[get_clocks S_AXI_ACLK\]"

                puts $xdc_outputFile "#create_clock -name pcspma_clkin    -period 8.000  \[get_nets */pcspma_clkin\]"
                puts $xdc_outputFile "#create_clock -name pcspma_gtclkout -period 8.000 \[get_nets */pcspma_gtclkout\]"
             } else {
                puts $xdc_outputFile "# axi_ethernet: Unsupported C_PHY_TYPE value $what_is_phy_interface "
             }
         } elseif  { $soft_or_hard_temac == 2} {
            puts $xdc_outputFile "# axi_ethernet: V6 hard TEMAC, C_TYPE = 6, 10/100/1000 Mbps is not supported in artix7"
         } else {
            puts $xdc_outputFile "# axi_ethernet: Unsupported C_TYPE value $soft_or_hard_temac "
         }
        if { $avb_present == 0} {
            puts $xdc_outputFile "# axi_ethernet: AVB is not present"
        } elseif { $avb_present == 1} {
            puts $xdc_outputFile "# axi_ethernet: AVB is present"
            puts $xdc_outputFile "create_clock -add -name RTC_CLK -period ${avb_rtc_clk_period_ns} \[get_pins SOFT_SYS.I_TEMAC/rtc_clk\]"
            puts $xdc_outputFile "set avb_top SOFT_SYS.I_TEMAC/GEN_GMII.I_GMII/trimac_core/TRIMAC_TOP/ETHERNET_AVB.eth_avb_inst/top/top"
            puts $xdc_outputFile "set_max_delay ${avb_rtc_clk_period_ns}  -from \[get_cells \$avb_top/tx_rtc_sample_inst/sample_toggle_req*\] -to \[get_cells \$avb_top/tx_rtc_sample_inst/resync_sample_toggle_req/data_sync*\]"
            puts $xdc_outputFile "set_max_delay 8.000  -from \[get_cells \$avb_top/tx_rtc_sample_inst/timestamp*\] -to \[all_registers -edge_triggered\]"
            puts $xdc_outputFile "set_max_delay ${avb_rtc_clk_period_ns}  -from \[get_cells \$avb_top/rx_rtc_sample_inst/sample_toggle_req*\] -to \[get_cells \$avb_top/rx_rtc_sample_inst/resync_sample_toggle_req/data_sync*\]"
            puts $xdc_outputFile "set_max_delay 8.000  -from \[get_cells \$avb_top/rx_rtc_sample_inst/timestamp*\] -to \[all_registers -edge_triggered\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/tx_rtc_sample_inst/sample_taken_toggle*\] -to \[get_cells \$avb_top/tx_rtc_sample_inst/resync_sample_taken_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/rx_rtc_sample_inst/sample_taken_toggle*\] -to \[get_cells \$avb_top/rx_rtc_sample_inst/resync_sample_taken_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/frame_was_good*\] -to \[get_cells \$avb_top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_frame_tx_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/rx_clear_toggle*\] -to \[get_cells \$avb_top/ptp_packet_buffer_inst/rx_ptp_packet_buffer_inst/rx_mac_logic_inst/resync_clear_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/tx_valid_reg2*\] -to \[get_cells \$avb_top/ptp_packet_buffer_inst/tx_ptp_packet_buffer_inst/tx_mac_logic_inst/resync_frame_tx_toggle/data_sync*\]"

            # clock domain crossing constraints for Tx Configuration
            #---------------------------------------------------------
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/avb_configuration_inst/tx_cpu_reclock/wr_toggle*\] -to \[get_cells \$avb_top/avb_configuration_inst/tx_cpu_reclock/resync_write_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/avb_configuration_inst/tx_cpu_reclock/rd_toggle*\] -to \[get_cells \$avb_top/avb_configuration_inst/tx_cpu_reclock/resync_read_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/avb_configuration_inst/tx_cpu_reclock/new_rd_toggle*\] -to \[get_cells \$avb_top/avb_configuration_inst/tx_cpu_reclock/resync_new_rd_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/avb_configuration_inst/tx_cpu_reclock/new_wr_toggle*\] -to \[get_cells \$avb_top/avb_configuration_inst/tx_cpu_reclock/resync_new_wr_toggle/data_sync*\]"
            puts $xdc_outputFile "set_max_delay ${avb_rtc_clk_period_ns_2x} -from \[get_clocks S_AXI_ACLK\] -to \[get_cells \[list \$avb_top/avb_configuration_inst/tx_cpu_reclock/new_be* \$avb_top/avb_configuration_inst/tx_cpu_reclock/new_addr*\]\]"
            puts $xdc_outputFile "set_max_delay 24.000 -from \[get_clocks S_AXI_ACLK\] -to \[get_cells \[list \$avb_top/avb_configuration_inst/clear_tx_int* \$avb_top/avb_configuration_inst/tx_send_frame* \$avb_top/avb_configuration_inst/tx_sendslope_int* \$avb_top/avb_configuration_inst/tx_idleslope_int*\]\]"

            # clock domain crossing constraints for RTC Configuration Logic
            #---------------------------------------------------------
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/wr_toggle*\] -to \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_write_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/rd_toggle*\] -to \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_read_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_rd_toggle*\] -to \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_rd_toggle/data_sync*\]"
            puts $xdc_outputFile "set_false_path -from \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_wr_toggle*\] -to \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/resync_new_wr_toggle/data_sync*\]"
            puts $xdc_outputFile "set_max_delay ${avb_rtc_clk_period_ns_2x} -from \[get_clocks S_AXI_ACLK*\] -to \[get_cells \[list \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_be* \$avb_top/rtc_inst/rtc_configuration_inst/rtc_cpu_reclock/new_addr*\]\]"
            puts $xdc_outputFile "set_max_delay ${avb_rtc_clk_period_ns_3x} -from \[get_clocks S_AXI_ACLK*\] -to \[get_cells \[list \$avb_top/rtc_inst/rtc_configuration_inst/reg_nanosec_offset* \$avb_top/rtc_inst/rtc_configuration_inst/reg_sec_offset* \$avb_top/rtc_inst/rtc_configuration_inst/reg_epoch_offset* \$avb_top/rtc_inst/rtc_configuration_inst/reg_rtc_increment* \$avb_top/rtc_inst/rtc_configuration_inst/reg_offset_8k*\]\]"
            puts $xdc_outputFile "set_max_delay ${axi_lite_aclk_period_ns} -from \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/pulse1div128sec_toggle*\] -to \[get_cells \$avb_top/rtc_inst/rtc_configuration_inst/resync_set_toggle/data_sync*\]"

        } else {
           puts $xdc_outputFile "# axi_ethernet: Unsupported C_AVB value $avb_present "
        }
   }
    puts $xdc_outputFile "#"
    puts $xdc_outputFile "#"
    puts $xdc_outputFile "\n"

    # Close the file
    close $xdc_outputFile
}

