BEGIN axi_10geth

## Peripheral Options
OPTION STYLE = HDL
OPTION RUN_NGCBUILD = TRUE
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION USAGE_LEVEL = BASE_USER
#OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
#OPTION ADDITIONAL_OUTPUTS = CONSTRAINTS
#OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
#OPTION SYSLEVEL_DRC_PROC = check_syslevel_settings
OPTION DESC = AXI Ethernet Embedded IP
#OPTION LONG_DESC = Embedded Ethernet core that implements a Tri-mode (10/100/1000 Mbps) Ethernet MAC or a 10/100 Mbps Ethernet MAC to support MII/GMII/SGMII/RGMII/1000Base-X PHY types
#OPTION IP_GROUP = Communication High-Speed:MICROBLAZE:ARM-A9
#OPTION DATASHEET_NAME = ds759_axi_ethernet
OPTION ARCH_SUPPORT_MAP = (spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRODUCTION, virtex6lsx=PRODUCTION, qspartan6l=PRODUCTION, qvirtex6lx=PRODUCTION, qvirtex6sx=PRODUCTION, qvirtex6fx=PRODUCTION, qvirtex6tx=PRODUCTION, virtex7=PRODUCTION, kintex7=PRODUCTION, artix7=PRE_PRODUCTION, zynq=PRE_PRODUCTION, virtex7l=PRE_PRODUCTION, kintex7l=PRE_PRODUCTION, aartix7=PRE_PRODUCTION, artix7l=PRE_PRODUCTION, virtex7ht=PRE_PRODUCTION, qvirtex7=PRE_PRODUCTION, qkintex7=PRE_PRODUCTION, qkintex7l=PRE_PRODUCTION, qartix7=PRE_PRODUCTION, qartix7l=PRE_PRODUCTION, azynq=PRE_PRODUCTION, qzynq=PRE_PRODUCTION, qvirtex7l=PRE_PRODUCTION)

#IO_INTERFACE IO_IF = AXIETHERNETIF, IO_TYPE = XIL_AXIETHERNET_V1

## Bus Interfaces
#BUS_INTERFACE BUS = S_AXI, BUS_STD = AXI, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = AXI_STR_TXC, BUS_STD = AXIS, BUS_TYPE = TARGET
BUS_INTERFACE BUS = AXI_STR_TXD, BUS_STD = AXIS, BUS_TYPE = TARGET
BUS_INTERFACE BUS = AXI_STR_RXS, BUS_STD = AXIS, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = AXI_STR_RXD, BUS_STD = AXIS, BUS_TYPE = INITIATOR
#BUS_INTERFACE BUS = AXI_STR_AVBTX, BUS_STD = AXIS, BUS_TYPE = TARGET, ISVALID = (C_AVB == 1)
#BUS_INTERFACE BUS = AXI_STR_AVBRX, BUS_STD = AXIS, BUS_TYPE = INITIATOR, ISVALID = (C_AVB == 1)

## Generics for VHDL or Parameters for Verilog
#PARAMETER C_S_AXI_PROTOCOL = AXI4LITE, DT = STRING, BUS = S_AXI, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_AXI_STR_TXC_TDATA_WIDTH = 32, DT = INTEGER, BUS = AXI_STR_TXC, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_AXI_STR_TXD_TDATA_WIDTH = 64, DT = INTEGER, BUS = AXI_STR_TXD, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_AXI_STR_RXS_TDATA_WIDTH = 32, DT = INTEGER, BUS = AXI_STR_RXS, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_AXI_STR_RXD_TDATA_WIDTH = 64, DT = INTEGER, BUS = AXI_STR_RXD, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_AXI_STR_TXC_PROTOCOL = XIL_AXI_STREAM_ETH_CTRL, DT = STRING, BUS = AXI_STR_TXC, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_AXI_STR_TXD_PROTOCOL = XIL_AXI_STREAM_ETH_DATA, DT = STRING, BUS = AXI_STR_TXD, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_AXI_STR_RXS_PROTOCOL = XIL_AXI_STREAM_ETH_CTRL, DT = STRING, BUS = AXI_STR_RXS, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_AXI_STR_RXD_PROTOCOL = XIL_AXI_STREAM_ETH_DATA, DT = STRING, BUS = AXI_STR_RXD, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_FAMILY = virtex6, DT = STRING
PARAMETER C_DBG_PORT = 0, DT = INTEGER
#PARAMETER C_S_AXI_ACLK_FREQ_HZ = 100000000, DT = INTEGER, BUS = S_AXI, IO_IS = clk_freq, CLK_PORT = S_AXI_ACLK, CLK_UNIT = HZ, ASSIGNMENT = REQUIRE
#PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector(31 downto 0), PAIR = C_HIGHADDR, ADDRESS = BASE, BUS = S_AXI, MIN_SIZE = 0x1000, ASSIGNMENT = REQUIRE, TYPE = NON_HDL
#PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector(31 downto 0), PAIR = C_BASEADDR, ADDRESS = HIGH, BUS = S_AXI, ASSIGNMENT = REQUIRE, TYPE = NON_HDL
#PARAMETER C_S_AXI_ADDR_WIDTH = 32, DT = INTEGER, BUS = S_AXI, ASSIGNMENT = CONSTANT
#PARAMETER C_S_AXI_DATA_WIDTH = 32, DT = INTEGER, BUS = S_AXI, ASSIGNMENT = CONSTANT
#PARAMETER C_S_AXI_ID_WIDTH = 16, BUS = S_AXI, DT = INTEGER, ASSIGNMENT = UPDATE
#PARAMETER C_AXI_STR_TXC_ACLK_FREQ_HZ = 100000000, DT = INTEGER, BUS = AXI_STR_TXC, TYPE = NON_HDL

## Ports
#PORT S_AXI_ACLK = "", DIR = I, BUS = S_AXI, SIGIS = CLK
#PORT S_AXI_ARESETN = ARESETN, DIR = I, BUS = S_AXI:AXI_STR_TXC:AXI_STR_TXD:AXI_STR_RXS:AXI_STR_RXD, SIGIS = RST
#PORT S_AXI_AWADDR = AWADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
#PORT S_AXI_AWVALID = AWVALID, DIR = I, BUS = S_AXI
#PORT S_AXI_AWREADY = AWREADY, DIR = O, BUS = S_AXI
#PORT S_AXI_WDATA = WDATA, DIR = I, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
#PORT S_AXI_WSTRB = WSTRB, DIR = I, VEC = [((C_S_AXI_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, BUS = S_AXI
#PORT S_AXI_WVALID = WVALID, DIR = I, BUS = S_AXI
#PORT S_AXI_WREADY = WREADY, DIR = O, BUS = S_AXI
#PORT S_AXI_BRESP = BRESP, DIR = O, VEC = [1:0], BUS = S_AXI
#PORT S_AXI_BVALID = BVALID, DIR = O, BUS = S_AXI
#PORT S_AXI_BREADY = BREADY, DIR = I, BUS = S_AXI
#PORT S_AXI_ARADDR = ARADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
#PORT S_AXI_ARVALID = ARVALID, DIR = I, BUS = S_AXI
#PORT S_AXI_ARREADY = ARREADY, DIR = O, BUS = S_AXI
#PORT S_AXI_RDATA = RDATA, DIR = O, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
#PORT S_AXI_RRESP = RRESP, DIR = O, VEC = [1:0], BUS = S_AXI
#PORT S_AXI_RVALID = RVALID, DIR = O, BUS = S_AXI
#PORT S_AXI_RREADY = RREADY, DIR = I, BUS = S_AXI

PORT mm2s_clk    = ACLK, DIR = I, BUS = AXI_STR_TXD:AXI_STR_TXC, SIGIS = CLK, INITIALVAL = VCC
PORT mm2s_resetn = ARESETN, DIR = I, SIGIS = RST, INITIAL = VCC

PORT txd_tvalid  = TVALID, DIR = I, BUS = AXI_STR_TXD, INITIALVAL = GND
PORT txd_tready  = TREADY, DIR = O, BUS = AXI_STR_TXD
PORT txd_tlast   = TLAST, DIR = I, BUS = AXI_STR_TXD, INITIALVAL = GND
PORT txd_tkeep   = TKEEP, DIR = I, BUS = AXI_STR_TXD, INITIALVAL = VCC, VEC = [7:0], ENDIAN = LITTLE
PORT txd_tdata   = TDATA, DIR = I, BUS = AXI_STR_TXD, INITIALVAL = GND, VEC = [63:0], ENDIAN = LITTLE
PORT txc_tvalid  = TVALID, DIR = I, BUS = AXI_STR_TXC, INITIALVAL = GND
PORT txc_tready  = TREADY, DIR = O, BUS = AXI_STR_TXC
PORT txc_tlast   = TLAST, DIR = I, BUS = AXI_STR_TXC, INITIALVAL = GND
PORT txc_tkeep   = TKEEP, DIR = I, BUS = AXI_STR_TXC, INITIALVAL = VCC, VEC = [3:0], ENDIAN = LITTLE
PORT txc_tdata   = TDATA, DIR = I, BUS = AXI_STR_TXC, INITIALVAL = GND, VEC = [31:0], ENDIAN = LITTLE

PORT s2mm_clk    = ACLK, DIR = I, BUS = AXI_STR_RXD, SIGIS = CLK, INITIALVAL = VCC
PORT s2mm_resetn = ARESETN, DIR = I, SIGIS = RST, INITIALVAL = VCC
PORT rxd_tvalid  = TVALID, DIR = O, BUS = AXI_STR_RXD
PORT rxd_tready  = TREADY, DIR = I, BUS = AXI_STR_RXD, INITIALVAL = GND
PORT rxd_tlast   = TLAST, DIR = O, BUS = AXI_STR_RXD
PORT rxd_tkeep   = TKEEP, DIR = O, BUS = AXI_STR_RXD, VEC = [7:0], ENDIAN = LITTLE
PORT rxd_tdata   = TDATA, DIR = O, BUS = AXI_STR_RXD, VEC = [63:0], ENDIAN = LITTLE
PORT rxs_tvalid  = TVALID, DIR = O, BUS = AXI_STR_RXS
PORT rxs_tready  = TREADY, DIR = I, BUS = AXI_STR_RXS, INITIALVAL = GND
PORT rxs_tlast   = TLAST, DIR = O, BUS = AXI_STR_RXS
PORT rxs_tkeep   = TKEEP, DIR = O, BUS = AXI_STR_RXS, VEC = [3:0], ENDIAN = LITTLE
PORT rxs_tdata   = TDATA, DIR = O, BUS = AXI_STR_RXS, VEC = [31:0], ENDIAN = LITTLE

BUS_INTERFACE BUS = AXI_MAC_TX, BUS_STD = AXIS, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = AXI_MAC_RX, BUS_STD = AXIS, BUS_TYPE = TARGET
PORT rx_clk            = "CLK",    DIR = I, SIGIS = CLK, BUS = AXI_MAC_RX, INITIALVAL = VCC
PORT rx_reset          = "RESET",  DIR = I, SIGIS = RST, BUS = AXI_MAC_RX

PORT rx_axis_mac_tvalid= TVALID,   DIR = I, BUS = AXI_MAC_RX
PORT rx_axis_mac_tready= TREADY,   DIR = O, BUS = AXI_MAC_RX
PORT rx_axis_mac_tdata = TDATA,    DIR = I, BUS = AXI_MAC_RX, VEC = [63:0], ENDIAN = LITTLE
PORT rx_axis_mac_tkeep = TKEEP,    DIR = I, BUS = AXI_MAC_RX, VEC = [7:0], ENDIAN = LITTLE
PORT rx_axis_mac_tlast = TLAST,    DIR = I, BUS = AXI_MAC_RX
PORT rx_axis_mac_tuser = TUSER,    DIR = I, BUS = AXI_MAC_RX

PORT tx_clk            = "CLK",    DIR = I, SIGIS = CLK, BUS = AXI_MAC_TX , INITIALVAL = VCC
PORT tx_reset          = "RESET",  DIR = I, SIGIS = RST, BUS = AXI_MAC_TX

PORT tx_axis_mac_tdata = TDATA,    DIR = O, BUS = AXI_MAC_TX, VEC = [63:0], ENDIAN = LITTLE
PORT tx_axis_mac_tvalid= TVALID,   DIR = O, BUS = AXI_MAC_TX
PORT tx_axis_mac_tkeep = TKEEP,    DIR = O, BUS = AXI_MAC_TX, VEC = [7:0], ENDIAN = LITTLE
PORT tx_axis_mac_tlast = TLAST,    DIR = O, BUS = AXI_MAC_TX
PORT tx_axis_mac_tready= TREADY,   DIR = I, BUS = AXI_MAC_TX
PORT tx_axis_mac_tuser = TUSER,    DIR = O, BUS = AXI_MAC_TX

END
